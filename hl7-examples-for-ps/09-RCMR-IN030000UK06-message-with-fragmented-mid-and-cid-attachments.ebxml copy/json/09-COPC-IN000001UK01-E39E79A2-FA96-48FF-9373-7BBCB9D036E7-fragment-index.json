{
	"ebXML":"<SOAP:Envelope xmlns:xsi=\"http://www.w3c.org/2001/XML-Schema-Instance\" xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd\" xmlns:hl7ebxml=\"urn:hl7-org:transport/ebxml/DSTUv1.0\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <SOAP:Header> <eb:MessageHeader SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:From> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-801710</eb:PartyId> </eb:From> <eb:To> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-803229</eb:PartyId> </eb:To> <eb:CPAId>S2030731A2137927</eb:CPAId> <eb:ConversationId>6E242658-3D8E-11E3-A7DC-172BDA00FA72</eb:ConversationId> <eb:Service>urn:nhs:names:services:gp2gp</eb:Service> <eb:Action>COPC_IN000001UK01</eb:Action> <eb:MessageData> <eb:MessageId>E39E79A2-FA96-48FF-9373-7BBCB9D036E7</eb:MessageId> <eb:Timestamp>2013-10-25T17:48:54Z</eb:Timestamp> </eb:MessageData> <eb:DuplicateElimination/> </eb:MessageHeader> <eb:AckRequested SOAP:mustUnderstand=\"1\" eb:version=\"2.0\" eb:signed=\"false\" SOAP:actor=\"urn:oasis:names:tc:ebxml-msg:actor:nextMSH\"/> </SOAP:Header> <SOAP:Body> <eb:Manifest SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:Reference xlink:href=\"cid:5548ea65-3d95-11e3-b6ae-df63bc51a0f2@spine.nhs.uk\"> <eb:Schema eb:location=\"http://www.nhsia.nhs.uk/schemas/HL7-Message.xsd\" eb:version=\"1.0\"/> <eb:Description xml:lang=\"en\">HL7 payload</eb:Description> <hl7ebxml:Payload style=\"HL7\" encoding=\"XML\" version=\"3.0\"/> </eb:Reference> <eb:Reference eb:id=\"1C135B3C-5AA5-4BF1-A08B-E6002455B806\" xlink:href=\"cid:435B1171-31F6-4EF2-AD7F-C7E64EEFF357\"> <eb:Description xml:lang=\"en\"> Filename=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_0.messageattachment\" ContentType=image/tiff Compressed=Yes LargeAttachment=No OriginalBase64=Yes </eb:Description> </eb:Reference> <eb:Reference xlink:href=\"mid:77128B31-4245-4AFC-8DA2-8A40623A5101\"> <eb:Description xml:lang=\"en\"> Filename=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_1.messageattachment\" ContentType=text/plain Compressed=No LargeAttachment=No OriginalBase64=Yes </eb:Description> </eb:Reference> <eb:Reference xlink:href=\"mid:24AED038-FF3E-466D-820A-AE1B334D68EE\"> <eb:Description xml:lang=\"en\"> Filename=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_2.messageattachment\" ContentType=text/plain Compressed=No LargeAttachment=No OriginalBase64=Yes </eb:Description> </eb:Reference> </eb:Manifest> </SOAP:Body> </SOAP:Envelope>",
	"payload":"<COPC_IN000001UK01 xmlns=\"urn:hl7-org:v3\"> <id root=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7\"/> <creationTime value=\"20131025165929228\"/> <versionCode code=\"V3NPfIT3.0\"/> <interactionId root=\"2.16.840.1.113883.2.1.3.2.4.12\" extension=\"COPC_IN000001UK01\"/> <processingCode code=\"P\"/> <processingModeCode code=\"T\"/> <acceptAckCode code=\"NE\"/> <communicationFunctionRcv> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"276827251543\"/> </device> </communicationFunctionRcv> <communicationFunctionSnd> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </device> </communicationFunctionSnd> <ControlActEvent> <author1> <AgentSystemSDS> <agentSystemSDS> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </agentSystemSDS> </AgentSystemSDS> </author1> <subject> <PayloadInformation xmlns=\"urn:hl7-org:v3\" xmlns:npfitlc=\"NPFIT:HL7:Localisation\"> <code code=\"GP2GPLMATTACHMENTINFO\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment Information\"/> <id root=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7\"/> <npfitlc:messageType root=\"2.16.840.1.113883.2.1.3.2.4.18.17\" extension=\"RCMR_MT000001GB01\"/> <value> <Gp2gpfragment xmlns=\"urn:nhs:names:services:gp2gp\"> <Version>01</Version> <Recipients> <Recipient>C81007</Recipient> </Recipients> <From>B83002</From> <subject>Attachment: 7CCB6A77-360E-434E-8CF4-97C7C2B47D70_book.txt</subject> <message-id>E39E79A2-FA96-48FF-9373-7BBCB9D036E7</message-id> </Gp2gpfragment> </value> <pertinentInformation> <sequenceNumber value=\"1\"/> <pertinentPayloadBody> <code code=\"GP2GPLMATTACHMENT\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment\"/> <id root=\"3E0AF536-7F1B-4E72-8DF6-68E7416362E9\"/> <value><reference value=\"7CCB6A77-360E-434E-8CF4-97C7C2B47D70_book.txt\"/></value> </pertinentPayloadBody> </pertinentInformation> </PayloadInformation> </subject> </ControlActEvent> </COPC_IN000001UK01>",
	"attachments":[{"content_type":"text/plain","is_base64":"true","description":"Filename=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_0.messageattachment\" ContentType=text/plain Compressed=No LargeAttachment=Yes OriginalBase64=Yes","payload":""}],
	"external_attachments":[{"document_id":"E39E79A2-FA96-48FF-9373-7BBCB9D036E","message_id":"77128B31-4245-4AFC-8DA2-8A40623A5101","title":"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_1.messageattachment","description":"Filename=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_1.messageattachment\" ContentType=text/plain Compressed=No LargeAttachment=No OriginalBase64=Yes"},{"document_id":"E39E79A2-FA96-48FF-9373-7BBCB9D036E","message_id":"24AED038-FF3E-466D-820A-AE1B334D68EE","title":"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_2.messageattachment","description":"Filename=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_2.messageattachment\" ContentType=text/plain Compressed=No LargeAttachment=No OriginalBase64=Yes"}]
}
	