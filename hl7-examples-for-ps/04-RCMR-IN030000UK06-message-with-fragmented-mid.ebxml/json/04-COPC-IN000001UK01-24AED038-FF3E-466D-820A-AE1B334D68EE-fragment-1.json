{
	"ebXML":"<SOAP:Envelope xmlns:xsi=\"http://www.w3c.org/2001/XML-Schema-Instance\" xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd\" xmlns:hl7ebxml=\"urn:hl7-org:transport/ebxml/DSTUv1.0\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <SOAP:Header> <eb:MessageHeader SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:From> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-801710</eb:PartyId> </eb:From> <eb:To> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-803229</eb:PartyId> </eb:To> <eb:CPAId>S2030731A2137927</eb:CPAId> <eb:ConversationId>6E242658-3D8E-11E3-A7DC-172BDA00FA67</eb:ConversationId> <eb:Service>urn:nhs:names:services:gp2gp</eb:Service> <eb:Action>COPC_IN000001UK01</eb:Action> <eb:MessageData> <eb:MessageId>24AED038-FF3E-466D-820A-AE1B334D68EE</eb:MessageId> <eb:Timestamp>2013-10-28T08:59:26Z</eb:Timestamp> </eb:MessageData> <eb:DuplicateElimination/> </eb:MessageHeader> <eb:AckRequested SOAP:mustUnderstand=\"1\" eb:version=\"2.0\" eb:signed=\"false\" SOAP:actor=\"urn:oasis:names:tc:ebxml-msg:actor:nextMSH\"/> </SOAP:Header> <SOAP:Body> <eb:Manifest SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:Reference xlink:href=\"cid:3f35e4da-3faf-11e3-b10c-8bc15657569c@spine.nhs.uk\"> <eb:Schema eb:location=\"http://www.nhsia.nhs.uk/schemas/HL7-Message.xsd\" eb:version=\"1.0\"/> <eb:Description xml:lang=\"en\">HL7 payload</eb:Description> <hl7ebxml:Payload style=\"HL7\" encoding=\"XML\" version=\"3.0\"/> </eb:Reference> <eb:Reference xlink:href=\"cid:3f3d10cb-3faf-11e3-b10c-8bc15657569c\"> <eb:Description xml:lang=\"en\">Attachment</eb:Description> </eb:Reference> </eb:Manifest> </SOAP:Body> </SOAP:Envelope>",
	"payload":"<COPC_IN000001UK01 xmlns=\"urn:hl7-org:v3\"> <id root=\"24AED038-FF3E-466D-820A-AE1B334D68EE\"/> <creationTime value=\"20131025174854117\"/> <versionCode code=\"V3NPfIT3.0\"/> <interactionId root=\"2.16.840.1.113883.2.1.3.2.4.12\" extension=\"COPC_IN000001UK01\"/> <processingCode code=\"P\"/> <processingModeCode code=\"T\"/> <acceptAckCode code=\"NE\"/> <communicationFunctionRcv> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"276827251543\"/> </device> </communicationFunctionRcv> <communicationFunctionSnd> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </device> </communicationFunctionSnd> <ControlActEvent> <author1> <AgentSystemSDS> <agentSystemSDS> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </agentSystemSDS> </AgentSystemSDS> </author1> <subject> <PayloadInformation xmlns=\"urn:hl7-org:v3\" xmlns:npfitlc=\"NPFIT:HL7:Localisation\"> <code code=\"GP2GPLMATTACHMENTINFO\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment Information\"/> <id root=\"24AED038-FF3E-466D-820A-AE1B334D68EE\"/> <npfitlc:messageType root=\"2.16.840.1.113883.2.1.3.2.4.18.17\" extension=\"RCMR_MT000001GB01\"/> <value> <Gp2gpfragment xmlns=\"urn:nhs:names:services:gp2gp\"> <Version>01</Version> <Recipients> <Recipient>C81007</Recipient> </Recipients> <From>B83002</From> <subject>Attachment: E39E79A2-FA96-48FF-9373-7BBCB9D036E7_1.messageattachment</subject> <message-id>24AED038-FF3E-466D-820A-AE1B334D68EE</message-id> </Gp2gpfragment> </value> <pertinentInformation> <sequenceNumber value=\"1\"/> <pertinentPayloadBody> <code code=\"GP2GPLMATTACHMENT\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment\"/> <id root=\"03A44A4D-989C-42EA-AC6F-0F2EB0CFA924\"/> <value><reference value=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_1.messageattachment\"/></value> </pertinentPayloadBody> </pertinentInformation> </PayloadInformation> </subject> </ControlActEvent> </COPC_IN000001UK01>",
	"attachments":[{"content_type":"text/plain","is_base64":"true","description":"ContentType=text/plain OriginalBase64=Yes","payload":"eels, men
disfigured by fear of death now crowded together, crushing one another,
dying, stepping over the dying and killing one another, only to move on
a few steps and be killed themselves in the same way.

Every ten seconds a cannon ball flew compressing the air around, or a
shell burst in the midst of that dense throng, killing some and
splashing with blood those near them.

Dolokhov--now an officer--wounded in the arm, and on foot, with the
regimental commander on horseback and some ten men of his company,
represented all that was left of that whole regiment. Impelled by the
crowd, they had got wedged in at the approach to the dam and, jammed in
on all sides, had stopped because a horse in front had fallen under a
cannon and the crowd were dragging it out. A cannon ball killed someone
behind them, another fell in front and splashed Dolokhov with blood. The
crowd, pushing forward desperately, squeezed together, moved a few
steps, and again stopped.

"Move on a hundred yards and we are certainly saved, remain here another
two minutes and it is certain death," thought each one.

Dolokhov who was in the midst of the crowd forced his way to the edge of
the dam, throwing two soldiers off their feet, and ran onto the slippery
ice that covered the millpool.

"Turn this way!" he shouted, jumping over the ice which creaked under
him; "turn this way!" he shouted to those with the gun. "It bears!..."

The ice bore him but it swayed and creaked, and it was plain that it
would give way not only under a cannon or a crowd, but very soon even
under his weight alone. The men looked at him and pressed to the bank,
hesitating to step onto the ice. The general on horseback at the
entrance to the dam raised his hand and opened his mouth to address
Dolokhov. Suddenly a cannon ball hissed so low above the crowd that
everyone ducked. It flopped into something moist, and the general fell
from his horse in a pool of blood. Nobody gave him a look or thought of
raising him.

"Get onto the ice, over the ice! Go on! Turn! Don't you hear? Go on!"
innumerable voices suddenly shouted after the ball had struck the
general, the men themselves not knowing what, or why, they were
shouting.

One of the hindmost guns that was going onto the dam turned off onto the
ice. Crowds of soldiers from the dam began running onto the frozen pond.
The ice gave way under one of the foremost soldiers, and one leg slipped
into the water. He tried to right himself but fell in up to his waist.
The nearest soldiers shrank back, the gun driver stopped his horse, but
from behind still came the shouts: "Onto the ice, why do you stop? Go
on! Go on!" And cries of horror were heard in the crowd. The soldiers
near the gun waved their arms and beat the horses to make them turn and
move on. The horses moved off the bank. The ice, that had held under
those on foot, collapsed in a great mass, and some forty men who were on
it dashed, some forward and some back, drowning one another.

Still the cannon balls continued regularly to whistle and flop onto the
ice and into the water and oftenest of all among the crowd that covered
the dam, the pond, and the bank.




CHAPTER XIX

On the Pratzen Heights, where he had fallen with the flagstaff in his
hand, lay Prince Andrew Bolkonski bleeding profusely and unconsciously
uttering a gentle, piteous, and childlike moan.

Toward evening he ceased moaning and became quite still. He did not know
how long his unconsciousness lasted. Suddenly he again felt that he was
alive and suffering from a burning, lacerating pain in his head.

"Where is it, that lofty sky that I did not know till now, but saw
today?" was his first thought. "And I did not know this suffering
either," he thought. "Yes, I did not know anything, anything at all till
now. But where am I?"

He listened and heard the sound of approaching horses, and voices
speaking French. He opened his eyes. Above him again was the same lofty
sky with clouds that had risen and were floating still higher, and
between them gleamed blue infinity. He did not turn his head and did not
see those who, judging by the sound of hoofs and voices, had ridden up
and stopped near him.

It was Napoleon accompanied by two aides-de-camp. Bonaparte riding over
the battlefield had given final orders to strengthen the batteries
firing at the Augesd Dam and was looking at the killed and wounded left
on the field.

"Fine men!" remarked Napoleon, looking at a dead Russian grenadier, who,
with his face buried in the ground and a blackened nape, lay on his
stomach with an already stiffened arm flung wide.

"The ammunition for the guns in position is exhausted, Your Majesty,"
said an adjutant who had come from the batteries that were firing at
Augesd.

"Have some brought from the reserve," said Napoleon, and having gone on
a few steps he stopped before Prince Andrew, who lay on his back with
the flagstaff that had been dropped beside him. (The flag had already
been taken by the French as a trophy.)

"That's a fine death!" said Napoleon as he gazed at Bolkonski.

Prince Andrew understood that this was said of him and that it was
Napoleon who said it. He heard the speaker addressed as Sire. But he
heard the words as he might have heard the buzzing of a fly. Not only
did they not interest him, but he took no notice of them and at once
forgot them. His head was burning, he felt himself bleeding to death,
and he saw above him the remote, lofty, and everlasting sky. He knew it
was Napoleon--his hero--but at that moment Napoleon seemed to him such a
small, insignificant creature compared with what was passing now between
himself and that lofty infinite sky with the clouds flying over it. At
that moment it meant nothing to him who might be standing over him, or
what was said of him; he was only glad that people were standing near
him and only wished that they would help him and bring him back to life,
which seemed to him so beautiful now that he had today learned to
understand it so differently. He collected all his strength, to stir and
utter a sound. He feebly moved his leg and uttered a weak, sickly groan
which aroused his own pity.

"Ah! He is alive," said Napoleon. "Lift this young man up and carry him
to the dressing station."

Having said this, Napoleon rode on to meet Marshal Lannes, who, hat in
hand, rode up smiling to the Emperor to congratulate him on the victory.

Prince Andrew remembered nothing more: he lost consciousness from the
terrible pain of being lifted onto the stretcher, the jolting while
being moved, and the probing of his wound at the dressing station. He
did not regain consciousness till late in the day, when with other
wounded and captured Russian officers he was carried to the hospital.
During this transfer he felt a little stronger and was able to look
about him and even speak.

The first words he heard on coming to his senses were those of a French
convoy officer, who said rapidly: "We must halt here: the Emperor will
pass here immediately; it will please him to see these gentlemen
prisoners."

"There are so many prisoners today, nearly the whole Russian army, that
he is probably tired of them," said another officer.

"All the same! They say this one is the commander of all the Emperor
Alexander's Guards," said the first one, indicating a Russian officer in
the white uniform of the Horse Guards.

Bolkonski recognized Prince Repnin whom he had met in Petersburg
society. Beside him stood a lad of nineteen, also a wounded officer of
the Horse Guards.

Bonaparte, having come up at a gallop, stopped his horse.

"Which is the senior?" he asked, on seeing the prisoners.

They named the colonel, Prince Repnin.

"You are the commander of the Emperor Alexander's regiment of Horse
Guards?" asked Napoleon.

"I commanded a squadron," replied Repnin.

"Your regiment fulfilled its duty honorably," said Napoleon.

"The praise of a great commander is a soldier's highest reward," said
Repnin.

"I bestow it with pleasure," said Napoleon. "And who is that young man
beside you?"

Prince Repnin named Lieutenant Sukhtelen.

After looking at him Napoleon smiled.

"He's very young to come to meddle with us."

"Youth is no hindrance to courage," muttered Sukhtelen in a failing
voice.

"A splendid reply!" said Napoleon. "Young man, you will go far!"

Prince Andrew, who had also been brought forward before the Emperor's
eyes to complete the show of prisoners, could not fail to attract his
attention. Napoleon apparently remembered seeing him on the battlefield
and, addressing him, again used the epithet "young man" that was
connected in his memory with Prince Andrew.

"Well, and you, young man," said he. "How do you feel, mon brave?"

Though five minutes before, Prince Andrew had been able to say a few
words to the soldiers who were carrying him, now with his eyes fixed
straight on Napoleon, he was silent.... So insignificant at that moment
seemed to him all the interests that engrossed Napoleon, so mean did his
hero himself with his paltry vanity and joy in victory appear, compared
to the lofty, equitable, and kindly sky which he had seen and
understood, that he could not answer him.

Everything seemed so futile and insignificant in comparison with the
stern and solemn train of thought that weakness from loss of blood,
suffering, and the nearness of death aroused in him. Looking into
Napoleon's eyes Prince Andrew thought of the insignificance of
greatness, the unimportance of life which no one could understand, and
the still greater unimportance of death, the meaning of which no one
alive could understand or explain.

The Emperor without waiting for an answer turned away and said to one of
the officers as he went: "Have these gentlemen attended to and taken to
my bivouac; let my doctor, Larrey, examine their wounds. Au revoir,
Prince Repnin!" and he spurred his horse and galloped away.

His face shone with self-satisfaction and pleasure.

The soldiers who had carried Prince Andrew had noticed and taken the
little gold icon Princess Mary had hung round her brother's neck, but
seeing the favor the Emperor showed the prisoners, they now hastened to
return the holy image.

Prince Andrew did not see how and by whom it was replaced, but the
little icon with its thin gold chain suddenly appeared upon his chest
outside his uniform.

"It would be good," thought Prince Andrew, glancing at the icon his
sister had hung round his neck with such emotion and reverence, "it
would be good if everything were as clear and simple as it seems to
Mary. How good it would be to know where to seek for help in this life,
and what to expect after it beyond the grave! How happy and calm I
should be if I could now say: 'Lord, have mercy on me!'... But to whom
should I say that? Either to a Power indefinable, incomprehensible,
which I not only cannot address but which I cannot even express in
words--the Great All or Nothing-" said he to himself, "or to that God
who has been sewn into this amulet by Mary! There is nothing certain,
nothing at all except the unimportance of everything I understand, and
the greatness of something incomprehensible but all-important."

The stretchers moved on. At every jolt he again felt unendurable pain;
his feverishness increased and he grew delirious. Visions of his father,
wife, sister, and future son, and the tenderness he had felt the night
before the battle, the figure of the insignificant little Napoleon, and
above all this the lofty sky, formed the chief subjects of his delirious
fancies.

The quiet home life and peaceful happiness of Bald Hills presented
itself to him. He was already enjoying that happiness when that little
Napoleon had suddenly appeared with his unsympathizing look of
shortsighted delight at the misery of others, and doubts and torments
had followed, and only the heavens promised peace. Toward morning all
these dreams melted and merged into the chaos and darkness of
unconciousness and oblivion which in the opinion of Napoleon's doctor,
Larrey, was much more likely to end in death than in convalescence.

"He is a nervous, bilious subject," said Larrey, "and will not recover."

And Prince Andrew, with others fatally wounded, was left to the care of
the inhabitants of the district.

BOOK FOUR: 1806




CHAPTER I

Early in the year 1806 Nicholas Rostov returned home on leave. Denisov
was going home to Voronezh and Rostov persuaded him to travel with him
as far as Moscow and to stay with him there. Meeting a comrade at the
last post station but one before Moscow, Denisov had drunk three bottles
of wine with him and, despite the jolting ruts across the snow-covered
road, did not once wake up on the way to Moscow, but lay at the bottom
of the sleigh beside Rostov, who grew more and more impatient the nearer
they got to Moscow.

"How much longer? How much longer? Oh, these insufferable streets,
shops, bakers' signboards, street lamps, and sleighs!" thought Rostov,
when their leave permits had been passed at the town gate and they had
entered Moscow.

"Denisov! We're here! He's asleep," he added, leaning forward with his
whole body as if in that position he hoped to hasten the speed of the
sleigh.

Denisov gave no answer.

"There's the corner at the crossroads, where the cabman, Zakhar, has his
stand, and there's Zakhar himself and still the same horse! And here's
the little shop where we used to buy gingerbread! Can't you hurry up?
Now then!"

"Which house is it?" asked the driver.

"Why, that one, right at the end, the big one. Don't you see? That's our
house," said Rostov. "Of course, it's our house! Denisov, Denisov! We're
almost there!"

Denisov raised his head, coughed, and made no answer.

"Dmitri," said Rostov to his valet on the box, "those lights are in our
house, aren't they?"

"Yes, sir, and there's a light in your father's study."

"Then they've not gone to bed yet? What do you think? Mind now, don't
forget to put out my new coat," added Rostov, fingering his new
mustache. "Now then, get on," he shouted to the driver. "Do wake up,
Vaska!" he went on, turning to Denisov, whose head was again nodding.
"Come, get on! You shall have three rubles for vodka--get on!" Rostov
shouted, when the sleigh was only three houses from his door. It seemed
to him the horses were not moving at all. At last the sleigh bore to the
right, drew up at an entrance, and Rostov saw overhead the old familiar
cornice with a bit of plaster broken off, the porch, and the post by the
side of the pavement. He sprang out before the sleigh stopped, and ran
into the hall. The house stood cold and silent, as if quite regardless
of who had come to it. There was no one in the hall. "Oh God! Is
everyone all right?" he thought, stopping for a moment with a sinking
heart, and then immediately starting to run along the hall and up the
warped steps of the familiar staircase. The well-known old door handle,
which always angered the countess when it was not properly cleaned,
turned as loosely as ever. A solitary tallow candle burned in the
anteroom.

Old Michael was asleep on the chest. Prokofy, the footman, who was so
strong that he could lift the back of the carriage from behind, sat
plaiting slippers out of cloth selvedges. He looked up at the opening
door and his expression of sleepy indifference suddenly changed to one
of delighted amazement.

"Gracious heavens! The young count!" he cried, recognizing his young
master. "Can it be? My treasure!" and Prokofy, trembling with
excitement, rushed toward the drawing-room door, probably in order to
announce him, but, changing his mind, came back and stooped to kiss the
young man's shoulder.

"All well?" asked Rostov, drawing away his arm.

"Yes, God be thanked! Yes! They've just finished supper. Let me have a
look at you, your excellency."

"Is everything quite all right?"

"The Lord be thanked, yes!"

Rostov, who had completely forgotten Denisov, not wishing anyone to
forestall him, threw off his fur coat and ran on tiptoe through the
large dark ballroom. All was the same: there were the same old card
tables and the same chandelier with a cover over it; but someone had
already seen the young master, and, before he had reached the drawing
room, something flew out from a side door like a tornado and began
hugging and kissing him. Another and yet another creature of the same
kind sprang from a second door and a third; more hugging, more kissing,
more outcries, and tears of joy. He could not distinguish which was
Papa, which Natasha, and which Petya. Everyone shouted, talked, and
kissed him at the same time. Only his mother was not there, he noticed
that.

"And I did not know... Nicholas... My darling!..."

"Here he is... our own... Kolya, * dear fellow... How he has changed!...
Where are the candles?... Tea!..."


* Nicholas.

"And me, kiss me!"

"Dearest... and me!"

Sonya, Natasha, Petya, Anna Mikhaylovna, Vera, and the old count were
all hugging him, and the serfs, men and maids, flocked into the room,
exclaiming and oh-ing and ah-ing.

Petya, clinging to his legs, kept shouting, "And me too!"

Natasha, after she had pulled him down toward her and covered his face
with kisses, holding him tight by the skirt of his coat, sprang away and
pranced up and down in one place like a goat and shrieked piercingly.

All around were loving eyes glistening with tears of joy, and all around
were lips seeking a kiss.

Sonya too, all rosy red, clung to his arm and, radiant with bliss,
looked eagerly toward his eyes, waiting for the look for which she
longed. Sonya now was sixteen and she was very pretty, especially at
this moment of happy, rapturous excitement. She gazed at him, not taking
her eyes off him, and smiling and holding her breath. He gave her a
grateful look, but was still expectant and looking for someone. The old
countess had not yet come. But now steps were heard at the door, steps
so rapid that they could hardly be his mother's.

Yet it was she, dressed in a new gown which he did not know, made since
he had left. All the others let him go, and he ran to her. When they
met, she fell on his breast, sobbing. She could not lift her face, but
only pressed it to the cold braiding of his hussar's jacket. Denisov,
who had come into the room unnoticed by anyone, stood there and wiped
his eyes at the sight.

"Vasili Denisov, your son's friend," he said, introducing himself to the
count, who was looking inquiringly at him.

"You are most welcome! I know, I know," said the count, kissing and
embracing Denisov. "Nicholas wrote us... Natasha, Vera, look! Here is
Denisov!"

The same happy, rapturous faces turned to the shaggy figure of Denisov.

"Darling Denisov!" screamed Natasha, beside herself with rapture,
springing to him, putting her arms round him, and kissing him. This
escapade made everybody feel confused. Denisov blushed too, but smiled
and, taking Natasha's hand, kissed it.

Denisov was shown to the room prepared for him, and the Rostovs all
gathered round Nicholas in the sitting room.

The old countess, not letting go of his hand and kissing it every
moment, sat beside him: the rest, crowding round him, watched every
movement, word, or look of his, never taking their blissfully adoring
eyes off him. His brother and sisters struggled for the places nearest
to him and disputed with one another who should bring him his tea,
handkerchief, and pipe.

Rostov was very happy in the love they showed him; but the first moment
of meeting had been so beatific that his present joy seemed
insufficient, and he kept expecting something more, more and yet more.

Next morning, after the fatigues of their journey, the travelers slept
till ten o'clock.

In the room next their bedroom there was a confusion of sabers,
satchels, sabretaches, open portmanteaus, and dirty boots. Two freshly
cleaned pairs with spurs had just been placed by the wall. The servants
were bringing in jugs and basins, hot water for shaving, and their well-
brushed clothes. There was a masculine odor and a smell of tobacco.

"Hallo, Gwiska--my pipe!" came Vasili Denisov's husky voice. "Wostov,
get up!"

Rostov, rubbing his eyes that seemed glued together, raised his
disheveled head from the hot pillow.

"Why, is it late?"

"Late! It's nearly ten o'clock," answered Natasha's voice. A rustle of
starched petticoats and the whispering and laughter of girls' voices
came from the adjoining room. The door was opened a crack and there was
a glimpse of something blue, of ribbons, black hair, and merry faces. It
was Natasha, Sonya, and Petya, who had come to see whether they were
getting up.

"Nicholas! Get up!" Natasha's voice was again heard at the door.

"Directly!"

Meanwhile, Petya, having found and seized the sabers in the outer room,
with the delight boys feel at the sight of a military elder brother, and
forgetting that it was unbecoming for the girls to see men undressed,
opened the bedroom door.

"Is this your saber?" he shouted.

The girls sprang aside. Denisov hid his hairy legs under the blanket,
looking with a scared face at his comrade for help. The door, having let
Petya in, closed again. A sound of laughter came from behind it.

"Nicholas! Come out in your dressing gown!" said Natasha's voice.

"Is this your saber?" asked Petya. "Or is it yours?" he said, addressing
the black-mustached Denisov with servile deference.

Rostov hurriedly put something on his feet, drew on his dressing gown,
and went out. Natasha had put on one spurred boot and was just getting
her foot into the other. Sonya, when he came in, was twirling round and
was about to expand her dresses into a balloon and sit down. They were
dressed alike, in new pale-blue frocks, and were both fresh, rosy, and
bright. Sonya ran away, but Natasha, taking her brother's arm, led him
into the sitting room, where they began talking. They hardly gave one
another time to ask questions and give replies concerning a thousand
little matters which could not interest anyone but themselves. Natasha
laughed at every word he said or that she said herself, not because what
they were saying was amusing, but because she felt happy and was unable
to control her joy which expressed itself by laughter.

"Oh, how nice, how splendid!" she said to everything.

Rostov felt that, under the influence of the warm rays of love, that
childlike smile which had not once appeared on his face since he left
home now for the first time after eighteen months again brightened his
soul and his face.

"No, but listen," she said, "now you are quite a man, aren't you? I'm
awfully glad you're my brother." She touched his mustache. "I want to
know what you men are like. Are you the same as we? No?"

"Why did Sonya run away?" asked Rostov.

"Ah, yes! That's a whole long story! How are you going to speak to her--
thou or you?"

"As may happen," said Rostov.

"No, call her you, please! I'll tell you all about it some other time.
No, I'll tell you now. You know Sonya's my dearest friend. Such a friend
that I burned my arm for her sake. Look here!"

She pulled up her muslin sleeve and showed him a red scar on her long,
slender, delicate arm, high above the elbow on that part that is covered
even by a ball dress.

"I burned this to prove my love for her. I just heated a ruler in the
fire and pressed it there!"

Sitting on the sofa with the little cushions on its arms, in what used
to be his old schoolroom, and looking into Natasha's wildly bright eyes,
Rostov re-entered that world of home and childhood which had no meaning
for anyone else, but gave him some of the best joys of his life; and the
burning of an arm with a ruler as a proof of love did not seem to him
senseless, he understood and was not surprised at it.

"Well, and is that all?" he asked.

"We are such friends, such friends! All that ruler business was just
nonsense, but we are friends forever. She, if she loves anyone, does it
for life, but I don't understand that, I forget quickly."

"Well, what then?"

"Well, she loves me and you like that."

Natasha suddenly flushed.

"Why, you remember before you went away?... Well, she says you are to
forget all that.... She says: 'I shall love him always, but let him be
free.' Isn't that lovely and noble! Yes, very noble? Isn't it?" asked
Natasha, so seriously and excitedly that it was evident that what she
was now saying she had talked of before, with tears.

Rostov became thoughtful.

"I never go back on my word," he said. "Besides, Sonya is so charming
that only a fool would renounce such happiness."

"No, no!" cried Natasha, "she and I have already talked it over. We knew
you'd say so. But it won't do, because you see, if you say that--if you
consider yourself bound by your promise--it will seem as if she had not
meant it seriously. It makes it as if you were marrying her because you
must, and that wouldn't do at all."

Rostov saw that it had been well considered by them. Sonya had already
struck him by her beauty on the preceding day. Today, when he had caught
a glimpse of her, she seemed still more lovely. She was a charming girl
of sixteen, evidently passionately in love with him (he did not doubt
that for an instant). Why should he not love her now, and even marry
her, Rostov thought, but just now there were so many other pleasures and
interests before him! "Yes, they have taken a wise decision," he
thought, "I must remain free."

"Well then, that's excellent," said he. "We'll talk it over later on.
Oh, how glad I am to have you!"

"Well, and are you still true to Boris?" he continued.

"Oh, what nonsense!" cried Natasha, laughing. "I don't think about him
or anyone else, and I don't want anything of the kind."

"Dear me! Then what are you up to now?"

"Now?" repeated Natasha, and a happy smile lit up her face. "Have you
seen Duport?"

"No."

"Not seen Duport--the famous dancer? Well then, you won't understand.
That's what I'm up to."

Curving her arms, Natasha held out her skirts as dancers do, ran back a
few steps, turned, cut a caper, brought her little feet sharply
together, and made some steps on the very tips of her toes.

"See, I'm standing! See!" she said, but could not maintain herself on
her toes any longer. "So that's what I'm up to! I'll never marry anyone,
but will be a dancer. Only don't tell anyone."

Rostov laughed so loud and merrily that Denisov, in his bedroom, felt
envious and Natasha could not help joining in.

"No, but don't you think it's nice?" she kept repeating.

"Nice! And so you no longer wish to marry Boris?"

Natasha flared up. "I don't want to marry anyone. And I'll tell him so
when I see him!"

"Dear me!" said Rostov.

"But that's all rubbish," Natasha chattered on. "And is Denisov nice?"
she asked.

"Yes, indeed!"

"Oh, well then, good-by: go and dress. Is he very terrible, Denisov?"

"Why terrible?" asked Nicholas. "No, Vaska is a splendid fellow."

"You call him Vaska? That's funny! And is he very nice?"

"Very."

"Well then, be quick. We'll all have breakfast together."

And Natasha rose and went out of the room on tiptoe, like a ballet
dancer, but smiling as only happy girls of fifteen can smile. When
Rostov met Sonya in the drawing room, he reddened. He did not know how
to behave with her. The evening before, in the first happy moment of
meeting, they had kissed each other, but today they felt it could not be
done; he felt that everybody, including his mother and sisters, was
looking inquiringly at him and watching to see how he would behave with
her. He kissed her hand and addressed her not as thou but as you--Sonya.
But their eyes met and said thou, and exchanged tender kisses. Her looks
asked him to forgive her for having dared, by Natasha's intermediacy, to
remind him of his promise, and then thanked him for his love. His looks
thanked her for offering him his freedom and told her that one way or
another he would never cease to love her, for that would be impossible.

"How strange it is," said Vera, selecting a moment when all were silent,
"that Sonya and Nicholas now say you to one another and meet like
strangers."

Vera's remark was correct, as her remarks always were, but, like most of
her observations, it made everyone feel uncomfortable, not only Sonya,
Nicholas, and Natasha, but even the old countess, who--dreading this
love affair which might hinder Nicholas from making a brilliant match--
blushed like a girl.

Denisov, to Rostov's surprise, appeared in the drawing room with pomaded
hair, perfumed, and in a new uniform, looking just as smart as he made
himself when going into battle, and he was more amiable to the ladies
and gentlemen than Rostov had ever expected to see him.




CHAPTER II

On his return to Moscow from the army, Nicholas Rostov was welcomed by
his home circle as the best of sons, a hero, and their darling
Nikolenka; by his relations as a charming, attractive, and polite young
man; by his acquaintances as a handsome lieutenant of hussars, a good
dancer, and one of the best matches in the city.

The Rostovs knew everybody in Moscow. The old count had money enough
that year, as all his estates had been remortgaged, and so Nicholas,
acquiring a trotter of his own, very stylish riding breeches of the
latest cut, such as no one else yet had in Moscow, and boots of the
latest fashion, with extremely pointed toes and small silver spurs,
passed his time very gaily. After a short period of adapting himself to
the old conditions of life, Nicholas found it very pleasant to be at
home again. He felt that he had grown up and matured very much. His
despair at failing in a Scripture examination, his borrowing money from
Gavril to pay a sleigh driver, his kissing Sonya on the sly--he now
recalled all this as childishness he had left immeasurably behind. Now
he was a lieutenant of hussars, in a jacket laced with silver, and
wearing the Cross of St. George, awarded to soldiers for bravery in
action, and in the company of well-known, elderly, and respected racing
men was training a trotter of his own for a race. He knew a lady on one
of the boulevards whom he visited of an evening. He led the mazurka at
the Arkharovs' ball, talked about the war with Field Marshal Kamenski,
visited the English Club, and was on intimate terms with a colonel of
forty to whom Denisov had introduced him.

His passion for the Emperor had cooled somewhat in Moscow. But still, as
he did not see him and had no opportunity of seeing him, he often spoke
about him and about his love for him, letting it be understood that he
had not told all and that there was something in his feelings for the
Emperor not everyone could understand, and with his whole soul he shared
the adoration then common in Moscow for the Emperor, who was spoken of
as the "angel incarnate."

During Rostov's short stay in Moscow, before rejoining the army, he did
not draw closer to Sonya, but rather drifted away from her. She was very
pretty and sweet, and evidently deeply in love with him, but he was at
the period of youth when there seems so much to do that there is no time
for that sort of thing and a young man fears to bind himself and prizes
his freedom which he needs for so many other things. When he thought of
Sonya, during this stay in Moscow, he said to himself, "Ah, there will
be, and there are, many more such girls somewhere whom I do not yet
know. There will be time enough to think about love when I want to, but
now I have no time." Besides, it seemed to him that the society of women
was rather derogatory to his manhood. He went to balls and into ladies'
society with an affectation of doing so against his will. The races, the
English Club, sprees with Denisov, and visits to a certain house--that
was another matter and quite the thing for a dashing young hussar!

At the beginning of March, old Count Ilya Rostov was very busy arranging
a dinner in honor of Prince Bagration at the English Club.

The count walked up and down the hall in his dressing gown, giving
orders to the club steward and to the famous Feoktist, the club's head
cook, about asparagus, fresh cucumbers, strawberries, veal, and fish for
this dinner. The count had been a member and on the committee of the
club from the day it was founded. To him the club entrusted the
arrangement of the festival in honor of Bagration, for few men knew so
well how to arrange a feast on an open-handed, hospitable scale, and
still fewer men would be so well able and willing to make up out of
their own resources what might be needed for the success of the fete.
The club cook and the steward listened to the count's orders with
pleased faces, for they knew that under no other management could they
so easily extract a good profit for themselves from a dinner costing
several thousand rubles.

"Well then, mind and have cocks' comb in the turtle soup, you know!"

"Shall we have three cold dishes then?" asked the cook.

The count considered.

"We can't have less--yes, three... the mayonnaise, that's one," said he,
bending down a finger.

"Then am I to order those large sterlets?" asked the steward.

"Yes, it can't be helped if they won't take less. Ah, dear me! I was
forgetting. We must have another entree. Ah, goodness gracious!" he
clutched at his head. "Who is going to get me the flowers? Dmitri! Eh,
Dmitri! Gallop off to our Moscow estate," he said to the factotum who
appeared at his call. "Hurry off and tell Maksim, the gardener, to set
the serfs to work. Say that everything out of the hothouses must be
brought here well wrapped up in felt. I must have two hundred pots here
on Friday."

Having given several more orders, he was about to go to his "little
countess" to have a rest, but remembering something else of importance,
he returned again, called back the cook and the club steward, and again
began giving orders. A light footstep and the clinking of spurs were
heard at the door, and the young count, handsome, rosy, with a dark
little mustache, evidently rested and made sleeker by his easy life in
Moscow, entered the room.

"Ah, my boy, my head's in a whirl!" said the old man with a smile, as if
he felt a little confused before his son. "Now, if you would only help a
bit! I must have singers too. I shall have my own orchestra, but
shouldn't we get the gypsy singers as well? You military men like that
sort of thing."

"Really, Papa, I believe Prince Bagration worried himself less before
the battle of Schon Grabern than you do now," said his son with a smile.

The old count pretended to be angry.

"Yes, you talk, but try it yourself!"

And the count turned to the cook, who, with a shrewd and respectful
expression, looked observantly and sympathetically at the father and
son.

"What have the young people come to nowadays, eh, Feoktist?" said he.
"Laughing at us old fellows!"

"That's so, your excellency, all they have to do is to eat a good
dinner, but providing it and serving it all up, that's not their
business!"

"That's it, that's it!" exclaimed the count, and gaily seizing his son
by both hands, he cried, "Now I've got you, so take the sleigh and pair
at once, and go to Bezukhov's, and tell him 'Count Ilya has sent you to
ask for strawberries and fresh pineapples.' We can't get them from
anyone else. He's not there himself, so you'll have to go in and ask the
princesses; and from there go on to the Rasgulyay--the coachman Ipatka
knows--and look up the gypsy Ilyushka, the one who danced at Count
Orlov's, you remember, in a white Cossack coat, and bring him along to
me."

"And am I to bring the gypsy girls along with him?" asked Nicholas,
laughing. "Dear, dear!..."

At that moment, with noiseless footsteps and with the businesslike,
preoccupied, yet meekly Christian look which never left her face, Anna
Mikhaylovna entered the hall. Though she came upon the count in his
dressing gown every day, he invariably became confused and begged her to
excuse his costume.

"No matter at all, my dear count," she said, meekly closing her eyes.
"But I'll go to Bezukhov's myself. Pierre has arrived, and now we shall
get anything we want from his hothouses. I have to see him in any case.
He has forwarded me a letter from Boris. Thank God, Boris is now on the
staff."

The count was delighted at Anna Mikhaylovna's taking upon herself one of
his commissions and ordered the small closed carriage for her.

"Tell Bezukhov to come. I'll put his name down. Is his wife with him?"
he asked.

Anna Mikhaylovna turned up her eyes, and profound sadness was depicted
on her face.

"Ah, my dear friend, he is very unfortunate," she said. "If what we hear
is true, it is dreadful. How little we dreamed of such a thing when we
were rejoicing at his happiness! And such a lofty angelic soul as young
Bezukhov! Yes, I pity him from my heart, and shall try to give him what
consolation I can."

"Wh-what is the matter?" asked both the young and old Rostov.

Anna Mikhaylovna sighed deeply.

"Dolokhov, Mary Ivanovna's son," she said in a mysterious whisper, "has
compromised her completely, they say. Pierre took him up, invited him to
his house in Petersburg, and now... she has come here and that daredevil
after her!" said Anna Mikhaylovna, wishing to show her sympathy for
Pierre, but by involuntary intonations and a half smile betraying her
sympathy for the "daredevil," as she called Dolokhov. "They say Pierre
is quite broken by his misfortune."

"Dear, dear! But still tell him to come to the club--it will all blow
over. It will be a tremendous banquet."

Next day, the third of March, soon after one o'clock, two hundred and
fifty members of the English Club and fifty guests were awaiting the
guest of honor and hero of the Austrian campaign, Prince Bagration, to
dinner.

On the first arrival of the news of the battle of Austerlitz, Moscow had
been bewildered. At that time, the Russians were so used to victories
that on receiving news of the defeat some would simply not believe it,
while others sought some extraordinary explanation of so strange an
event. In the English Club, where all who were distinguished, important,
and well informed foregathered when the news began to arrive in
December, nothing was said about the war and the last battle, as though
all were in a conspiracy of silence. The men who set the tone in
conversation--Count Rostopchin, Prince Yuri Dolgorukov, Valuev, Count
Markov, and Prince Vyazemski--did not show themselves at the club, but
met in private houses in intimate circles, and the Moscovites who took
their opinions from others--Ilya Rostov among them--remained for a while
without any definite opinion on the subject of the war and without
leaders. The Moscovites felt that something was wrong and that to
discuss the bad news was difficult, and so it was best to be silent. But
after a while, just as a jury comes out of its room, the bigwigs who
guided the club's opinion reappeared, and everybody began speaking
clearly and definitely. Reasons were found for the incredible, unheard-
of, and impossible event of a Russian defeat, everything became clear,
and in all corners of Moscow the same things began to be said. These
reasons were the treachery of the Austrians, a defective commissariat,
the treachery of the Pole Przebyszewski and of the Frenchman Langeron,
Kutuzov's incapacity, and (it was whispered) the youth and inexperience
of the sovereign, who had trusted worthless and insignificant people.
But the army, the Russian army, everyone declared, was extraordinary and
had achieved miracles of valor. The soldiers, officers, and generals
were heroes. But the hero of heroes was Prince Bagration, distinguished
by his Schon Grabern affair and by the retreat from Austerlitz, where he
alone had withdrawn his column unbroken and had all day beaten back an
enemy force twice as numerous as his own. What also conduced to
Bagration's being selected as Moscow's hero was the fact that he had no
connections in the city and was a stranger there. In his person, honor
was shown to a simple fighting Russian soldier without connections and
intrigues, and to one who was associated by memories of the Italian
campaign with the name of Suvorov. Moreover, paying such honor to
Bagration was the best way of expressing disapproval and dislike of
Kutuzov.

"Had there been no Bagration, it would have been necessary to invent
him," said the wit Shinshin, parodying the words of Voltaire. Kutuzov no
one spoke of, except some who abused him in whispers, calling him a
court weathercock and an old satyr.

All Moscow repeated Prince Dolgorukov's saying: "If you go on modeling
and modeling you must get smeared with clay," suggesting consolation for
our defeat by the memory of former victories; and the words of
Rostopchin, that French soldiers have to be incited to battle by
highfalutin words, and Germans by logical arguments to show them that it
is more dangerous to run away than to advance, but that Russian soldiers
only need to be restrained and held back! On all sides, new and fresh
anecdotes were heard of individual examples of heroism shown by our
officers and men at Austerlitz. One had saved a standard, another had
killed five Frenchmen, a third had loaded five cannon singlehanded. Berg
was mentioned, by those who did not know him, as having, when wounded in
the right hand, taken his sword in the left, and gone forward. Of
Bolkonski, nothing was said, and only those who knew him intimately
regretted that he had died so young, leaving a pregnant wife with his
eccentric father.




CHAPTER III

On that third of March, all the rooms in the English Club were filled
with a hum of conversation, like the hum of bees swarming in springtime.
The members and guests of the club wandered hither and thither, sat,
stood, met, and separated, some in uniform and some in evening dress,
and a few here and there with powdered hair and in Russian kaftans.
Powdered footmen, in livery with buckled shoes and smart stockings,
stood at every door anxiously noting visitors' every movement in order
to offer their services. Most of those present were elderly, respected
men with broad, self-confident faces, fat fingers, and resolute gestures
and voices. This class of guests and members sat in certain habitual
places and met in certain habitual groups. A minority of those present
were casual guests--chiefly young men, among whom were Denisov, Rostov,
and Dolokhov--who was now again an officer in the Semenov regiment. The
faces of these young people, especially those who were military men,
bore that expression of condescending respect for their elders which
seems to say to the older generation, "We are prepared to respect and
honor you, but all the same remember that the future belongs to us."

Nesvitski was there as an old member of the club. Pierre, who at his
wife's command had let his hair grow and abandoned his spectacles, went
about the rooms fashionably dressed but looking sad and dull. Here, as
elsewhere, he was surrounded by an atmosphere of subservience to his
wealth, and being in the habit of lording it over these people, he
treated them with absent-minded contempt.

By his age he should have belonged to the younger men, but by his wealth
and connections he belonged to the groups of old and honored guests, and
so he went from one group to another. Some of the most important old men
were the center of groups which even strangers approached respectfully
to hear the voices of well-known men. The largest circles formed round
Count Rostopchin, Valuev, and Naryshkin. Rostopchin was describing how
the Russians had been overwhelmed by flying Austrians and had had to
force their way through them with bayonets.

Valuev was confidentially telling that Uvarov had been sent from
Petersburg to ascertain what Moscow was thinking about Austerlitz.

In the third circle, Naryshkin was speaking of the meeting of the
Austrian Council of War at which Suvorov crowed like a cock in reply to
the nonsense talked by the Austrian generals. Shinshin, standing close
by, tried to make a joke, saying that Kutuzov had evidently failed to
learn from Suvorov even so simple a thing as the art of crowing like a
cock, but the elder members glanced severely at the wit, making him feel
that in that place and on that day, it was improper to speak so of
Kutuzov.

Count Ilya Rostov, hurried and preoccupied, went about in his soft boots
between the dining and drawing rooms, hastily greeting the important and
unimportant, all of whom he knew, as if they were all equals, while his
eyes occasionally sought out his fine well-set-up young son, resting on
him and winking joyfully at him. Young Rostov stood at a window with
Dolokhov, whose acquaintance he had lately made and highly valued. The
old count came up to them and pressed Dolokhov's hand.

"Please come and visit us... you know my brave boy... been together out
there... both playing the hero... Ah, Vasili Ignatovich... How d'ye do,
old fellow?" he said, turning to an old man who was passing, but before
he had finished his greeting there was a general stir, and a footman who
had run in announced, with a frightened face: "He's arrived!"

Bells rang, the stewards rushed forward, and--like rye shaken together
in a shovel--the guests who had been scattered about in different rooms
came together and crowded in the large drawing room by the door of the
ballroom.

Bagration appeared in the doorway of the anteroom without hat or sword,
which, in accord with the club custom, he had given up to the hall
porter. He had no lambskin cap on his head, nor had he a loaded whip
over his shoulder, as when Rostov had seen him on the eve of the battle
of Austerlitz, but wore a tight new uniform with Russian and foreign
Orders, and the Star of St. George on his left breast. Evidently just
before coming to the dinner he had had his hair and whiskers trimmed,
which changed his appearance for the worse. There was something naively
festive in his air, which, in conjunction with his firm and virile
features, gave him a rather comical expression. Bekleshev and Theodore
Uvarov, who had arrived with him, paused at the doorway to allow him, as
the guest of honor, to enter first. Bagration was embarrassed, not
wishing to avail himself of their courtesy, and this caused some delay
at the doors, but after all he did at last enter first. He walked shyly
and awkwardly over the parquet floor of the reception room, not knowing
what to do with his hands; he was more accustomed to walk over a plowed
field under fire, as he had done at the head of the Kursk regiment at
Schon Grabern--and he would have found that easier. The committeemen met
him at the first door and, expressing their delight at seeing such a
highly honored guest, took possession of him as it were, without waiting
for his reply, surrounded him, and led him to the drawing room. It was
at first impossible to enter the drawing-room door for the crowd of
members and guests jostling one another and trying to get a good look at
Bagration over each other's shoulders, as if he were some rare animal.
Count Ilya Rostov, laughing and repeating the words, "Make way, dear
boy! Make way, make way!" pushed through the crowd more energetically
than anyone, led the guests into the drawing room, and seated them on
the center sofa. The bigwigs, the most respected members of the club,
beset the new arrivals. Count Ilya, again thrusting his way through the
crowd, went out of the drawing room and reappeared a minute later with
another committeeman, carrying a large silver salver which he presented
to Prince Bagration. On the salver lay some verses composed and printed
in the hero's honor. Bagration, on seeing the salver, glanced around in
dismay, as though seeking help. But all eyes demanded that he should
submit. Feeling himself in their power, he resolutely took the salver
with both hands and looked sternly and reproachfully at the count who
had presented it to him. Someone obligingly took the dish from Bagration
(or he would, it seemed, have held it till evening and have gone in to
dinner with it) and drew his attention to the verses.

"Well, I will read them, then!" Bagration seemed to say, and, fixing his
weary eyes on the paper, began to read them with a fixed and serious
expression. But the author himself took the verses and began reading
them aloud. Bagration bowed his head and listened:


Bring glory then to Alexander's reign And on the throne our Titus
shield. A dreaded foe be thou, kindhearted as a man, A Rhipheus at home,
a Caesar in the field! E'en fortunate Napoleon Knows by experience, now,
Bagration, And dare not Herculean Russians trouble...

But before he had finished reading, a stentorian major-domo announced
that dinner was ready! The door opened, and from the dining room came
the resounding strains of the polonaise:


Conquest's joyful thunder waken, Triumph, valiant Russians, now!...

and Count Rostov, glancing angrily at the author who went on reading his
verses, bowed to Bagration. Everyone rose, feeling that dinner was more
important than verses, and Bagration, again preceding all the rest, went
in to dinner. He was seated in the place of honor between two
Alexanders--Bekleshev and Naryshkin--which was a significant allusion to
the name of the sovereign. Three hundred persons took their seats in the
dining room, according to their rank and importance: the more important
nearer to the honored guest, as naturally as water flows deepest where
the land lies lowest.

Just before dinner, Count Ilya Rostov presented his son to Bagration,
who recognized him and said a few words to him, disjointed and awkward,
as were all the words he spoke that day, and Count Ilya looked joyfully
and proudly around while Bagration spoke to his son.

Nicholas Rostov, with Denisov and his new acquaintance, Dolokhov, sat
almost at the middle of the table. Facing them sat Pierre, beside Prince
Nesvitski. Count Ilya Rostov with the other members of the committee sat
facing Bagration and, as the very personification of Moscow hospitality,
did the honors to the prince.

His efforts had not been in vain. The dinner, both the Lenten and the
other fare, was splendid, yet he could not feel quite at ease till the
end of the meal. He winked at the butler, whispered directions to the
footmen, and awaited each expected dish with some anxiety. Everything
was excellent. With the second course, a gigantic sterlet (at sight of
which Ilya Rostov blushed with self-conscious pleasure), the footmen
began popping corks and filling the champagne glasses. After the fish,
which made a certain sensation, the count exchanged glances with the
other committeemen. "There will be many toasts, it's time to begin," he
whispered, and taking up his glass, he rose. All were silent, waiting
for what he would say.

"To the health of our Sovereign, the Emperor!" he cried, and at the same
moment his kindly eyes grew moist with tears of joy and enthusiasm. The
band immediately struck up "Conquest's joyful thunder waken..." All rose
and cried "Hurrah!" Bagration also rose and shouted "Hurrah!" in exactly
the same voice in which he had shouted it on the field at Schon Grabern.
Young Rostov's ecstatic voice could be heard above the three hundred
others. He nearly wept. "To the health of our Sovereign, the Emperor!"
he roared, "Hurrah!" and emptying his glass at one gulp he dashed it to
the floor. Many followed his example, and the loud shouting continued
for a long time. When the voices subsided, the footmen cleared away the
broken glass and everybody sat down again, smiling at the noise they had
made and exchanging remarks. The old count rose once more, glanced at a
note lying beside his plate, and proposed a toast, "To the health of the
hero of our last campaign, Prince Peter Ivanovich Bagration!" and again
his blue eyes grew moist. "Hurrah!" cried the three hundred voices
again, but instead of the band a choir began singing a cantata composed
by Paul Ivanovich Kutuzov:


Russians! O'er all barriers on! Courage conquest guarantees; Have we not
Bagration? He brings foe men to their knees,... etc.

As soon as the singing was over, another and another toast was proposed
and Count Ilya Rostov became more and more moved, more glass was
smashed, and the shouting grew louder. They drank to Bekleshev,
Naryshkin, Uvarov, Dolgorukov, Apraksin, Valuev, to the committee, to
all the club members and to all the club guests, and finally to Count
Ilya Rostov separately, as the organizer of the banquet. At that toast,
the count took out his handkerchief and, covering his face, wept
outright.




CHAPTER IV

Pierre sat opposite Dolokhov and Nicholas Rostov. As usual, he ate and
drank much, and eagerly. But those who knew him intimately noticed that
some great change had come over him that day. He was silent all through
dinner and looked about, blinking and scowling, or, with fixed eyes and
a look of complete absent-mindedness, kept rubbing the bridge of his
nose. His face was depressed and gloomy. He seemed to see and hear
nothing of what was going on around him and to be absorbed by some
depressing and unsolved problem.

The unsolved problem that tormented him was caused by hints given by the
princess, his cousin, at Moscow, concerning Dolokhov's intimacy with his
wife, and by an anonymous letter he had received that morning, which in
the mean jocular way common to anonymous letters said that he saw badly
through his spectacles, but that his wife's connection with Dolokhov was
a secret to no one but himself. Pierre absolutely disbelieved both the
princess' hints and the letter, but he feared now to look at Dolokhov,
who was sitting opposite him. Every time he chanced to meet Dolokhov's
handsome insolent eyes, Pierre felt something terrible and monstrous
rising in his soul and turned quickly away. Involuntarily recalling his
wife's past and her relations with Dolokhov, Pierre saw clearly that
what was said in the letter might be true, or might at least seem to be
true had it not referred to his wife. He involuntarily remembered how
Dolokhov, who had fully recovered his former position after the
campaign, had returned to Petersburg and come to him. Availing himself
of his friendly relations with Pierre as a boon companion, Dolokhov had
come straight to his house, and Pierre had put him up and lent him
money. Pierre recalled how Helene had smilingly expressed disapproval of
Dolokhov's living at their house, and how cynically Dolokhov had praised
his wife's beauty to him and from that time till they came to Moscow had
not left them for a day.

"Yes, he is very handsome," thought Pierre, "and I know him. It would be
particularly pleasant to him to dishonor my name and ridicule me, just
because I have exerted myself on his behalf, befriended him, and helped
him. I know and understand what a spice that would add to the pleasure
of deceiving me, if it really were true. Yes, if it were true, but I do
not believe it. I have no right to, and can't, believe it." He
remembered the expression Dolokhov's face assumed in his moments of
cruelty, as when tying the policeman to the bear and dropping them into
the water, or when he challenged a man to a duel without any reason, or
shot a post-boy's horse with a pistol. That expression was often on
Dolokhov's face when looking at him. "Yes, he is a bully," thought
Pierre, "to kill a man means nothing to him. It must seem to him that
everyone is afraid of him, and that must please him. He must think that
I, too, am afraid of him--and in fact I am afraid of him," he thought,
and again he felt something terrible and monstrous rising in his soul.
Dolokhov, Denisov, and Rostov were now sitting opposite Pierre and
seemed very gay. Rostov was talking merrily to his two friends, one of
whom was a dashing hussar and the other a notorious duelist and rake,
and every now and then he glanced ironically at Pierre, whose
preoccupied, absent-minded, and massive figure was a very noticeable one
at the dinner. Rostov looked inimically at Pierre, first because Pierre
appeared to his hussar eyes as a rich civilian, the husband of a beauty,
and in a word--an old woman; and secondly because Pierre in his
preoccupation and absent-mindedness had not recognized Rostov and had
not responded to his greeting. When the Emperor's health was drunk,
Pierre, lost in thought, did not rise or lift his glass.

"What are you about?" shouted Rostov, looking at him in an ecstasy of
exasperation. "Don't you hear it's His Majesty the Emperor's health?"

Pierre sighed, rose submissively, emptied his glass, and, waiting till
all were seated again, turned with his kindly smile to Rostov.

"Why, I didn't recognize you!" he said. But Rostov was otherwise
engaged; he was shouting "Hurrah!"

"Why don't you renew the acquaintance?" said Dolokhov to Rostov.

"Confound him, he's a fool!" said Rostov.

"One should make up to the husbands of pretty women," said Denisov.

Pierre did not catch what they were saying, but knew they were talking
about him. He reddened and turned away.

"Well, now to the health of handsome women!" said Dolokhov, and with a
serious expression, but with a smile lurking at the corners of his
mouth, he turned with his glass to Pierre.

"Here's to the health of lovely women, Peterkin--and their lovers!" he
added.

Pierre, with downcast eyes, drank out of his glass without looking at
Dolokhov or answering him. The footman, who was distributing leaflets
with Kutuzov's cantata, laid one before Pierre as one of the principal
guests. He was just going to take it when Dolokhov, leaning across,
snatched it from his hand and began reading it. Pierre looked at
Dolokhov and his eyes dropped, the something terrible and monstrous that
had tormented him all dinnertime rose and took possession of him. He
leaned his whole massive body across the table.

"How dare you take it?" he shouted.

Hearing that cry and seeing to whom it was addressed, Nesvitski and the
neighbor on his right quickly turned in alarm to Bezukhov.

"Don't! Don't! What are you about?" whispered their frightened voices.

Dolokhov looked at Pierre with clear, mirthful, cruel eyes, and that
smile of his which seemed to say, "Ah! This is what I like!"

"You shan't have it!" he said distinctly.

Pale, with quivering lips, Pierre snatched the copy.

"You...! you... scoundrel! I challenge you!" he ejaculated, and, pushing
back his chair, he rose from the table.

At the very instant he did this and uttered those words, Pierre felt
that the question of his wife's guilt which had been tormenting him the
whole day was finally and indubitably answered in the affirmative. He
hated her and was forever sundered from her. Despite Denisov's request
that he would take no part in the matter, Rostov agreed to be Dolokhov's
second, and after dinner he discussed the arrangements for the duel with
Nesvitski, Bezukhov's second. Pierre went home, but Rostov with Dolokhov
and Denisov stayed on at the club till late, listening to the gypsies
and other singers.

"Well then, till tomorrow at Sokolniki," said Dolokhov, as he took leave
of Rostov in the club porch.

"And do you feel quite calm?" Rostov asked.

Dolokhov paused.

"Well, you see, I'll tell you the whole secret of dueling in two words.
If you are going to fight a duel, and you make a will and write
affectionate letters to your parents, and if you think you may be
killed, you are a fool and are lost for certain. But go with the firm
intention of killing your man as quickly and surely as possible, and
then all will be right, as our bear huntsman at Kostroma used to tell
me. 'Everyone fears a bear,' he says, 'but when you see one your fear's
all gone, and your only thought is not to let him get away!' And that's
how it is with me. A demain, mon cher." *


* Till tomorrow, my dear fellow.

Next day, at eight in the morning, Pierre and Nesvitski drove to the
Sokolniki forest and found Dolokhov, Denisov, and Rostov already there.
Pierre had the air of a man preoccupied with considerations which had no
connection with the matter in hand. His haggard face was yellow. He had
evidently not slept that night. He looked about distractedly and screwed
up his eyes as if dazzled by the sun. He was entirely absorbed by two
considerations: his wife's guilt, of which after his sleepless night he
had not the slightest doubt, and the guiltlessness of Dolokhov, who had
no reason to preserve the honor of a man who was nothing to him.... "I
should perhaps have done the same thing in his place," thought Pierre.
"It's even certain that I should have done the same, then why this duel,
this murder? Either I shall kill him, or he will hit me in the head, or
elbow, or knee. Can't I go away from here, run away, bury myself
somewhere?" passed through his mind. But just at moments when such
thoughts occurred to him, he would ask in a particularly calm and
absent-minded way, which inspired the respect of the onlookers, "Will it
be long? Are things ready?"

When all was ready, the sabers stuck in the snow to mark the barriers,
and the pistols loaded, Nesvitski went up to Pierre.

"I should not be doing my duty, Count," he said in timid tones, "and
should not justify your confidence and the honor you have done me in
choosing me for your second, if at this grave, this very grave, moment I
did not tell you the whole truth. I think there is no sufficient ground
for this affair, or for blood to be shed over it.... You were not right,
not quite in the right, you were impetuous..."

"Oh yes, it is horribly stupid," said Pierre.

"Then allow me to express your regrets, and I am sure your opponent will
accept them," said Nesvitski (who like the others concerned in the
affair, and like everyone in similar cases, did not yet believe that the
affair had come to an actual duel). "You know, Count, it is much more
honorable to admit one's mistake than to let matters become irreparable.
There was no insult on either side. Allow me to convey...."

"No! What is there to talk about?" said Pierre. "It's all the same....
Is everything ready?" he added. "Only tell me where to go and where to
shoot," he said with an unnaturally gentle smile.

He took the pistol in his hand and began asking about the working of the
trigger, as he had not before held a pistol in his hand--a fact that he
did not wish to confess.

"Oh yes, like that, I know, I only forgot," said he.

"No apologies, none whatever," said Dolokhov to Denisov (who on his side
had been attempting a reconciliation), and he also went up to the
appointed place.

The spot chosen for the duel was some eighty paces from the road, where
the sleighs had been left, in a small clearing in the pine forest
covered with melting snow, the frost having begun to break up during the
last few days. The antagonists stood forty paces apart at the farther
edge of the clearing. The seconds, measuring the paces, left tracks in
the deep wet snow between the place where they had been standing and
Nesvitski's and Dolokhov's sabers, which were stuck into the ground ten
paces apart to mark the barrier. It was thawing and misty; at forty
paces' distance nothing could be seen. For three minutes all had been
ready, but they still delayed and all were silent.




CHAPTER V

"Well begin!" said Dolokhov.

"All right," said Pierre, still smiling in the same way. A feeling of
dread was in the air. It was evident that the affair so lightly begun
could no longer be averted but was taking its course independently of
men's will.

Denisov first went to the barrier and announced: "As the adve'sawies
have wefused a weconciliation, please pwoceed. Take your pistols, and at
the word thwee begin to advance.

"O-ne! T-wo! Thwee!" he shouted angrily and stepped aside.

The combatants advanced along the trodden tracks, nearer and nearer to
one another, beginning to see one another through the mist. They had the
right to fire when they liked as they approached the barrier. Dolokhov
walked slowly without raising his pistol, looking intently with his
bright, sparkling blue eyes into his antagonist's face. His mouth wore
its usual semblance of a smile.

"So I can fire when I like!" said Pierre, and at the word "three," he
went quickly forward, missing the trodden path and stepping into the
deep snow. He held the pistol in his right hand at arm's length,
apparently afraid of shooting himself with it. His left hand he held
carefully back, because he wished to support his right hand with it and
knew he must not do so. Having advanced six paces and strayed off the
track into the snow, Pierre looked down at his feet, then quickly
glanced at Dolokhov and, bending his finger as he had been shown, fired.
Not at all expecting so loud a report, Pierre shuddered at the sound and
then, smiling at his own sensations, stood still. The smoke, rendered
denser by the mist, prevented him from seeing anything for an instant,
but there was no second report as he had expected. He only heard
Dolokhov's hurried steps, and his figure came in view through the smoke.
He was pressing one hand to his left side, while the other clutched his
drooping pistol. His face was pale. Rostov ran toward him and said
something.

"No-o-o!" muttered Dolokhov through his teeth, "no, it's not over." And
after stumbling a few staggering steps right up to the saber, he sank on
the snow beside it. His left hand was bloody; he wiped it on his coat
and supported himself with it. His frowning face was pallid and
quivered.

"Plea..." began Dolokhov, but could not at first pronounce the word.

"Please," he uttered with an effort.

Pierre, hardly restraining his sobs, began running toward Dolokhov and
was about to cross the space between the barriers, when Dolokhov cried:

"To your barrier!" and Pierre, grasping what was meant, stopped by his
saber. Only ten paces divided them. Dolokhov lowered his head to the
snow, greedily bit at it, again raised his head, adjusted himself, drew
in his legs and sat up, seeking a firm center of gravity. He sucked and
swallowed the cold snow, his lips quivered but his eyes, still smiling,
glittered with effort and exasperation as he mustered his remaining
strength. He raised his pistol and aimed.

"Sideways! Cover yourself with your pistol!" ejaculated Nesvitski.

"Cover yourself!" even Denisov cried to his adversary.

Pierre, with a gentle smile of pity and remorse, his arms and legs
helplessly spread out, stood with his broad chest directly facing
Dolokhov looked sorrowfully at him. Denisov, Rostov, and Nesvitski
closed their eyes. At the same instant they heard a report and
Dolokhov's angry cry.

"Missed!" shouted Dolokhov, and he lay helplessly, face downwards on the
snow.

Pierre clutched his temples, and turning round went into the forest,
trampling through the deep snow, and muttering incoherent words:

"Folly... folly! Death... lies..." he repeated, puckering his face.

Nesvitski stopped him and took him home.

Rostov and Denisov drove away with the wounded Dolokhov.

The latter lay silent in the sleigh with closed eyes and did not answer
a word to the questions addressed to him. But on entering Moscow he
suddenly came to and, lifting his head with an effort, took Rostov, who
was sitting beside him, by the hand. Rostov was struck by the totally
altered and unexpectedly rapturous and tender expression on Dolokhov's
face.

"Well? How do you feel?" he asked.

"Bad! But it's not that, my friend-" said Dolokhov with a gasping voice.
"Where are we? In Moscow, I know. I don't matter, but I have killed her,
killed... She won't get over it! She won't survive...."

"Who?" asked Rostov.

"My mother! My mother, my angel, my adored angel mother," and Dolokhov
pressed Rostov's hand and burst into tears.

When he had become a little quieter, he explained to Rostov that he was
living with his mother, who, if she saw him dying, would not survive it.
He implored Rostov to go on and prepare her.

Rostov went on ahead to do what was asked, and to his great surprise
learned that Dolokhov the brawler, Dolokhov the bully, lived in Moscow
with an old mother and a hunchback sister, and was the most affectionate
of sons and brothers.




CHAPTER VI

Pierre had of late rarely seen his wife alone. Both in Petersburg and in
Moscow their house was always full of visitors. The night after the duel
he did not go to his bedroom but, as he often did, remained in his
father's room, that huge room in which Count Bezukhov had died.

He lay down on the sofa meaning to fall asleep and forget all that had
happened to him, but could not do so. Such a storm of feelings,
thoughts, and memories suddenly arose within him that he could not fall
asleep, nor even remain in one place, but had to jump up and pace the
room with rapid steps. Now he seemed to see her in the early days of
their marriage, with bare shoulders and a languid, passionate look on
her face, and then immediately he saw beside her Dolokhov's handsome,
insolent, hard, and mocking face as he had seen it at the banquet, and
then that same face pale, quivering, and suffering, as it had been when
he reeled and sank on the snow.

"What has happened?" he asked himself. "I have killed her lover, yes,
killed my wife's lover. Yes, that was it! And why? How did I come to do
it?"--"Because you married her," answered an inner voice.

"But in what was I to blame?" he asked. "In marrying her without loving
her; in deceiving yourself and her." And he vividly recalled that moment
after supper at Prince Vasili's, when he spoke those words he had found
so difficult to utter: "I love you." "It all comes from that! Even then
I felt it," he thought. "I felt then that it was not so, that I had no
right to do it. And so it turns out."

He remembered his honeymoon and blushed at the recollection.
Particularly vivid, humiliating, and shameful was the recollection of
how one day soon after his marriage he came out of the bedroom into his
study a little before noon in his silk dressing gown and found his head
steward there, who, bowing respectfully, looked into his face and at his
dressing gown and smiled slightly, as if expressing respectful
understanding of his employer's happiness.

"But how often I have felt proud of her, proud of her majestic beauty
and social tact," thought he; "been proud of my house, in which she
received all Petersburg, proud of her unapproachability and beauty. So
this is what I was proud of! I then thought that I did not understand
her. How often when considering her character I have told myself that I
was to blame for not understanding her, for not understanding that
constant composure and complacency and lack of all interests or desires,
and the whole secret lies in the terrible truth that she is a depraved
woman. Now I have spoken that terrible word to myself all has become
clear.

"Anatole used to come to borrow money from her and used to kiss her
naked shoulders. She did not give him the money, but let herself be
kissed. Her father in jest tried to rouse her jealousy, and she replied
with a calm smile that she was not so stupid as to be jealous: 'Let him
do what he pleases,' she used to say of me. One day I asked her if she
felt any symptoms of pregnancy. She laughed contemptuously and said she
was not a fool to want to have children, and that she was not going to
have any children by me."

Then he recalled the coarseness and bluntness of her thoughts and the
vulgarity of the expressions that were natural to her, though she had
been brought up in the most aristocratic circles.

"I'm not such a fool.... Just you try it on.... Allez-vous promener," *
she used to say. Often seeing the success she had with young and old men
and women Pierre could not understand why he did not love her.


* "You clear out of this."

"Yes, I never loved her," said he to himself; "I knew she was a depraved
woman," he repeated, "but dared not admit it to myself. And now there's
Dolokhov sitting in the snow with a forced smile and perhaps dying,
while meeting my remorse with some forced bravado!"

Pierre was one of those people who, in spite of an appearance of what is
called weak character, do not seek a confidant in their troubles. He
digested his sufferings alone.

"It is all, all her fault," he said to himself; "but what of that? Why
did I bind myself to her? Why did I say 'Je vous aime' * to her, which
was a lie, and worse than a lie? I am guilty and must endure... what? A
slur on my name? A misfortune for life? Oh, that's nonsense," he
thought. "The slur on my name and honor--that's all apart from myself."


* I love you.

"Louis XVI was executed because they said he was dishonorable and a
criminal," came into Pierre's head, "and from their point of view they
were right, as were those too who canonized him and died a martyr's
death for his sake. Then Robespierre was beheaded for being a despot.
Who is right and who is wrong? No one! But if you are alive--live:
tomorrow you'll die as I might have died an hour ago. And is it worth
tormenting oneself, when one has only a moment of life in comparison
with eternity?"

But at the moment when he imagined himself calmed by such reflections,
she suddenly came into his mind as she was at the moments when he had
most strongly expressed his insincere love for her, and he felt the
blood rush to his heart and had again to get up and move about and break
and tear whatever came to his hand. "Why did I tell her that 'Je vous
aime'?" he kept repeating to himself. And when he had said it for the
tenth time, Moliere's words: "Mais que diable allait-il faire dans cette
galere?"* occurred to him, and he began to laugh at himself.


* "But what the devil was he doing in that galley?"

In the night he called his valet and told him to pack up to go to
Petersburg. He could not imagine how he could speak to her now. He
resolved to go away next day and leave a letter informing her of his
intention to part from her forever.

Next morning when the valet came into the room with his coffee, Pierre
was lying asleep on the ottoman with an open book in his hand.

He woke up and looked round for a while with a startled expression,
unable to realize where he was.

"The countess told me to inquire whether your excellency was at home,"
said the valet.

But before Pierre could decide what answer he would send, the countess
herself in a white satin dressing gown embroidered with silver and with
simply dressed hair (two immense plaits twice round her lovely head like
a coronet) entered the room, calm and majestic, except that there was a
wrathful wrinkle on her rather prominent marble brow. With her
imperturbable calm she did not begin to speak in front of the valet. She
knew of the duel and had come to speak about it. She waited till the
valet had set down the coffee things and left the room. Pierre looked at
her timidly over his spectacles, and like a hare surrounded by hounds
who lays back her ears and continues to crouch motionless before her
enemies, he tried to continue reading. But feeling this to be senseless
and impossible, he again glanced timidly at her. She did not sit down
but looked at him with a contemptuous smile, waiting for the valet to
go.

"Well, what's this now? What have you been up to now, I should like to
know?" she asked sternly.

"I? What have I...?" stammered Pierre.

"So it seems you're a hero, eh? Come now, what was this duel about? What
is it meant to prove? What? I ask you."

Pierre turned over heavily on the ottoman and opened his mouth, but
could not reply.

"If you won't answer, I'll tell you..." Helene went on. "You believe
everything you're told. You were told..." Helene laughed, "that Dolokhov
was my lover," she said in French with her coarse plainness of speech,
uttering the word amant as casually as any other word, "and you believed
it! Well, what have you proved? What does this duel prove? That you're a
fool, que vous etes un sot, but everybody knew that. What will be the
result? That I shall be the laughingstock of all Moscow, that everyone
will say that you, drunk and not knowing what you were about, challenged
a man you are jealous of without cause." Helene raised her voice and
became more and more excited, "A man who's a better man than you in
every way..."

"Hm... Hm...!" growled Pierre, frowning without looking at her, and not
moving a muscle.

"And how could you believe he was my lover? Why? Because I like his
company? If you were cleverer and more agreeable, I should prefer
yours."

"Don't speak to me... I beg you," muttered Pierre hoarsely.

"Why shouldn't I speak? I can speak as I like, and I tell you plainly
that there are not many wives with husbands such as you who would not
have taken lovers (des amants), but I have not done so," said she.

Pierre wished to say something, looked at her with eyes whose strange
expression she did not understand, and lay down again. He was suffering
physically at that moment, there was a weight on his chest and he could
not breathe. He knew that he must do something to put an end to this
suffering, but what he wanted to do was too terrible.

"We had better separate," he muttered in a broken voice.

"Separate? Very well, but only if you give me a fortune," said Helene.
"Separate! That's a thing to frighten me with!"

Pierre leaped up from the sofa and rushed staggering toward her.

"I'll kill you!" he shouted, and seizing the marble top of a table with
a strength he had never before felt, he made a step toward her
brandishing the slab.

Helene's face became terrible, she shrieked and sprang aside. His
father's nature showed itself in Pierre. He felt the fascination and
delight of frenzy. He flung down the slab, broke it, and swooping down
on her with outstretched hands shouted, "Get out!" in such a terrible
voice that the whole house heard it with horror. God knows what he would
have done at that moment had Helene not fled from the room.

A week later Pierre gave his wife full power to control all his estates
in Great Russia, which formed the larger part of his property, and left
for Petersburg alone.




CHAPTER VII

Two months had elapsed since the news of the battle of Austerlitz and
the loss of Prince Andrew had reached Bald Hills, and in spite of the
letters sent through the embassy and all the searches made, his body had
not been found nor was he on the list of prisoners. What was worst of
all for his relations was the fact that there was still a possibility of
his having been picked up on the battlefield by the people of the place
and that he might now be lying, recovering or dying, alone among
strangers and unable to send news of himself. The gazettes from which
the old prince first heard of the defeat at Austerlitz stated, as usual
very briefly and vaguely, that after brilliant engagements the Russians
had had to retreat and had made their withdrawal in perfect order. The
old prince understood from this official report that our army had been
defeated. A week after the gazette report of the battle of Austerlitz
came a letter from Kutuzov informing the prince of the fate that had
befallen his son.

"Your son," wrote Kutuzov, "fell before my eyes, a standard in his hand
and at the head of a regiment--he fell as a hero, worthy of his father
and his fatherland. To the great regret of myself and of the whole army
it is still uncertain whether he is alive or not. I comfort myself and
you with the hope that your son is alive, for otherwise he would have
been mentioned among the officers found on the field of battle, a list
of whom has been sent me under flag of truce."

After receiving this news late in the evening, when he was alone in his
study, the old prince went for his walk as usual next morning, but he
was silent with his steward, the gardener, and the architect, and though
he looked very grim he said nothing to anyone.

When Princess Mary went to him at the usual hour he was working at his
lathe and, as usual, did not look round at her.

"Ah, Princess Mary!" he said suddenly in an unnatural voice, throwing
down his chisel. (The wheel continued to revolve by its own impetus, and
Princess Mary long remembered the dying creak of that wheel, which
merged in her memory with what followed.)

She approached him, saw his face, and something gave way within her. Her
eyes grew dim. By the expression of her father's face, not sad, not
crushed, but angry and working unnaturally, she saw that hanging over
her and about to crush her was some terrible misfortune, the worst in
life, one she had not yet experienced, irreparable and incomprehensible-
-the death of one she loved.

"Father! Andrew!"--said the ungraceful, awkward princess with such an
indescribable charm of sorrow and self-forgetfulness that her father
could not bear her look but turned away with a sob.

"Bad news! He's not among the prisoners nor among the killed! Kutuzov
writes..." and he screamed as piercingly as if he wished to drive the
princess away by that scream... "Killed!"

The princess did not fall down or faint. She was already pale, but on
hearing these words her face changed and something brightened in her
beautiful, radiant eyes. It was as if joy--a supreme joy apart from the
joys and sorrows of this world--overflowed the great grief within her.
She forgot all fear of her father, went up to him, took his hand, and
drawing him down put her arm round his thin, scraggy neck.

"Father," she said, "do not turn away from me, let us weep together."

"Scoundrels! Blackguards!" shrieked the old man, turning his face away
from her. "Destroying the army, destroying the men! And why? Go, go and
tell Lise."

The princess sank helplessly into an armchair beside her father and
wept. She saw her brother now as he had been at the moment when he took
leave of her and of Lise, his look tender yet proud. She saw him tender
and amused as he was when he put on the little icon. "Did he believe?
Had he repented of his unbelief? Was he now there? There in the realms
of eternal peace and blessedness?" she thought.

"Father, tell me how it happened," she asked through her tears.

"Go! Go! Killed in battle, where the best of Russian men and Russia's
glory were led to destruction. Go, Princess Mary. Go and tell Lise. I
will follow."

When Princess Mary returned from her father, the little princess sat
working and looked up with that curious expression of inner, happy calm
peculiar to pregnant women. It was evident that her eyes did not see
Princess Mary but were looking within... into herself... at something
joyful and mysterious taking place within her.

"Mary," she said, moving away from the embroidery frame and lying back,
"give me your hand." She took her sister-in-law's hand and held it below
her waist.

Her eyes were smiling expectantly, her downy lip rose and remained
lifted in childlike happiness.

Princess Mary knelt down before her and hid her face in the folds of her
sister-in-law's dress.

"There, there! Do you feel it? I feel so strange. And do you know, Mary,
I am going to love him very much," said Lise, looking with bright and
happy eyes at her sister-in-law.

Princess Mary could not lift her head, she was weeping.

"What is the matter, Mary?"

"Nothing... only I feel sad... sad about Andrew," she said, wiping away
her tears on her sister-in-law's knee.

Several times in the course of the morning Princess Mary began trying to
prepare her sister-in-law, and every time began to cry. Unobservant as
was the little princess, these tears, the cause of which she did not
understand, agitated her. She said nothing but looked about uneasily as
if in search of something. Before dinner the old prince, of whom she was
always afraid, came into her room with a peculiarly restless and malign
expression and went out again without saying a word. She looked at
Princess Mary, then sat thinking for a while with that expression of
attention to something within her that is only seen in pregnant women,
and suddenly began to cry.

"Has anything come from Andrew?" she asked.

"No, you know it's too soon for news. But my father is anxious and I
feel afraid."

"So there's nothing?"

"Nothing," answered Princess Mary, looking firmly with her radiant eyes
at her sister-in-law.

She had determined not to tell her and persuaded her father to hide the
terrible news from her till after her confinement, which was expected
within a few days. Princess Mary and the old prince each bore and hid
their grief in their own way. The old prince would not cherish any hope:
he made up his mind that Prince Andrew had been killed, and though he
sent an official to Austria to seek for traces of his son, he ordered a
monument from Moscow which he intended to erect in his own garden to his
memory, and he told everybody that his son had been killed. He tried not
to change his former way of life, but his strength failed him. He walked
less, ate less, slept less, and became weaker every day. Princess Mary
hoped. She prayed for her brother as living and was always awaiting news
of his return.




CHAPTER VIII

"Dearest," said the little princess after breakfast on the morning of
the nineteenth March, and her downy little lip rose from old habit, but
as sorrow was manifest in every smile, the sound of every word, and even
every footstep in that house since the terrible news had come, so now
the smile of the little princess--influenced by the general mood though
without knowing its cause--was such as to remind one still more of the
general sorrow.

"Dearest, I'm afraid this morning's fruschtique *--as Foka the cook
calls it--has disagreed with me."


* Fruhstuck: breakfast.

"What is the matter with you, my darling? You look pale. Oh, you are
very pale!" said Princess Mary in alarm, running with her soft,
ponderous steps up to her sister-in-law.

"Your excellency, should not Mary Bogdanovna be sent for?" said one of
the maids who was present. (Mary Bogdanovna was a midwife from the
neighboring town, who had been at Bald Hills for the last fortnight.)

"Oh yes," assented Princess Mary, "perhaps that's it. I'll go. Courage,
my angel." She kissed Lise and was about to leave the room.

"Oh, no, no!" And besides the pallor and the physical suffering on the
little princess' face, an expression of childish fear of inevitable pain
showed itself.

"No, it's only indigestion?... Say it's only indigestion, say so, Mary!
Say..." And the little princess began to cry capriciously like a
suffering child and to wring her little hands even with some
affectation. Princess Mary ran out of the room to fetch Mary Bogdanovna.

"Mon Dieu! Mon Dieu! Oh!" she heard as she left the room.

The midwife was already on her way to meet her, rubbing her small, plump
white hands with an air of calm importance.

"Mary Bogdanovna, I think it's beginning!" said Princess Mary looking at
the midwife with wide-open eyes of alarm.

"Well, the Lord be thanked, Princess," said Mary Bogdanovna, not
hastening her steps. "You young ladies should not know anything about
it."

"But how is it the doctor from Moscow is not here yet?" said the
princess. (In accordance with Lise's and Prince Andrew's wishes they had
sent in good time to Moscow for a doctor and were expecting him at any
moment.)

"No matter, Princess, don't be alarmed," said Mary Bogdanovna. "We'll
manage very well without a doctor."

Five minutes later Princess Mary from her room heard something heavy
being carried by. She looked out. The men servants were carrying the
large leather sofa from Prince Andrew's study into the bedroom. On their
faces was a quiet and solemn look.

Princess Mary sat alone in her room listening to the sounds in the
house, now and then opening her door when someone passed and watching
what was going on in the passage. Some women passing with quiet steps in
and out of the bedroom glanced at the princess and turned away. She did
not venture to ask any questions, and shut the door again, now sitting
down in her easy chair, now taking her prayer book, now kneeling before
the icon stand. To her surprise and distress she found that her prayers
did not calm her excitement. Suddenly her door opened softly and her old
nurse, Praskovya Savishna, who hardly ever came to that room as the old
prince had forbidden it, appeared on the threshold with a shawl round
her head.

"I've come to sit with you a bit, Masha," said the nurse, "and here I've
brought the prince's wedding candles to light before his saint, my
angel," she said with a sigh.

"Oh, nurse, I'm so glad!"

"God is merciful, birdie."

The nurse lit the gilt candles before the icons and sat down by the door
with her knitting. Princess Mary took a book and began reading. Only
when footsteps or voices were heard did they look at one another, the
princess anxious and inquiring, the nurse encouraging. Everyone in the
house was dominated by the same feeling that Princess Mary experienced
as she sat in her room. But owing to the superstition that the fewer the
people who know of it the less a woman in travail suffers, everyone
tried to pretend not to know; no one spoke of it, but apart from the
ordinary staid and respectful good manners habitual in the prince's
household, a common anxiety, a softening of the heart, and a
consciousness that something great and mysterious was being accomplished
at that moment made itself felt.

There was no laughter in the maids' large hall. In the men servants'
hall all sat waiting, silently and alert. In the outlying serfs'
quarters torches and candles were burning and no one slept. The old
prince, stepping on his heels, paced up and down his study and sent
Tikhon to ask Mary Bogdanovna what news.--"Say only that 'the prince
told me to ask,' and come and tell me her answer."

"Inform the prince that labor has begun," said Mary Bogdanovna, giving
the messenger a significant look.

Tikhon went and told the prince.

"Very good!" said the prince closing the door behind him, and Tikhon did
not hear the slightest sound from the study after that.

After a while he re-entered it as if to snuff the candles, and, seeing
the prince was lying on the sofa, looked at him, noticed his perturbed
face, shook his head, and going up to him silently kissed him on the
shoulder and left the room without snuffing the candles or saying why he
had entered. The most solemn mystery in the world continued its course.
Evening passed, night came, and the feeling of suspense and softening of
heart in the presence of the unfathomable did not lessen but increased.
No one slept.

It was one of those March nights when winter seems to wish to resume its
sway and scatters its last snows and storms with desperate fury. A relay
of horses had been sent up the highroad to meet the German doctor from
Moscow who was expected every moment, and men on horseback with lanterns
were sent to the crossroads to guide him over the country road with its
hollows and snow-covered pools of water.

Princess Mary had long since put aside her book: she sat silent, her
luminous eyes fixed on her nurse's wrinkled face (every line of which
she knew so well), on the lock of gray hair that escaped from under the
kerchief, and the loose skin that hung under her chin.

Nurse Savishna, knitting in hand, was telling in low tones, scarcely
hearing or understanding her own words, what she had told hundreds of
times before: how the late princess had given birth to Princess Mary in
Kishenev with only a Moldavian peasant woman to help instead of a
midwife.

"God is merciful, doctors are never needed," she said.

Suddenly a gust of wind beat violently against the casement of the
window, from which the double frame had been removed (by order of the
prince, one window frame was removed in each room as soon as the larks
returned), and, forcing open a loosely closed latch, set the damask
curtain flapping and blew out the candle with its chill, snowy draft.
Princess Mary shuddered; her nurse, putting down the stocking she was
knitting, went to the window and leaning out tried to catch the open
casement. The cold wind flapped the ends of her kerchief and her loose
locks of gray hair.

"Princess, my dear, there's someone driving up the avenue!" she said,
holding the casement and not closing it. "With lanterns. Most likely the
doctor."

"Oh, my God! thank God!" said Princess Mary. "I must go and meet him, he
does not know Russian."

Princess Mary threw a shawl over her head and ran to meet the newcomer.
As she was crossing the anteroom she saw through the window a carriage
with lanterns, standing at the entrance. She went out on the stairs. On
a banister post stood a tallow candle which guttered in the draft. On
the landing below, Philip, the footman, stood looking scared and holding
another candle. Still lower, beyond the turn of the staircase, one could
hear the footstep of someone in thick felt boots, and a voice that
seemed familiar to Princess Mary was saying something.

"Thank God!" said the voice. "And Father?"

"Gone to bed," replied the voice of Demyan the house steward, who was
downstairs.

Then the voice said something more, Demyan replied, and the steps in the
felt boots approached the unseen bend of the staircase more rapidly.

"It's Andrew!" thought Princess Mary. "No it can't be, that would be too
extraordinary," and at the very moment she thought this, the face and
figure of Prince Andrew, in a fur cloak the deep collar of which covered
with snow, appeared on the landing where the footman stood with the
candle. Yes, it was he, pale, thin, with a changed and strangely
softened but agitated expression on his face. He came up the stairs and
embraced his sister.

"You did not get my letter?" he asked, and not waiting for a reply--
which he would not have received, for the princess was unable to speak--
he turned back, rapidly mounted the stairs again with the doctor who had
entered the hall after him (they had met at the last post station), and
again embraced his sister.

"What a strange fate, Masha darling!" And having taken off his cloak and
felt boots, he went to the little princess' apartment.




CHAPTER IX

The little princess lay supported by pillows, with a white cap on her
head (the pains had just left her). Strands of her black hair lay round
her inflamed and perspiring cheeks, her charming rosy mouth with its
downy lip was open and she was smiling joyfully. Prince Andrew entered
and paused facing her at the foot of the sofa on which she was lying.
Her glittering eyes, filled with childlike fear and excitement, rested
on him without changing their expression. "I love you all and have done
no harm to anyone; why must I suffer so? Help me!" her look seemed to
say. She saw her husband, but did not realize the significance of his
appearance before her now. Prince Andrew went round the sofa and kissed
her forehead.

"My darling!" he said--a word he had never used to her before. "God is
merciful...."

She looked at him inquiringly and with childlike reproach.

"I expected help from you and I get none, none from you either!" said
her eyes. She was not surprised at his having come; she did not realize
that he had come. His coming had nothing to do with her sufferings or
with their relief. The pangs began again and Mary Bogdanovna advised
Prince Andrew to leave the room.

The doctor entered. Prince Andrew went out and, meeting Princess Mary,
again joined her. They began talking in whispers, but their talk broke
off at every moment. They waited and listened.

"Go, dear," said Princess Mary.

Prince Andrew went again to his wife and sat waiting in the room next to
hers. A woman came from the bedroom with a frightened face and became
confused when she saw Prince Andrew. He covered his face with his hands
and remained so for some minutes. Piteous, helpless, animal moans came
through the door. Prince Andrew got up, went to the door, and tried to
open it. Someone was holding it shut.

"You can't come in! You can't!" said a terrified voice from within.

He began pacing the room. The screaming ceased, and a few more seconds
went by. Then suddenly a terrible shriek--it could not be hers, she
could not scream like that--came from the bedroom. Prince Andrew ran to
the door; the scream ceased and he heard the wail of an infant.

"What have they taken a baby in there for?" thought Prince Andrew in the
first second. "A baby? What baby...? Why is there a baby there? Or is
the baby born?"

Then suddenly he realized the joyful significance of that wail; tears
choked him, and leaning his elbows on the window sill be began to cry,
sobbing like a child. The door opened. The doctor with his shirt sleeves
tucked up, without a coat, pale and with a trembling jaw, came out of
the room. Prince Andrew turned to him, but the doctor gave him a
bewildered look and passed by without a word. A woman rushed out and
seeing Prince Andrew stopped, hesitating on the threshold. He went into
his wife's room. She was lying dead, in the same position he had seen
her in five minutes before and, despite the fixed eyes and the pallor of
the cheeks, the same expression was on her charming childlike face with
its upper lip covered with tiny black hair.

"I love you all, and have done no harm to anyone; and what have you done
to me?"--said her charming, pathetic, dead face.

In a corner of the room something red and tiny gave a grunt and squealed
in Mary Bogdanovna's trembling white hands.

Two hours later Prince Andrew, stepping softly, went into his father's
room. The old man already knew everything. He was standing close to the
door and as soon as it opened his rough old arms closed like a vise
round his son's neck, and without a word he began to sob like a child.

Three days later the little princess was buried, and Prince Andrew went
up the steps to where the coffin stood, to give her the farewell kiss.
And there in the coffin was the same face, though with closed eyes. "Ah,
what have you done to me?" it still seemed to say, and Prince Andrew
felt that something gave way in his soul and that he was guilty of a sin
he could neither remedy nor forget. He could not weep. The old man too
came up and kissed the waxen little hands that lay quietly crossed one
on the other on her breast, and to him, too, her face seemed to say:
"Ah, what have you done to me, and why?" And at the sight the old man
turned angrily away.

Another five days passed, and then the young Prince Nicholas Andreevich
was baptized. The wet nurse supported the coverlet with her chin, while
the priest with a goose feather anointed the boy's little red and
wrinkled soles and palms.

His grandfather, who was his godfather, trembling and afraid of dropping
him, carried the infant round the battered tin font and handed him over
to the godmother, Princess Mary. Prince Andrew sat in another room,
faint with fear lest the baby should be drowned in the font, and awaited
the termination of the ceremony. He looked up joyfully at the baby when
the nurse brought it to him and nodded approval when she told him that
the wax with the baby's hair had not sunk in the font but had floated.




CHAPTER X

Rostov's share in Dolokhov's duel with Bezukhov was hushed up by the
efforts of the old count, and instead of being degraded to the ranks as
he expected he was appointed an adjutant to the governor general of
Moscow. As a result he could not go to the country with the rest of the
family, but was kept all summer in Moscow by his new duties. Dolokhov
recovered, and Rostov became very friendly with him during his
convalescence. Dolokhov lay ill at his mother's who loved him
passionately and tenderly, and old Mary Ivanovna, who had grown fond of
Rostov for his friendship to her Fedya, often talked to him about her
son.

"Yes, Count," she would say, "he is too noble and pure-souled for our
present, depraved world. No one now loves virtue; it seems like a
reproach to everyone. Now tell me, Count, was it right, was it
honorable, of Bezukhov? And Fedya, with his noble spirit, loved him and
even now never says a word against him. Those pranks in Petersburg when
they played some tricks on a policeman, didn't they do it together? And
there! Bezukhov got off scotfree, while Fedya had to bear the whole
burden on his shoulders. Fancy what he had to go through! It's true he
has been reinstated, but how could they fail to do that? I think there
were not many such gallant sons of the fatherland out there as he. And
now--this duel! Have these people no feeling, or honor? Knowing him to
be an only son, to challenge him and shoot so straight! It's well God
had mercy on us. And what was it for? Who doesn't have intrigues
nowadays? Why, if he was so jealous, as I see things he should have
shown it sooner, but he lets it go on for months. And then to call him
out, reckoning on Fedya not fighting because he owed him money! What
baseness! What meanness! I know you understand Fedya, my dear count;
that, believe me, is why I am so fond of you. Few people do understand
him. He is such a lofty, heavenly soul!"

Dolokhov himself during his convalescence spoke to Rostov in a way no
one would have expected of him.

"I know people consider me a bad man!" he said. "Let them! I don't care
a straw about anyone but those I love; but those I love, I love so that
I would give my life for them, and the others I'd throttle if they stood
in my way. I have an adored, a priceless mother, and two or three
friends--you among them--and as for the rest I only care about them in
so far as they are harmful or useful. And most of them are harmful,
especially the women. Yes, dear boy," he continued, "I have met loving,
noble, high-minded men, but I have not yet met any women--countesses or
cooks--who were not venal. I have not yet met that divine purity and
devotion I look for in women. If I found such a one I'd give my life for
her! But those!..." and he made a gesture of contempt. "And believe me,
if I still value my life it is only because I still hope to meet such a
divine creature, who will regenerate, purify, and elevate me. But you
don't understand it."

"Oh, yes, I quite understand," answered Rostov, who was under his new
friend's influence.

In the autumn the Rostovs returned to Moscow. Early in the winter
Denisov also came back and stayed with them. The first half of the
winter of 1806, which Nicholas Rostov spent in Moscow, was one of the
happiest, merriest times for him and the whole family. Nicholas brought
many young men to his parents' house. Vera was a handsome girl of
twenty; Sonya a girl of sixteen with all the charm of an opening flower;
Natasha, half grown up and half child, was now childishly amusing, now
girlishly enchanting.

At that time in the Rostovs' house there prevailed an amorous atmosphere
characteristic of homes where there are very young and very charming
girls. Every young man who came to the house--seeing those
impressionable, smiling young faces (smiling probably at their own
happiness), feeling the eager bustle around him, and hearing the fitful
bursts of song and music and the inconsequent but friendly prattle of
young girls ready for anything and full of hope--experienced the same
feeling; sharing with the young folk of the Rostovs' household a
readiness to fall in love and an expectation of happiness.

Among the young men introduced by Rostov one of the first was Dolokhov,
whom everyone in the house liked except Natasha. She almost quarreled
with her brother about him. She insisted that he was a bad man, and that
in the duel with Bezukhov, Pierre was right and Dolokhov wrong, and
further that he was disagreeable and unnatural.

"There's nothing for me to understand," she cried out with resolute
self-will, "he is wicked and heartless. There now, I like your Denisov
though he is a rake and all that, still I like him; so you see I do
understand. I don't know how to put it... with this one everything is
calculated, and I don't like that. But Denisov..."

"Oh, Denisov is quite different," replied Nicholas, implying that even
Denisov was nothing compared to Dolokhov--"you must understand what a
soul there is in Dolokhov, you should see him with his mother. What a
heart!"

"Well, I don't know about that, but I am uncomfortable with him. And do
you know he has fallen in love with Sonya?"

"What nonsense..."

"I'm certain of it; you'll see."

Natasha's prediction proved true. Dolokhov, who did not usually care for
the society of ladies, began to come often to the house, and the
question for whose sake he came (though no one spoke of it) was soon
settled. He came because of Sonya. And Sonya, though she would never
have dared to say so, knew it and blushed scarlet every time Dolokhov
appeared.

Dolokhov often dined at the Rostovs', never missed a performance at
which they were present, and went to Iogel's balls for young people
which the Rostovs always attended. He was pointedly attentive to Sonya
and looked at her in such a way that not only could she not bear his
glances without coloring, but even the old countess and Natasha blushed
when they saw his looks.

It was evident that this strange, strong man was under the irresistible
influence of the dark, graceful girl who loved another.

Rostov noticed something new in Dolokhov's relations with Sonya, but he
did not explain to himself what these new relations were. "They're
always in love with someone," he thought of Sonya and Natasha. But he
was not as much at ease with Sonya and Dolokhov as before and was less
frequently at home.

In the autumn of 1806 everybody had again begun talking of the war with
Napoleon with even greater warmth than the year before. Orders were
given to raise recruits, ten men in every thousand for the regular army,
and besides this, nine men in every thousand for the militia. Everywhere
Bonaparte was anathematized and in Moscow nothing but the coming war was
talked of. For the Rostov family the whole interest of these
preparations for war lay in the fact that Nicholas would not hear of
remaining in Moscow, and only awaited the termination of Denisov's
furlough after Christmas to return with him to their regiment. His
approaching departure did not prevent his amusing himself, but rather
gave zest to his pleasures. He spent the greater part of his time away
from home, at dinners, parties, and balls.




CHAPTER XI

On the third day after Christmas Nicholas dined at home, a thing he had
rarely done of late. It was a grand farewell dinner, as he and Denisov
were leaving to join their regiment after Epiphany. About twenty people
were present, including Dolokhov and Denisov.

Never had love been so much in the air, and never had the amorous
atmosphere made itself so strongly felt in the Rostovs' house as at this
holiday time. "Seize the moments of happiness, love and be loved! That
is the only reality in the world, all else is folly. It is the one thing
we are interested in here," said the spirit of the place.

Nicholas, having as usual exhausted two pairs of horses, without
visiting all the places he meant to go to and where he had been invited,
returned home just before dinner. As soon as he entered he noticed and
felt the tension of the amorous air in the house, and also noticed a
curious embarrassment among some of those present. Sonya, Dolokhov, and
the old countess were especially disturbed, and to a lesser degree
Natasha. Nicholas understood that something must have happened between
Sonya and Dolokhov before dinner, and with the kindly sensitiveness
natural to him was very gentle and wary with them both at dinner. On
that same evening there was to be one of the balls that Iogel (the
dancing master) gave for his pupils during the holidays.

"Nicholas, will you come to Iogel's? Please do!" said Natasha. "He asked
you, and Vasili Dmitrich * is also going."


* Denisov.

"Where would I not go at the countess' command!" said Denisov, who at
the Rostovs' had jocularly assumed the role of Natasha's knight. "I'm
even weady to dance the pas de chale."

"If I have time," answered Nicholas. "But I promised the Arkharovs; they
have a party."

"And you?" he asked Dolokhov, but as soon as he had asked the question
he noticed that it should not have been put.

"Perhaps," coldly and angrily replied Dolokhov, glancing at Sonya, and,
scowling, he gave Nicholas just such a look as he had given Pierre at
the club dinner.

"There is something up," thought Nicholas, and he was further confirmed
in this conclusion by the fact that Dolokhov left immediately after
dinner. He called Natasha and asked her what was the matter.

"And I was looking for you," said Natasha running out to him. "I told
you, but you would not believe it," she said triumphantly. "He has
proposed to Sonya!"

Little as Nicholas had occupied himself with Sonya of late, something
seemed to give way within him at this news. Dolokhov was a suitable and
in some respects a brilliant match for the dowerless, orphan girl. From
the point of view of the old countess and of society it was out of the
question for her to refuse him. And therefore Nicholas' first feeling on
hearing the news was one of anger with Sonya.... He tried to say,
"That's capital; of course she'll forget her childish promises and
accept the offer," but before he had time to say it Natasha began again.

"And fancy! she refused him quite definitely!" adding, after a pause,
"she told him she loved another."

"Yes, my Sonya could not have done otherwise!" thought Nicholas.

"Much as Mamma pressed her, she refused, and I know she won't change
once she has said..."

"And Mamma pressed her!" said Nicholas reproachfully.

"Yes," said Natasha. "Do you know, Nicholas--don't be angry--but I know
you will not marry her. I know, heaven knows how, but I know for certain
that you won't marry her."

"Now you don't know that at all!" said Nicholas. "But I must talk to
her. What a darling Sonya is!" he added with a smile.

"Ah, she is indeed a darling! I'll send her to you."

And Natasha kissed her brother and ran away.

A minute later Sonya came in with a frightened, guilty, and scared look.
Nicholas went up to her and kissed her hand. This was the first time
since his return that they had talked alone and about their love.

"Sophie," he began, timidly at first and then more and more boldly, "if
you wish to refuse one who is not only a brilliant and advantageous
match but a splendid, noble fellow... he is my friend..."

Sonya interrupted him.

"I have already refused," she said hurriedly.

"If you are refusing for my sake, I am afraid that I..."

Sonya again interrupted. She gave him an imploring, frightened look.

"Nicholas, don't tell me that!" she said.

"No, but I must. It may be arrogant of me, but still it is best to say
it. If you refuse him on my account, I must tell you the whole truth. I
love you, and I think I love you more than anyone else...."

"That is enough for me," said Sonya, blushing.

"No, but I have been in love a thousand times and shall fall in love
again, though for no one have I such a feeling of friendship,
confidence, and love as I have for you. Then I am young. Mamma does not
wish it. In a word, I make no promise. And I beg you to consider
Dolokhov's offer," he said, articulating his friend's name with
difficulty.

"Don't say that to me! I want nothing. I love you as a brother and
always shall, and I want nothing more."

"You are an angel: I am not worthy of you, but I am afraid of misleading
you."

And Nicholas again kissed her hand.




CHAPTER XII

Iogel's were the most enjoyable balls in Moscow. So said the mothers as
they watched their young people executing their newly learned steps, and
so said the youths and maidens themselves as they danced till they were
ready to drop, and so said the grown-up young men and women who came to
these balls with an air of condescension and found them most enjoyable.
That year two marriages had come of these balls. The two pretty young
Princesses Gorchakov met suitors there and were married and so further
increased the fame of these dances. What distinguished them from others
was the absence of host or hostess and the presence of the good-natured
Iogel, flying about like a feather and bowing according to the rules of
his art, as he collected the tickets from all his visitors. There was
the fact that only those came who wished to dance and amuse themselves
as girls of thirteen and fourteen do who are wearing long dresses for
the first time. With scarcely any exceptions they all were, or seemed to
be, pretty--so rapturous were their smiles and so sparkling their eyes.
Sometimes the best of the pupils, of whom Natasha, who was exceptionally
graceful, was first, even danced the pas de chale, but at this last ball
only the ecossaise, the anglaise, and the mazurka, which was just coming
into fashion, were danced. Iogel had taken a ballroom in Bezukhov's
house, and the ball, as everyone said, was a great success. There were
many pretty girls and the Rostov girls were among the prettiest. They
were both particularly happy and gay. That evening, proud of Dolokhov's
proposal, her refusal, and her explanation with Nicholas, Sonya twirled
about before she left home so that the maid could hardly get her hair
plaited, and she was transparently radiant with impulsive joy.

Natasha no less proud of her first long dress and of being at a real
ball was even happier. They were both dressed in white muslin with pink
ribbons.

Natasha fell in love the very moment she entered the ballroom. She was
not in love with anyone in particular, but with everyone. Whatever
person she happened to look at she was in love with for that moment.

"Oh, how delightful it is!" she kept saying, running up to Sonya.

Nicholas and Denisov were walking up and down, looking with kindly
patronage at the dancers.

"How sweet she is--she will be a weal beauty!" said Denisov.

"Who?"

"Countess Natasha," answered Denisov.

"And how she dances! What gwace!" he said again after a pause.

"Who are you talking about?"

"About your sister," ejaculated Denisov testily.

Rostov smiled.

"My dear count, you were one of my best pupils--you must dance," said
little Iogel coming up to Nicholas. "Look how many charming young
ladies-" He turned with the same request to Denisov who was also a
former pupil of his.

"No, my dear fellow, I'll be a wallflower," said Denisov. "Don't you
wecollect what bad use I made of your lessons?"


"Oh no!" said Iogel, hastening to reassure him. "You were only
inattentive, but you had talent--oh yes, you had talent!"

The band struck up the newly introduced mazurka. Nicholas could not
refuse Iogel and asked Sonya to dance. Denisov sat down by the old
ladies and, leaning on his saber and beating time with his foot, told
them something funny and kept them amused, while he watched the young
people dancing, Iogel with Natasha, his pride and his best pupil, were
the first couple. Noiselessly, skillfully stepping with his little feet
in low shoes, Iogel flew first across the hall with Natasha, who, though
shy, went on carefully executing her steps. Denisov did not take his
eyes off her and beat time with his saber in a way that clearly
indicated that if he was not dancing it was because he would not and not
because he could not. In the middle of a figure he beckoned to Rostov
who was passing:

"This is not at all the thing," he said. "What sort of Polish mazuwka is
this? But she does dance splendidly."

Knowing that Denisov had a reputation even in Poland for the masterly
way in which he danced the mazurka, Nicholas ran up to Natasha:

"Go and choose Denisov. He is a real dancer, a wonder!" he said.

When it came to Natasha's turn to choose a partner, she rose and,
tripping rapidly across in her little shoes trimmed with bows, ran
timidly to the corner where Denisov sat. She saw that everybody was
looking at her and waiting. Nicholas saw that Denisov was refusing
though he smiled delightedly. He ran up to them.

"Please, Vasili Dmitrich," Natasha was saying, "do come!"

"Oh no, let me off, Countess," Denisov replied.

"Now then, Vaska," said Nicholas.

"They coax me as if I were Vaska the cat!" said Denisov jokingly.

"I'll sing for you a whole evening," said Natasha.

"Oh, the faiwy! She can do anything with me!" said Denisov, and he
unhooked his saber. He came out from behind the chairs, clasped his
partner's hand firmly, threw back his head, and advanced his foot,
waiting for the beat. Only on horse back and in the mazurka was
Denisov's short stature not noticeable and he looked the fine fellow he
felt himself to be. At the right beat of the music he looked sideways at
his partner with a merry and triumphant air, suddenly stamped with one
foot, bounded from the floor like a ball, and flew round the room taking
his partner with him. He glided silently on one foot half across the
room, and seeming not to notice the chairs was dashing straight at them,
when suddenly, clinking his spurs and spreading out his legs, he stopped
short on his heels, stood so a second, stamped on the spot clanking his
spurs, whirled rapidly round, and, striking his left heel against his
right, flew round again in a circle. Natasha guessed what he meant to
do, and abandoning herself to him followed his lead hardly knowing how.
First he spun her round, holding her now with his left, now with his
right hand, then falling on one knee he twirled her round him, and again
jumping up, dashed so impetuously forward that it seemed as if he would
rush through the whole suite of rooms without drawing breath, and then
he suddenly stopped and performed some new and unexpected steps. When at
last, smartly whirling his partner round in front of her chair, he drew
up with a click of his spurs and bowed to her, Natasha did not even make
him a curtsy. She fixed her eyes on him in amazement, smiling as if she
did not recognize him.

"What does this mean?" she brought out.

Although Iogel did not acknowledge this to be the real mazurka, everyone
was delighted with Denisov's skill, he was asked again and again as a
partner, and the old men began smilingly to talk about Poland and the
good old days. Denisov, flushed after the mazurka and mopping himself
with his handkerchief, sat down by Natasha and did not leave her for the
rest of the evening.




CHAPTER XIII

For two days after that Rostov did not see Dolokhov at his own or at
Dolokhov's home: on the third day he received a note from him:

As I do not intend to be at your house again for reasons you know of,
and am going to rejoin my regiment, I am giving a farewell supper
tonight to my friends--come to the English Hotel.

About ten o'clock Rostov went to the English Hotel straight from the
theater, where he had been with his family and Denisov. He was at once
shown to the best room, which Dolokhov had taken for that evening. Some
twenty men were gathered round a table at which Dolokhov sat between two
candles. On the table was a pile of gold and paper money, and he was
keeping the bank. Rostov had not seen him since his proposal and Sonya's
refusal and felt uncomfortable at the thought of how they would meet.

Dolokhov's clear, cold glance met Rostov as soon as he entered the door,
as though he had long expected him.

"It's a long time since we met," he said. "Thanks for coming. I'll just
finish dealing, and then Ilyushka will come with his chorus."

"I called once or twice at your house," said Rostov, reddening.

Dolokhov made no reply.

"You may punt," he said.

Rostov recalled at that moment a strange conversation he had once had
with Dolokhov. "None but fools trust to luck in play," Dolokhov had then
said.

"Or are you afraid to play with me?" Dolokhov now asked as if guessing
Rostov's thought.

Beneath his smile Rostov saw in him the mood he had shown at the club
dinner and at other times, when as if tired of everyday life he had felt
a need to escape from it by some strange, and usually cruel, action.

Rostov felt ill at ease. He tried, but failed, to find some joke with
which to reply to Dolokhov's words. But before he had thought of
anything, Dolokhov, looking straight in his face, said slowly and
deliberately so that everyone could hear:

"Do you remember we had a talk about cards... 'He's a fool who trusts to
luck, one should make certain,' and I want to try."

"To try his luck or the certainty?" Rostov asked himself.

"Well, you'd better not play," Dolokhov added, and springing a new pack
of cards said: "Bank, gentlemen!"

Moving the money forward he prepared to deal. Rostov sat down by his
side and at first did not play. Dolokhov kept glancing at him.

"Why don't you play?" he asked.

And strange to say Nicholas felt that he could not help taking up a
card, putting a small stake on it, and beginning to play.

"I have no money with me," he said.

"I'll trust you."

Rostov staked five rubles on a card and lost, staked again, and again
lost. Dolokhov "killed," that is, beat, ten cards of Rostov's running.

"Gentlemen," said Dolokhov after he had dealt for some time. "Please
place your money on the cards or I may get muddled in the reckoning."

One of the players said he hoped he might be trusted.

"Yes, you might, but I am afraid of getting the accounts mixed. So I ask
you to put the money on your cards," replied Dolokhov. "Don't stint
yourself, we'll settle afterwards," he added, turning to Rostov.

The game continued; a waiter kept handing round champagne.

All Rostov's cards were beaten and he had eight hundred rubles scored up
against him. He wrote "800 rubles" on a card, but while the waiter
filled his glass he changed his mind and altered it to his usual stake
of twenty rubles.

"Leave it," said Dolokhov, though he did not seem to be even looking at
Rostov, "you'll win it back all the sooner. I lose to the others but win
from you. Or are you afraid of me?" he asked again.

Rostov submitted. He let the eight hundred remain and laid down a seven
of hearts with a torn corner, which he had picked up from the floor. He
well remembered that seven afterwards. He laid down the seven of hearts,
on which with a broken bit of chalk he had written "800 rubles" in clear
upright figures; he emptied the glass of warm champagne that was handed
him, smiled at Dolokhov's words, and with a sinking heart, waiting for a
seven to turn up, gazed at Dolokhov's hands which held the pack. Much
depended on Rostov's winning or losing on that seven of hearts. On the
previous Sunday the old count had given his son two thousand rubles, and
though he always disliked speaking of money difficulties had told
Nicholas that this was all he could let him have till May, and asked him
to be more economical this time. Nicholas had replied that it would be
more than enough for him and that he gave his word of honor not to take
anything more till the spring. Now only twelve hundred rubles was left
of that money, so that this seven of hearts meant for him not only the
loss of sixteen hundred rubles, but the necessity of going back on his
word. With a sinking heart he watched Dolokhov's hands and thought, "Now
then, make haste and let me have this card and I'll take my cap and
drive home to supper with Denisov, Natasha, and Sonya, and will
certainly never touch a card again." At that moment his home life, jokes
with Petya, talks with Sonya, duets with Natasha, piquet with his
father, and even his comfortable bed in the house on the Povarskaya rose
before him with such vividness, clearness, and charm that it seemed as
if it were all a lost and unappreciated bliss, long past. He could not
conceive that a stupid chance, letting the seven be dealt to the right
rather than to the left, might deprive him of all this happiness, newly
appreciated and newly illumined, and plunge him into the depths of
unknown and undefined misery. That could not be, yet he awaited with a
sinking heart the movement of Dolokhov's hands. Those broad, reddish
hands, with hairy wrists visible from under the shirt cuffs, laid down
the pack and took up a glass and a pipe that were handed him.

"So you are not afraid to play with me?" repeated Dolokhov, and as if
about to tell a good story he put down the cards, leaned back in his
chair, and began deliberately with a smile:

"Yes, gentlemen, I've been told there's a rumor going about Moscow that
I'm a sharper, so I advise you to be careful."

"Come now, deal!" exclaimed Rostov.

"Oh, those Moscow gossips!" said Dolokhov, and he took up the cards with
a smile.

"Aah!" Rostov almost screamed lifting both hands to his head. The seven
he needed was lying uppermost, the first card in the pack. He had lost
more than he could pay.

"Still, don't ruin yourself!" said Dolokhov with a side glance at Rostov
as he continued to deal.




CHAPTER XIV

An hour and a half later most of the players were but little interested
in their own play.

The whole interest was concentrated on Rostov. Instead of sixteen
hundred rubles he had a long column of figures scored against him, which
he had reckoned up to ten thousand, but that now, as he vaguely
supposed, must have risen to fifteen thousand. In reality it already
exceeded twenty thousand rubles. Dolokhov was no longer listening to
stories or telling them, but followed every movement of Rostov's hands
and occasionally ran his eyes over the score against him. He had decided
to play until that score reached forty-three thousand. He had fixed on
that number because forty-three was the sum of his and Sonya's joint
ages. Rostov, leaning his head on both hands, sat at the table which was
scrawled over with figures, wet with spilled wine, and littered with
cards. One tormenting impression did not leave him: that those broad-
boned reddish hands with hairy wrists visible from under the shirt
sleeves, those hands which he loved and hated, held him in their power.

"Six hundred rubles, ace, a corner, a nine... winning it back's
impossible... Oh, how pleasant it was at home!... The knave, double or
quits... it can't be!... And why is he doing this to me?" Rostov
pondered. Sometimes he staked a large sum, but Dolokhov refused to
accept it and fixed the stake himself. Nicholas submitted to him, and at
one moment prayed to God as he had done on the battlefield at the bridge
over the Enns, and then guessed that the card that came first to hand
from the crumpled heap under the table would save him, now counted the
cords on his coat and took a card with that number and tried staking the
total of his losses on it, then he looked round for aid from the other
players, or peered at the now cold face of Dolokhov and tried to read
what was passing in his mind.

"He knows of course what this loss means to me. He can't want my ruin.
Wasn't he my friend? Wasn't I fond of him? But it's not his fault.
What's he to do if he has such luck?... And it's not my fault either,"
he thought to himself, "I have done nothing wrong. Have I killed anyone,
or insulted or wished harm to anyone? Why such a terrible misfortune?
And when did it begin? Such a little while ago I came to this table with
the thought of winning a hundred rubles to buy that casket for Mamma's
name day and then going home. I was so happy, so free, so lighthearted!
And I did not realize how happy I was! When did that end and when did
this new, terrible state of things begin? What marked the change? I sat
all the time in this same place at this table, chose and placed cards,
and watched those broad-boned agile hands in the same way. When did it
happen and what has happened? I am well and strong and still the same
and in the same place. No, it can't be! Surely it will all end in
nothing!"

He was flushed and bathed in perspiration, though the room was not hot.
His face was terrible and piteous to see, especially from its helpless
efforts to seem calm.

The score against him reached the fateful sum of forty-three thousand.
Rostov had just prepared a card, by bending the corner of which he meant
to double the three thousand just put down to his score, when Dolokhov,
slamming down the pack of cards, put it aside and began rapidly adding
up the total of Rostov's debt, breaking the chalk as he marked the
figures in his clear, bold hand.

"Supper, it's time for supper! And here are the gypsies!"

Some swarthy men and women were really entering from the cold outside
and saying something in their gypsy accents. Nicholas understood that it
was all over; but he said in an indifferent tone:

"Well, won't you go on? I had a splendid card all ready," as if it were
the fun of the game which interested him most.

"It's all up! I'm lost!" thought he. "Now a bullet through my brain--
that's all that's left me!" And at the same time he said in a cheerful
voice:

"Come now, just this one more little card!"

"All right!" said Dolokhov, having finished the addition. "All right!
Twenty-one rubles," he said, pointing to the figure twenty-one by which
the total exceeded the round sum of forty-three thousand; and taking up
a pack he prepared to deal. Rostov submissively unbent the corner of his
card and, instead of the six thousand he had intended, carefully wrote
twenty-one.

"It's all the same to me," he said. "I only want to see whether you will
let me win this ten, or beat it."

Dolokhov began to deal seriously. Oh, how Rostov detested at that moment
those hands with their short reddish fingers and hairy wrists, which
held him in their power.... The ten fell to him.

"You owe forty-three thousand, Count," said Dolokhov, and stretching
himself he rose from the table. "One does get tired sitting so long," he
added.

"Yes, I'm tired too," said Rostov.

Dolokhov cut him short, as if to remind him that it was not for him to
jest.

"When am I to receive the money, Count?"

Rostov, flushing, drew Dolokhov into the next room.

"I cannot pay it all immediately. Will you take an I.O.U.?" he said.

"I say, Rostov," said Dolokhov clearly, smiling and looking Nicholas
straight in the eyes, "you know the saying, 'Lucky in love, unlucky at
cards.' Your cousin is in love with you, I know."

"Oh, it's terrible to feel oneself so in this man's power," thought
Rostov. He knew what a shock he would inflict on his father and mother
by the news of this loss, he knew what a relief it would be to escape it
all, and felt that Dolokhov knew that he could save him from all this
shame and sorrow, but wanted now to play with him as a cat does with a
mouse.

"Your cousin..." Dolokhov started to say, but Nicholas interrupted him.

"My cousin has nothing to do with this and it's not necessary to mention
her!" he exclaimed fiercely.

"Then when am I to have it?"

"Tomorrow," replied Rostov and left the room.




CHAPTER XV

To say "tomorrow" and keep up a dignified tone was not difficult, but to
go home alone, see his sisters, brother, mother, and father, confess and
ask for money he had no right to after giving his word of honor, was
terrible.

At home, they had not yet gone to bed. The young people, after returning
from the theater, had had supper and were grouped round the clavichord.
As soon as Nicholas entered, he was enfolded in that poetic atmosphere
of love which pervaded the Rostov household that winter and, now after
Dolokhov's proposal and Iogel's ball, seemed to have grown thicker round
Sonya and Natasha as the air does before a thunderstorm. Sonya and
Natasha, in the light-blue dresses they had worn at the theater, looking
pretty and conscious of it, were standing by the clavichord, happy and
smiling. Vera was playing chess with Shinshin in the drawing room. The
old countess, waiting for the return of her husband and son, sat playing
patience with the old gentlewoman who lived in their house. Denisov,
with sparkling eyes and ruffled hair, sat at the clavichord striking
chords with his short fingers, his legs thrown back and his eyes rolling
as he sang, with his small, husky, but true voice, some verses called
"Enchantress," which he had composed, and to which he was trying to fit
music:


Enchantress, say, to my forsaken lyre What magic power is this recalls
me still? What spark has set my inmost soul on fire, What is this bliss
that makes my fingers thrill?

He was singing in passionate tones, gazing with his sparkling black-
agate eyes at the frightened and happy Natasha.

"Splendid! Excellent!" exclaimed Natasha. "Another verse," she said,
without noticing Nicholas.

"Everything's still the same with them," thought Nicholas, glancing into
the drawing room, where he saw Vera and his mother with the old lady.

"Ah, and here's Nicholas!" cried Natasha, running up to him.

"Is Papa at home?" he asked.

"I am so glad you've come!" said Natasha, without answering him. "We are
enjoying ourselves! Vasili Dmitrich is staying a day longer for my sake!
Did you know?"

"No, Papa is not back yet," said Sonya.

"Nicholas, have you come? Come here, dear!" called the old countess from
the drawing room.

Nicholas went to her, kissed her hand, and sitting down silently at her
table began to watch her hands arranging the cards. From the dancing
room, they still heard the laughter and merry voices trying to persuade
Natasha to sing.

"All wight! All wight!" shouted Denisov. "It's no good making excuses
now! It's your turn to sing the ba'cawolla--I entweat you!"

The countess glanced at her silent son.

"What is the matter?" she asked.

"Oh, nothing," said he, as if weary of being continually asked the same
question. "Will Papa be back soon?"

"I expect so."

"Everything's the same with them. They know nothing about it! Where am I
to go?" thought Nicholas, and went again into the dancing room where the
clavichord stood.

Sonya was sitting at the clavichord, playing the prelude to Denisov's
favorite barcarolle. Natasha was preparing to sing. Denisov was looking
at her with enraptured eyes.

Nicholas began pacing up and down the room.

"Why do they want to make her sing? How can she sing? There's nothing to
be happy about!" thought he.

Sonya struck the first chord of the prelude.

"My God, I'm a ruined and dishonored man! A bullet through my brain is
the only thing left me--not singing!" his thoughts ran on. "Go away? But
where to? It's one--let them sing!"

He continued to pace the room, looking gloomily at Denisov and the girls
and avoiding their eyes.

"Nikolenka, what is the matter?" Sonya's eyes fixed on him seemed to
ask. She noticed at once that something had happened to him.

Nicholas turned away from her. Natasha too, with her quick instinct, had
instantly noticed her brother's condition. But, though she noticed it,
she was herself in such high spirits at that moment, so far from sorrow,
sadness, or self-reproach, that she purposely deceived herself as young
people often do. "No, I am too happy now to spoil my enjoyment by
sympathy with anyone's sorrow," she felt, and she said to herself: "No,
I must be mistaken, he must be feeling happy, just as I am."

"Now, Sonya!" she said, going to the very middle of the room, where she
considered the resonance was best.

Having lifted her head and let her arms droop lifelessly, as ballet
dancers do, Natasha, rising energetically from her heels to her toes,
stepped to the middle of the room and stood still.

"Yes, that's me!" she seemed to say, answering the rapt gaze with which
Denisov followed her.

"And what is she so pleased about?" thought Nicholas, looking at his
sister. "Why isn't she dull and ashamed?"

Natasha took the first note, her throat swelled, her chest rose, her
eyes became serious. At that moment she was oblivious of her
surroundings, and from her smiling lips flowed sounds which anyone may
produce at the same intervals and hold for the same time, but which
leave you cold a thousand times and the thousand and first time thrill
you and make you weep.

Natasha, that winter, had for the first time begun to sing seriously,
mainly because Denisov so delighted in her singing. She no longer sang
as a child, there was no longer in her singing that comical, childish,
painstaking effect that had been in it before; but she did not yet sing
well, as all the connoisseurs who heard her said: "It is not trained,
but it is a beautiful voice that must be trained." Only they generally
said this some time after she had finished singing. While that untrained
voice, with its incorrect breathing and labored transitions, was
sounding, even the connoisseurs said nothing, but only delighted in it
and wished to hear it again. In her voice there was a virginal
freshness, an unconsciousness of her own powers, and an as yet untrained
velvety softness, which so mingled with her lack of art in singing that
it seemed as if nothing in that voice could be altered without spoiling
it.

"What is this?" thought Nicholas, listening to her with widely opened
eyes. "What has happened to her? How she is singing today!" And suddenly
the whole world centered for him on anticipation of the next note, the
next phrase, and everything in the world was divided into three beats:
"Oh mio crudele affetto."... One, two, three... one, two, three...
One... "Oh mio crudele affetto."... One, two, three... One. "Oh, this
senseless life of ours!" thought Nicholas. "All this misery, and money,
and Dolokhov, and anger, and honor--it's all nonsense... but this is
real.... Now then, Natasha, now then, dearest! Now then, darling! How
will she take that si? She's taken it! Thank God!" And without noticing
that he was singing, to strengthen the si he sung a second, a third
below the high note. "Ah, God! How fine! Did I really take it? How
fortunate!" he thought.

Oh, how that chord vibrated, and how moved was something that was finest
in Rostov's soul! And this something was apart from everything else in
the world and above everything in the world. "What were losses, and
Dolokhov, and words of honor?... All nonsense! One might kill and rob
and yet be happy..."




CHAPTER XVI

It was long since Rostov had felt such enjoyment from music as he did
that day. But no sooner had Natasha finished her barcarolle than reality
again presented itself. He got up without saying a word and went
downstairs to his own room. A quarter of an hour later the old count
came in from his club, cheerful and contented. Nicholas, hearing him
drive up, went to meet him.

"Well--had a good time?" said the old count, smiling gaily and proudly
at his son.

Nicholas tried to say "Yes," but could not: and he nearly burst into
sobs. The count was lighting his pipe and did not notice his son's
condition.

"Ah, it can't be avoided!" thought Nicholas, for the first and last
time. And suddenly, in the most casual tone, which made him feel ashamed
of himself, he said, as if merely asking his father to let him have the
carriage to drive to town:

"Papa, I have come on a matter of business. I was nearly forgetting. I
need some money."

"Dear me!" said his father, who was in a specially good humor. "I told
you it would not be enough. How much?"

"Very much," said Nicholas flushing, and with a stupid careless smile,
for which he was long unable to forgive himself, "I have lost a little,
I mean a good deal, a great deal--forty three thousand."

"What! To whom?... Nonsense!" cried the count, suddenly reddening with
an apoplectic flush over neck and nape as old people do.

"I promised to pay tomorrow," said Nicholas.

"Well!..." said the old count, spreading out his arms and sinking
helplessly on the sofa.

"It can't be helped It happens to everyone!" said the son, with a bold,
free, and easy tone, while in his soul he regarded himself as a
worthless scoundrel whose whole life could not atone for his crime. He
longed to kiss his father's hands and kneel to beg his forgiveness, but
said, in a careless and even rude voice, that it happens to everyone!

The old count cast down his eyes on hearing his son's words and began
bustlingly searching for something.

"Yes, yes," he muttered, "it will be difficult, I fear, difficult to
raise... happens to everybody! Yes, who has not done it?"

And with a furtive glance at his son's face, the count went out of the
room.... Nicholas had been prepared for resistance, but had not at all
expected this.

"Papa! Pa-pa!" he called after him, sobbing, "forgive me!" And seizing
his father's hand, he pressed it to his lips and burst into tears.

While father and son were having their explanation, the mother and
daughter were having one not less important. Natasha came running to her
mother, quite excited.

"Mamma!... Mamma!... He has made me..."

"Made what?"

"Made, made me an offer, Mamma! Mamma!" she exclaimed.

The countess did not believe her ears. Denisov had proposed. To whom? To
this chit of a girl, Natasha, who not so long ago was playing with dolls
and who was still having lessons.

"Don't, Natasha! What nonsense!" she said, hoping it was a joke.

"Nonsense, indeed! I am telling you the fact," said Natasha indignantly.
"I come to ask you what to do, and you call it 'nonsense!'"

The countess shrugged her shoulders.

"If it is true that Monsieur Denisov has made you a proposal, tell him
he is a fool, that's all!"

"No, he's not a fool!" replied Natasha indignantly and seriously.

"Well then, what do you want? You're all in love nowadays. Well, if you
are in love, marry him!" said the countess, with a laugh of annoyance.
"Good luck to you!"

"No, Mamma, I'm not in love with him, I suppose I'm not in love with
him."

"Well then, tell him so."

"Mamma, are you cross? Don't be cross, dear! Is it my fault?"

"No, but what is it, my dear? Do you want me to go and tell him?" said
the countess smiling.

"No, I will do it myself, only tell me what to say. It's all very well
for you," said Natasha, with a responsive smile. "You should have seen
how he said it! I know he did not mean to say it, but it came out
accidently."

"Well, all the same, you must refuse him."

"No, I mustn't. I am so sorry for him! He's so nice."

"Well then, accept his offer. It's high time for you to be married,"
answered the countess sharply and sarcastically.

"No, Mamma, but I'm so sorry for him. I don't know how I'm to say it."

"And there's nothing for you to say. I shall speak to him myself," said
the countess, indignant that they should have dared to treat this little
Natasha as grown up.

"No, not on any account! I will tell him myself, and you'll listen at
the door," and Natasha ran across the drawing room to the dancing hall,
where Denisov was sitting on the same chair by the clavichord with his
face in his hands.

He jumped up at the sound of her light step.

"Nataly," he said, moving with rapid steps toward her, "decide my fate.
It is in your hands."

"Vasili Dmitrich, I'm so sorry for you!... No, but you are so nice...
but it won't do...not that... but as a friend, I shall always love you."

Denisov bent over her hand and she heard strange sounds she did not
understand. She kissed his rough curly black head. At this instant, they
heard the quick rustle of the countess' dress. She came up to them.

"Vasili Dmitrich, I thank you for the honor," she said, with an
embarrassed voice, though it sounded severe to Denisov--"but my daughter
is so young, and I thought that, as my son's friend, you would have
addressed yourself first to me. In that case you would not have obliged
me to give this refusal."

"Countess..." said Denisov, with downcast eyes and a guilty face. He
tried to say more, but faltered.

Natasha could not remain calm, seeing him in such a plight. She began to
sob aloud.

"Countess, I have done w'ong," Denisov went on in an unsteady voice,
"but believe me, I so adore your daughter and all your family that I
would give my life twice over..." He looked at the countess, and seeing
her severe face said: "Well, good-by, Countess," and kissing her hand,
he left the room with quick resolute strides, without looking at
Natasha.

Next day Rostov saw Denisov off. He did not wish to stay another day in
Moscow. All Denisov's Moscow friends gave him a farewell entertainment
at the gypsies', with the result that he had no recollection of how he
was put in the sleigh or of the first three stages of his journey.

After Denisov's departure, Rostov spent another fortnight in Moscow,
without going out of the house, waiting for the money his father could
not at once raise, and he spent most of his time in the girls' room.

Sonya was more tender and devoted to him than ever. It was as if she
wanted to show him that his losses were an achievement that made her
love him all the more, but Nicholas now considered himself unworthy of
her.

He filled the girls' albums with verses and music, and having at last
sent Dolokhov the whole forty-three thousand rubles and received his
receipt, he left at the end of November, without taking leave of any of
his acquaintances, to overtake his regiment which was already in Poland.

BOOK FIVE: 1806 - 07




CHAPTER I

After his interview with his wife Pierre left for Petersburg. At the
Torzhok post station, either there were no horses or the postmaster
would not supply them. Pierre was obliged to wait. Without undressing,
he lay down on the leather sofa in front of a round table, put his big
feet in their overboots on the table, and began to reflect.

"Will you have the portmanteaus brought in? And a bed got ready, and
tea?" asked his valet.

Pierre gave no answer, for he neither heard nor saw anything. He had
begun to think of the last station and was still pondering on the same
question--one so important that he took no notice of what went on around
him. Not only was he indifferent as to whether he got to Petersburg
earlier or later, or whether he secured accommodation at this station,
but compared to the thoughts that now occupied him it was a matter of
indifference whether he remained there for a few hours or for the rest
of his life.

The postmaster, his wife, the valet, and a peasant woman selling Torzhok
embroidery came into the room offering their services. Without changing
his careless attitude, Pierre looked at them over his spectacles unable
to understand what they wanted or how they could go on living without
having solved the problems that so absorbed him. He had been engrossed
by the same thoughts ever since the day he returned from Sokolniki after
the duel and had spent that first agonizing, sleepless night. But now,
in the solitude of the journey, they seized him with special force. No
matter what he thought about, he always returned to these same questions
which he could not solve and yet could not cease to ask himself. It was
as if the thread of the chief screw which held his life together were
stripped, so that the screw could not get in or out, but went on turning
uselessly in the same place.

The postmaster came in and began obsequiously to beg his excellency to
wait only two hours, when, come what might, he would let his excellency
have the courier horses. It was plain that he was lying and only wanted
to get more money from the traveler.

"Is this good or bad?" Pierre asked himself. "It is good for me, bad for
another traveler, and for himself it's unavoidable, because he needs
money for food; the man said an officer had once given him a thrashing
for letting a private traveler have the courier horses. But the officer
thrashed him because he had to get on as quickly as possible. And I,"
continued Pierre, "shot Dolokhov because I considered myself injured,
and Louis XVI was executed because they considered him a criminal, and a
year later they executed those who executed him--also for some reason.
What is bad? What is good? What should one love and what hate? What does
one live for? And what am I? What is life, and what is death? What power
governs all?"

There was no answer to any of these questions, except one, and that not
a logical answer and not at all a reply to them. The answer was: "You'll
die and all will end. You'll die and know all, or cease asking." But
dying was also dreadful.

The Torzhok peddler woman, in a whining voice, went on offering her
wares, especially a pair of goatskin slippers. "I have hundreds of
rubles I don't know what to do with, and she stands in her tattered
cloak looking timidly at me," he thought. "And what does she want the
money for? As if that money could add a hair's breadth to happiness or
peace of mind. Can anything in the world make her or me less a prey to
evil and death?--death which ends all and must come today or tomorrow--
at any rate, in an instant as compared with eternity." And again he
twisted the screw with the stripped thread, and again it turned
uselessly in the same place.

His servant handed him a half-cut novel, in the form of letters, by
Madame de Souza. He began reading about the sufferings and virtuous
struggles of a certain Emilie de Mansfeld. "And why did she resist her
seducer when she loved him?" he thought. "God could not have put into
her heart an impulse that was against His will. My wife--as she once
was--did not struggle, and perhaps she was right. Nothing has been found
out, nothing discovered," Pierre again said to himself. "All we can know
is that we know nothing. And that's the height of human wisdom."

Everything within and around him seemed confused, senseless, and
repellent. Yet in this very repugnance to all his circumstances Pierre
found a kind of tantalizing satisfaction.

"I make bold to ask your excellency to move a little for this
gentleman," said the postmaster, entering the room followed by another
traveler, also detained for lack of horses.

The newcomer was a short, large-boned, yellow-faced, wrinkled old man,
with gray bushy eyebrows overhanging bright eyes of an indefinite
grayish color.

Pierre took his feet off the table, stood up, and lay down on a bed that
had been got ready for him, glancing now and then at the newcomer, who,
with a gloomy and tired face, was wearily taking off his wraps with the
aid of his servant, and not looking at Pierre. With a pair of felt boots
on his thin bony legs, and keeping on a worn, nankeen-covered, sheepskin
coat, the traveler sat down on the sofa, leaned back his big head with
its broad temples and close-cropped hair, and looked at Bezukhov. The
stern, shrewd, and penetrating expression of that look struck Pierre. He
felt a wish to speak to the stranger, but by the time he had made up his
mind to ask him a question about the roads, the traveler had closed his
eyes. His shriveled old hands were folded and on the finger of one of
them Pierre noticed a large cast iron ring with a seal representing a
death's head. The stranger sat without stirring, either resting or, as
it seemed to Pierre, sunk in profound and calm meditation. His servant
was also a yellow, wrinkled old man, without beard or mustache,
evidently not because he was shaven but because they had never grown.
This active old servant was unpacking the traveler's canteen and
preparing tea. He brought in a boiling samovar. When everything was
ready, the stranger opened his eyes, moved to the table, filled a
tumbler with tea for himself and one for the beardless old man to whom
he passed it. Pierre began to feel a sense of uneasiness, and the need,
even the inevitability, of entering into conversation with this
stranger.

The servant brought back his tumbler turned upside down, * with an
unfinished bit of nibbled sugar, and asked if anything more would be
wanted.


* To indicate he did not want more tea.

"No. Give me the book," said the stranger.

The servant handed him a book which Pierre took to be a devotional work,
and the traveler became absorbed in it. Pierre looked at him. All at
once the stranger closed the book, putting in a marker, and again,
leaning with his arms on the back of the sofa, sat in his former
position with his eyes shut. Pierre looked at him and had not time to
turn away when the old man, opening his eyes, fixed his steady and
severe gaze straight on Pierre's face.

Pierre felt confused and wished to avoid that look, but the bright old
eyes attracted him irresistibly.




CHAPTER II

"I have the pleasure of addressing Count Bezukhov, if I am not
mistaken," said the stranger in a deliberate and loud voice.

Pierre looked silently and inquiringly at him over his spectacles.

"I have heard of you, my dear sir," continued the stranger, "and of your
misfortune." He seemed to emphasize the last word, as if to say--"Yes,
misfortune! Call it what you please, I know that what happened to you in
Moscow was a misfortune."--"I regret it very much, my dear sir."

Pierre flushed and, hurriedly putting his legs down from the bed, bent
forward toward the old man with a forced and timid smile.

"I have not referred to this out of curiosity, my dear sir, but for
greater reasons."

He paused, his gaze still on Pierre, and moved aside on the sofa by way
of inviting the other to take a seat beside him. Pierre felt reluctant
to enter into conversation with this old man, but, submitting to him
involuntarily, came up and sat down beside him.

"You are unhappy, my dear sir," the stranger continued. "You are young
and I am old. I should like to help you as far as lies in my power."

"Oh, yes!" said Pierre, with a forced smile. "I am very grateful to you.
Where are you traveling from?"

The stranger's face was not genial, it was even cold and severe, but in
spite of this, both the face and words of his new acquaintance were
irresistibly attractive to Pierre.

"But if for reason you don't feel inclined to talk to me," said the old
man, "say so, my dear sir." And he suddenly smiled, in an unexpected and
tenderly paternal way.

"Oh no, not at all! On the contrary, I am very glad to make your
acquaintance," said Pierre. And again, glancing at the stranger's hands,
he looked more closely at the ring, with its skull--a masonic sign.

"Allow me to ask," he said, "are you a Mason?"

"Yes, I belong to the Brotherhood of the Freemasons," said the stranger,
looking deeper and deeper into Pierre's eyes. "And in their name and my
own I hold out a brotherly hand to you."

"I am afraid," said Pierre, smiling, and wavering between the confidence
the personality of the Freemason inspired in him and his own habit of
ridiculing the masonic beliefs--"I am afraid I am very far from
understanding--how am I to put it?--I am afraid my way of looking at the
world is so opposed to yours that we shall not understand one another."

"I know your outlook," said the Mason, "and the view of life you
mention, and which you think is the result of your own mental efforts,
is the one held by the majority of people, and is the invariable fruit
of pride, indolence, and ignorance. Forgive me, my dear sir, but if I
had not known it I should not have addressed you. Your view of life is a
regrettable delusion."

"Just as I may suppose you to be deluded," said Pierre, with a faint
smile.

"I should never dare to say that I know the truth," said the Mason,
whose words struck Pierre more and more by their precision and firmness.
"No one can attain to truth by himself. Only by laying stone on stone
with the cooperation of all, by the millions of generations from our
forefather Adam to our own times, is that temple reared which is to be a
worthy dwelling place of the Great God," he added, and closed his eyes.

"I ought to tell you that I do not believe... do not believe in God,"
said Pierre, regretfully and with an effort, feeling it essential to
speak the whole truth.

The Mason looked intently at Pierre and smiled as a rich man with
millions in hand might smile at a poor fellow who told him that he, poor
man, had not the five rubles that would make him happy.

"Yes, you do not know Him, my dear sir," said the Mason. "You cannot
know Him. You do not know Him and that is why you are unhappy."

"Yes, yes, I am unhappy," assented Pierre. "But what am I to do?"

"You know Him not, my dear sir, and so you are very unhappy. You do not
know Him, but He is here, He is in me, He is in my words, He is in thee,
and even in those blasphemous words thou hast just uttered!" pronounced
the Mason in a stern and tremulous voice.

He paused and sighed, evidently trying to calm himself.

"If He were not," he said quietly, "you and I would not be speaking of
Him, my dear sir. Of what, of whom, are we speaking? Whom hast thou
denied?" he suddenly asked with exulting austerity and authority in his
voice. "Who invented Him, if He did not exist? Whence came thy
conception of the existence of such an incomprehensible Being? didst
thou, and why did the whole world, conceive the idea of the existence of
such an incomprehensible Being, a Being all-powerful, eternal, and
infinite in all His attributes?..."

He stopped and remained silent for a long time.

Pierre could not and did not wish to break this silence.

"He exists, but to understand Him is hard," the Mason began again,
looking not at Pierre but straight before him, and turning the leaves of
his book with his old hands which from excitement he could not keep
still. "If it were a man whose existence thou didst doubt I could bring
him to thee, could take him by the hand and show him to thee. But how
can I, an insignificant mortal, show His omnipotence, His infinity, and
all His mercy to one who is blind, or who shuts his eyes that he may not
see or understand Him and may not see or understand his own vileness and
sinfulness?" He paused again. "Who art thou? Thou dreamest that thou art
wise because thou couldst utter those blasphemous words," he went on,
with a somber and scornful smile. "And thou art more foolish and
unreasonable than a little child, who, playing with the parts of a
skillfully made watch, dares to say that, as he does not understand its
use, he does not believe in the master who made it. To know Him is
hard.... For ages, from our forefather Adam to our own day, we labor to
attain that knowledge and are still infinitely far from our aim; but in
our lack of understanding we see only our weakness and His
greatness...."

Pierre listened with swelling heart, gazing into the Mason's face with
shining eyes, not interrupting or questioning him, but believing with
his whole soul what the stranger said. Whether he accepted the wise
reasoning contained in the Mason's words, or believed as a child
believes, in the speaker's tone of conviction and earnestness, or the
tremor of the speaker's voice--which sometimes almost broke--or those
brilliant aged eyes grown old in this conviction, or the calm firmness
and certainty of his vocation, which radiated from his whole being (and
which struck Pierre especially by contrast with his own dejection and
hopelessness)--at any rate, Pierre longed with his whole soul to believe
and he did believe, and felt a joyful sense of comfort, regeneration,
and return to life.

"He is not to be apprehended by reason, but by life," said the Mason.

"I do not understand," said Pierre, feeling with dismay doubts
reawakening. He was afraid of any want of clearness, any weakness, in
the Mason's arguments; he dreaded not to be able to believe in him. "I
don't understand," he said, "how it is that the mind of man cannot
attain the knowledge of which you speak."

The Mason smiled with his gentle fatherly smile.

"The highest wisdom and truth are like the purest liquid we may wish to
imbibe," he said. "Can I receive that pure liquid into an impure vessel
and judge of its purity? Only by the inner purification of myself can I
retain in some degree of purity the liquid I receive."

"Yes, yes, that is so," said Pierre joyfully.

"The highest wisdom is not founded on reason alone, not on those worldly
sciences of physics, history, chemistry, and the like, into which
intellectual knowledge is divided. The highest wisdom is one. The
highest wisdom has but one science--the science of the whole--the
science explaining the whole creation and man's place in it. To receive
that science it is necessary to purify and renew one's inner self, and
so before one can know, it is necessary to believe and to perfect one's
self. And to attain this end, we have the light called conscience that
God has implanted in our souls."

"Yes, yes," assented Pierre.

"Look then at thy inner self with the eyes of the spirit, and ask
thyself whether thou art content with thyself. What hast thou attained
relying on reason only? What art thou? You are young, you are rich, you
are clever, you are well educated. And what have you done with all these
good gifts? Are you content with yourself and with your life?"

"No, I hate my life," Pierre muttered, wincing.

"Thou hatest it. Then change it, purify thyself; and as thou art
purified, thou wilt gain wisdom. Look at your life, my dear sir. How
have you spent it? In riotous orgies and debauchery, receiving
everything from society and giving nothing in return. You have become
the possessor of wealth. How have you used it? What have you done for
your neighbor? Have you ever thought of your tens of thousands of
slaves? Have you helped them physically and morally? No! You have
profited by their toil to lead a profligate life. That is what you have
done. Have you chosen a post in which you might be of service to your
neighbor? No! You have spent your life in idleness. Then you married, my
dear sir--took on yourself responsibility for the guidance of a young
woman; and what have you done? You have not helped her to find the way
of truth, my dear sir, but have thrust her into an abyss of deceit and
misery. A man offended you and you shot him, and you say you do not know
God and hate your life. There is nothing strange in that, my dear sir!"

After these words, the Mason, as if tired by his long discourse, again
leaned his arms on the back of the sofa and closed his eyes. Pierre
looked at that aged, stern, motionless, almost lifeless face and moved
his lips without uttering a sound. He wished to say, "Yes, a vile, idle,
vicious life!" but dared not break the silence.

The Mason cleared his throat huskily, as old men do, and called his
servant.

"How about the horses?" he asked, without looking at Pierre.

"The exchange horses have just come," answered the servant. "Will you
not rest here?"

"No, tell them to harness."

"Can he really be going away leaving me alone without having told me
all, and without promising to help me?" thought Pierre, rising with
downcast head; and he began to pace the room, glancing occasionally at
the Mason. "Yes, I never thought of it, but I have led a contemptible
and profligate life, though I did not like it and did not want to,"
thought Pierre. "But this man knows the truth and, if he wished to,
could disclose it to me."

Pierre wished to say this to the Mason, but did not dare to. The
traveler, having packed his things with his practiced hands, began
fastening his coat. When he had finished, he turned to Bezukhov, and
said in a tone of indifferent politeness:

"Where are you going to now, my dear sir?"

"I?... I'm going to Petersburg," answered Pierre, in a childlike,
hesitating voice. "I thank you. I agree with all you have said. But do
not suppose me to be so bad. With my whole soul I wish to be what you
would have me be, but I have never had help from anyone.... But it is I,
above all, who am to blame for everything. Help me, teach me, and
perhaps I may..."

Pierre could not go on. He gulped and turned away.

The Mason remained silent for a long time, evidently considering.

"Help comes from God alone," he said, "but such measure of help as our
Order can bestow it will render you, my dear sir. You are going to
Petersburg. Hand this to Count Willarski" (he took out his notebook and
wrote a few words on a large sheet of paper folded in four). "Allow me
to give you a piece of advice. When you reach the capital, first of all
devote some time to solitude and self-examination and do not resume your
former way of life. And now I wish you a good journey, my dear sir," he
added, seeing that his servant had entered... "and success."

The traveler was Joseph Alexeevich Bazdeev, as Pierre saw from the
postmaster's book. Bazdeev had been one of the best-known Freemasons and
Martinists, even in Novikov's time. For a long while after he had gone,
Pierre did not go to bed or order horses but paced up and down the room,
pondering over his vicious past, and with a rapturous sense of beginning
anew pictured to himself the blissful, irreproachable, virtuous future
that seemed to him so easy. It seemed to him that he had been vicious
only because he had somehow forgotten how good it is to be virtuous. Not
a trace of his former doubts remained in his soul. He firmly believed in
the possibility of the brotherhood of men united in the aim of
supporting one another in the path of virtue, and that is how
Freemasonry presented itself to him.




CHAPTER III

On reaching Petersburg Pierre did not let anyone know of his arrival, he
went nowhere and spent whole days in reading Thomas a Kempis, whose book
had been sent him by someone unknown. One thing he continually realized
as he read that book: the joy, hitherto unknown to him, of believing in
the possibility of attaining perfection, and in the possibility of
active brotherly love among men, which Joseph Alexeevich had revealed to
him. A week after his arrival, the young Polish count, Willarski, whom
Pierre had known slightly in Petersburg society, came into his room one
evening in the official and ceremonious manner in which Dolokhov's
second had called on him, and, having closed the door behind him and
satisfied himself that there was nobody else in the room, addressed
Pierre.

"I have come to you with a message and an offer, Count," he said without
sitting down. "A person of very high standing in our Brotherhood has
made application for you to be received into our Order before the usual
term and has proposed to me to be your sponsor. I consider it a sacred
duty to fulfill that person's wishes. Do you wish to enter the
Brotherhood of Freemasons under my sponsorship?"

The cold, austere tone of this man, whom he had almost always before met
at balls, amiably smiling in the society of the most brilliant women,
surprised Pierre.

"Yes, I do wish it," said he.

Willarski bowed his head.

"One more question, Count," he said, "which I beg you to answer in all
sincerity--not as a future Mason but as an honest man: have you
renounced your former convictions--do you believe in God?"

Pierre considered.

"Yes... yes, I believe in God," he said.

"In that case..." began Willarski, but Pierre interrupted him.

"Yes, I do believe in God," he repeated.

"In that case we can go," said Willarski. "My carriage is at your
service."

Willarski was silent throughout the drive. To Pierre's inquiries as to
what he must do and how he should answer, Willarski only replied that
brothers more worthy than he would test him and that Pierre had only to
tell the truth.

Having entered the courtyard of a large house where the Lodge had its
headquarters, and having ascended a dark staircase, they entered a small
well-lit anteroom where they took off their cloaks without the aid of a
servant. From there they passed into another room. A man in strange
attire appeared at the door. Willarski, stepping toward him, said
something to him in French in an undertone and then went up to a small
wardrobe in which Pierre noticed garments such as he had never seen
before. Having taken a kerchief from the cupboard, Willarski bound
Pierre's eyes with it and tied it in a knot behind, catching some hairs
painfully in the knot. Then he drew his face down, kissed him, and
taking him by the hand led him forward. The hairs tied in the knot hurt
Pierre and there were lines of pain on his face and a shamefaced smile.
His huge figure, with arms hanging down and with a puckered, though
smiling face, moved after Willarski with uncertain, timid steps.

Having led him about ten paces, Willarski stopped.

"Whatever happens to you," he said, "you must bear it all manfully if
you have firmly resolved to join our Brotherhood." (Pierre nodded
affirmatively.) "When you hear a knock at the door, you will uncover
your eyes," added Willarski. "I wish you courage and success," and,
pressing Pierre's hand, he went out.

Left alone, Pierre went on smiling in the same way. Once or twice he
shrugged his shoulders and raised his hand to the kerchief, as if
wishing to take it off, but let it drop again. The five minutes spent
with his eyes bandaged seemed to him an hour. His arms felt numb, his
legs almost gave way, it seemed to him that he was tired out. He
experienced a variety of most complex sensations. He felt afraid of what
would happen to him and still more afraid of showing his fear. He felt
curious to know what was going to happen and what would be revealed to
him; but most of all, he felt joyful that the moment had come when he
would at last start on that path of regeneration and on the actively
virtuous life of which he had been dreaming since he met Joseph
Alexeevich. Loud knocks were heard at the door. Pierre took the bandage
off his eyes and glanced around him. The room was in black darkness,
only a small lamp was burning inside something white. Pierre went nearer
and saw that the lamp stood on a black table on which lay an open book.
The book was the Gospel, and the white thing with the lamp inside was a
human skull with its cavities and teeth. After reading the first words
of the Gospel: "In the beginning was the Word and the Word was with
God," Pierre went round the table and saw a large open box filled with
something. It was a coffin with bones inside. He was not at all
surprised by what he saw. Hoping to enter on an entirely new life quite
unlike the old one, he expected everything to be unusual, even more
unusual than what he was seeing. A skull, a coffin, the Gospel--it
seemed to him that he had expected all this and even more. Trying to
stimulate his emotions he looked around. "God, death, love, the
brotherhood of man," he kept saying to himself, associating these words
with vague yet joyful ideas. The door opened and someone came in.

By the dim light, to which Pierre had already become accustomed, he saw
a rather a short man. Having evidently come from the light into the
darkness, the man paused, then moved with cautious steps toward the
table and placed on it his small leather-gloved hands.

This short man had on a white leather apron which covered his chest and
part of his legs; he had on a kind of necklace above which rose a high
white ruffle, outlining his rather long face which was lit up from
below.

"For what have you come hither?" asked the newcomer, turning in Pierre's
direction at a slight rustle made by the latter. "Why have you, who do
not believe in the truth of the light and who have not seen the light,
come here? What do you seek from us? Wisdom, virtue, enlightenment?"

At the moment the door opened and the stranger came in, Pierre felt a
sense of awe and veneration such as he had experienced in his boyhood at
confession; he felt himself in the presence of one socially a complete
stranger, yet nearer to him through the brotherhood of man. With bated
breath and beating heart he moved toward the Rhetor (by which name the
brother who prepared a seeker for entrance into the Brotherhood was
known). Drawing nearer, he recognized in the Rhetor a man he knew,
Smolyaninov, and it mortified him to think that the newcomer was an
acquaintance--he wished him simply a brother and a virtuous instructor.
For a long time he could not utter a word, so that the Rhetor had to
repeat his question.

"Yes... I... I... desire regeneration," Pierre uttered with difficulty.

"Very well," said Smolyaninov, and went on at once: "Have you any idea
of the means by which our holy Order will help you to reach your aim?"
said he quietly and quickly.

"I... hope... for guidance... help... in regeneration," said Pierre,
with a trembling voice and some difficulty in utterance due to his
excitement and to being unaccustomed to speak of abstract matters in
Russian.

"What is your conception of Freemasonry?"

"I imagine that Freemasonry is the fraternity and equality of men who
have virtuous aims," said Pierre, feeling ashamed of the inadequacy of
his words for the solemnity of the moment, as he spoke. "I imagine..."

"Good!" said the Rhetor quickly, apparently satisfied with this answer.
"Have you sought for means of attaining your aim in religion?"

"No, I considered it erroneous and did not follow it," said Pierre, so
softly that the Rhetor did not hear him and asked him what he was
saying. "I have been an atheist," answered Pierre.

"You are seeking for truth in order to follow its laws in your life,
therefore you seek wisdom and virtue. Is that not so?" said the Rhetor,
after a moment's pause.

"Yes, yes," assented Pierre.

The Rhetor cleared his throat, crossed his gloved hands on his breast,
and began to speak.

"Now I must disclose to you the chief aim of our Order," he said, "and
if this aim coincides with yours, you may enter our Brotherhood with
profit. The first and chief object of our Order, the foundation on which
it rests and which no human power can destroy, is the preservation and
handing on to posterity of a certain important mystery... which has come
down to us from the remotest ages, even from the first man--a mystery on
which perhaps the fate of mankind depends. But since this mystery is of
such a nature that nobody can know or use it unless he be prepared by
long and diligent self-purification, not everyone can hope to attain it
quickly. Hence we have a secondary aim, that of preparing our members as
much as possible to reform their hearts, to purify and enlighten their
minds, by means handed on to us by tradition from those who have striven
to attain this mystery, and thereby to render them capable of receiving
it.

"By purifying and regenerating our members we try, thirdly, to improve
the whole human race, offering it in our members an example of piety and
virtue, and thereby try with all our might to combat the evil which
sways the world. Think this over and I will come to you again."

"To combat the evil which sways the world..." Pierre repeated, and a
mental image of his future activity in this direction rose in his mind.
He imagined men such as he had himself been a fortnight ago, and he
addressed an edifying exhortation to them. He imagined to himself
vicious and unfortunate people whom he would assist by word and deed,
imagined oppressors whose victims he would rescue. Of the three objects
mentioned by the Rhetor, this last, that of improving mankind,
especially appealed to Pierre. The important mystery mentioned by the
Rhetor, though it aroused his curiosity, did not seem to him essential,
and the second aim, that of purifying and regenerating himself, did not
much interest him because at that moment he felt with delight that he
was already perfectly cured of his former faults and was ready for all
that was good.

Half an hour later, the Rhetor returned to inform the seeker of the
seven virtues, corresponding to the seven steps of Solomon's temple,
which every Freemason should cultivate in himself. These virtues were:
1. Discretion, the keeping of the secrets of the Order. 2. Obedience to
those of higher ranks in the Order. 3. Morality. 4. Love of mankind. 5.
Courage. 6. Generosity. 7. The love of death.

"In the seventh place, try, by the frequent thought of death," the
Rhetor said, "to bring yourself to regard it not as a dreaded foe, but
as a friend that frees the soul grown weary in the labors of virtue from
this distressful life, and leads it to its place of recompense and
peace."

"Yes, that must be so," thought Pierre, when after these words the
Rhetor went away, leaving him to solitary meditation. "It must be so,
but I am still so weak that I love my life, the meaning of which is only
now gradually opening before me." But five of the other virtues which
Pierre recalled, counting them on his fingers, he felt already in his
soul: courage, generosity, morality, love of mankind, and especially
obedience--which did not even seem to him a virtue, but a joy. (He now
felt so glad to be free from his own lawlessness and to submit his will
to those who knew the indubitable truth.) He forgot what the seventh
virtue was and could not recall it.

The third time the Rhetor came back more quickly and asked Pierre
whether he was still firm in his intention and determined to submit to
all that would be required of him.

"I am ready for everything," said Pierre.

"I must also inform you," said the Rhetor, "that our Order delivers its
teaching not in words only but also by other means, which may perhaps
have a stronger effect on the sincere seeker after wisdom and virtue
than mere words. This chamber with what you see therein should already
have suggested to your heart, if it is sincere, more than words could
do. You will perhaps also see in your further initiation a like method
of enlightenment. Our Order imitates the ancient societies that
explained their teaching by hieroglyphics. A hieroglyph," said the
Rhetor, "is an emblem of something not cognizable by the senses but
which possesses qualities resembling those of the symbol."

Pierre knew very well what a hieroglyph was, but dared not speak. He
listened to the Rhetor in silence, feeling from all he said that his
ordeal was about to begin.

"If you are resolved, I must begin your initiation," said the Rhetor
coming closer to Pierre. "In token of generosity I ask you to give me
all your valuables."

"But I have nothing here," replied Pierre, supposing that he was asked
to give up all he possessed.

"What you have with you: watch, money, rings...."

Pierre quickly took out his purse and watch, but could not manage for
some time to get the wedding ring off his fat finger. When that had been
done, the Rhetor said:

"In token of obedience, I ask you to undress."

Pierre took off his coat, waistcoat, and left boot according to the
Rhetor's instructions. The Mason drew the shirt back from Pierre's left
breast, and stooping down pulled up the left leg of his trousers to
above the knee. Pierre hurriedly began taking off his right boot also
and was going to tuck up the other trouser leg to save this stranger the
trouble, but the Mason told him that was not necessary and gave him a
slipper for his left foot. With a childlike smile of embarrassment,
doubt, and self-derision, which appeared on his face against his will,
Pierre stood with his arms hanging down and legs apart, before his
brother Rhetor, and awaited his further commands.

"And now, in token of candor, I ask you to reveal to me your chief
passion," said the latter.

"My passion! I have had so many," replied Pierre.

"That passion which more than all others caused you to waver on the path
of virtue," said the Mason.

Pierre paused, seeking a reply.

"Wine? Gluttony? Idleness? Laziness? Irritability? Anger? Women?" He
went over his vices in his mind, not knowing to which of them to give
the pre-eminence.

"Women," he said in a low, scarcely audible voice.

The Mason did not move and for a long time said nothing after this
answer. At last he moved up to Pierre and, taking the kerchief that lay
on the table, again bound his eyes.

"For the last time I say to you--turn all your attention upon yourself,
put a bridle on your senses, and seek blessedness, not in passion but in
your own heart. The source of blessedness is not without us but
within...."

Pierre had already long been feeling in himself that refreshing source
of blessedness which now flooded his heart with glad emotion.




CHAPTER IV

Soon after this there came into the dark chamber to fetch Pierre, not
the Rhetor but Pierre's sponsor, Willarski, whom he recognized by his
voice. To fresh questions as to the firmness of his resolution Pierre
replied: "Yes, yes, I agree," and with a beaming, childlike smile, his
fat chest uncovered, stepping unevenly and timidly in one slippered and
one booted foot, he advanced, while Willarski held a sword to his bare
chest. He was conducted from that room along passages that turned
backwards and forwards and was at last brought to the doors of the
Lodge. Willarski coughed, he was answered by the masonic knock with
mallets, the doors opened before them. A bass voice (Pierre was still
blindfolded) questioned him as to who he was, when and where he was
born, and so on. Then he was again led somewhere still blindfolded, and
as they went along he was told allegories of the toils of his
pilgrimage, of holy friendship, of the Eternal Architect of the
universe, and of the courage with which he should endure toils and
dangers. During these wanderings, Pierre noticed that he was spoken of
now as the "Seeker," now as the "Sufferer," and now as the "Postulant,"
to the accompaniment of various knockings with mallets and swords. As he
was being led up to some object he noticed a hesitation and uncertainty
among his conductors. He heard those around him disputing in whispers
and one of them insisting that he should be led along a certain carpet.
After that they took his right hand, placed it on something, and told
him to hold a pair of compasses to his left breast with the other hand
and to repeat after someone who read aloud an oath of fidelity to the
laws of the Order. The candles were then extinguished and some spirit
lighted, as Pierre knew by the smell, and he was told that he would now
see the lesser light. The bandage was taken off his eyes and, by the
faint light of the burning spirit, Pierre, as in a dream, saw several
men standing before him, wearing aprons like the Rhetor's and holding
swords in their hands pointed at his breast. Among them stood a man
whose white shirt was stained with blood. On seeing this, Pierre moved
forward with his breast toward the swords, meaning them to pierce it.
But the swords were drawn back from him and he was at once blindfolded
again.

"Now thou hast seen the lesser light," uttered a voice. Then the candles
were relit and he was told that he would see the full light; the bandage
was again removed and more than ten voices said together: "Sic transit
gloria mundi."

Pierre gradually began to recover himself and looked about at the room
and at the people in it. Round a long table covered with black sat some
twelve men in garments like those he had already seen. Some of them
Pierre had met in Petersburg society. In the President's chair sat a
young man he did not know, with a peculiar cross hanging from his neck.
On his right sat the Italian abbe whom Pierre had met at Anna Pavlovna's
two years before. There were also present a very distinguished dignitary
and a Swiss who had formerly been tutor at the Kuragins'. All maintained
a solemn silence, listening to the words of the President, who held a
mallet in his hand. Let into the wall was a star-shaped light. At one
side of the table was a small carpet with various figures worked upon
it, at the other was something resembling an altar on which lay a
Testament and a skull. Round it stood seven large candlesticks like
those used in churches. Two of the brothers led Pierre up to the altar,
placed his feet at right angles, and bade him lie down, saying that he
must prostrate himself at the Gates of the Temple.

"He must first receive the trowel," whispered one of the brothers.

"Oh, hush, please!" said another.

Pierre, perplexed, looked round with his shortsighted eyes without
obeying, and suddenly doubts arose in his mind. "Where am I? What am I
doing? Aren't they laughing at me? Shan't I be ashamed to remember
this?" But these doubts only lasted a moment. Pierre glanced at the
serious faces of those around, remembered all he had already gone
through, and realized that he could not stop halfway. He was aghast at
his hesitation and, trying to arouse his former devotional feeling,
prostrated himself before the Gates of the Temple. And really, the
feeling of devotion returned to him even more strongly than before. When
he had lain there some time, he was told to get up, and a white leather
apron, such as the others wore, was put on him: he was given a trowel
and three pairs of gloves, and then the Grand Master addressed him. He
told him that he should try to do nothing to stain the whiteness of that
apron, which symbolized strength and purity; then of the unexplained
trowel, he told him to toil with it to cleanse his own heart from vice,
and indulgently to smooth with it the heart of his neighbor. As to the
first pair of gloves, a man's, he said that Pierre could not know their
meaning but must keep them. The second pair of man's gloves he was to
wear at the meetings, and finally of the third, a pair of women's
gloves, he said: "Dear brother, these woman's gloves are intended for
you too. Give them to the woman whom you shall honor most of all. This
gift will be a pledge of your purity of heart to her whom you select to
be your worthy helpmeet in Masonry." And after a pause, he added: "But
beware, dear brother, that these gloves do not deck hands that are
unclean." While the Grand Master said these last words it seemed to
Pierre that he grew embarrassed. Pierre himself grew still more
confused, blushed like a child till tears came to his eyes, began
looking about him uneasily, and an awkward pause followed.

This silence was broken by one of the brethren, who led Pierre up to the
rug and began reading to him from a manuscript book an explanation of
all the figures on it: the sun, the moon, a hammer, a plumb line, a
trowel, a rough stone and a squared stone, a pillar, three windows, and
so on. Then a place was assigned to Pierre, he was shown the signs of
the Lodge, told the password, and at last was permitted to sit down. The
Grand Master began reading the statutes. They were very long, and
Pierre, from joy, agitation, and embarrassment, was not in a state to
understand what was being read. He managed to follow only the last words
of the statutes and these remained in his mind.

"In our temples we recognize no other distinctions," read the Grand
Master, "but those between virtue and vice. Beware of making any
distinctions which may infringe equality. Fly to a brother's aid whoever
he may be, exhort him who goeth astray, raise him that falleth, never
bear malice or enmity toward thy brother. Be kindly and courteous.
Kindle in all hearts the flame of virtue. Share thy happiness with thy
neighbor, and may envy never dim the purity of that bliss. Forgive thy
enemy, do not avenge thyself except by doing him good. Thus fulfilling
the highest law thou shalt regain traces of the ancient dignity which
thou hast lost."

He finished and, getting up, embraced and kissed Pierre, who, with tears
of joy in his eyes, looked round him, not knowing how to answer the
congratulations and greetings from acquaintances that met him on all
sides. He acknowledged no acquaintances but saw in all these men only
brothers, and burned with impatience to set to work with them.

The Grand Master rapped with his mallet. All the Masons sat down in
their places, and one of them read an exhortation on the necessity of
humility.

The Grand Master proposed that the last duty should be performed, and
the distinguished dignitary who bore the title of "Collector of Alms"
went round to all the brothers. Pierre would have liked to subscribe all
he had, but fearing that it might look like pride subscribed the same
amount as the others.

The meeting was at an end, and on reaching home Pierre felt as if he had
returned from a long journey on which he had spent dozens of years, had
become completely changed, and had quite left behind his former habits
and way of life.




CHAPTER V

The day after he had been received into the Lodge, Pierre was sitting at
home reading a book and trying to fathom the significance of the Square,
one side of which symbolized God, another moral things, a third physical
things, and the fourth a combination of these. Now and then his
attention wandered from the book and the Square and he formed in
imagination a new plan of life. On the previous evening at the Lodge, he
had heard that a rumor of his duel had reached the Emperor and that it
would be wiser for him to leave Petersburg. Pierre proposed going to his
estates in the south and there attending to the welfare of his serfs. He
was joyfully planning this new life, when Prince Vasili suddenly entered
the room.

"My dear fellow, what have you been up to in Moscow? Why have you
quarreled with Helene, mon cher? You are under a delusion," said Prince
Vasili, as he entered. "I know all about it, and I can tell you
positively that Helene is as innocent before you as Christ was before
the Jews."

Pierre was about to reply, but Prince Vasili interrupted him.

"And why didn't you simply come straight to me as to a friend? I know
all about it and understand it all," he said. "You behaved as becomes a
man who values his honor, perhaps too hastily, but we won't go into
that. But consider the position in which you are placing her and me in
the eyes of society, and even of the court," he added, lowering his
voice. "She is living in Moscow and you are here. Remember, dear boy,"
and he drew Pierre's arm downwards, "it is simply a misunderstanding. I
expect you feel it so yourself. Let us write her a letter at once, and
she'll come here and all will be explained, or else, my dear boy, let me
tell you it's quite likely you'll have to suffer for it."

Prince Vasili gave Pierre a significant look.

"I know from reliable sources that the Dowager Empress is taking a keen
interest in the whole affair. You know she is very gracious to Helene."

Pierre tried several times to speak, but, on one hand, Prince Vasili did
not let him and, on the other, Pierre himself feared to begin to speak
in the tone of decided refusal and disagreement in which he had firmly
resolved to answer his father-in-law. Moreover, the words of the masonic
statutes, "be kindly and courteous," recurred to him. He blinked, went
red, got up and sat down again, struggling with himself to do what was
for him the most difficult thing in life--to say an unpleasant thing to
a man's face, to say what the other, whoever he might be, did not
expect. He was so used to submitting to Prince Vasili's tone of careless
self-assurance that he felt he would be unable to withstand it now, but
he also felt that on what he said now his future depended--whether he
would follow the same old road, or that new path so attractively shown
him by the Masons, on which he firmly believed he would be reborn to a
new life.

"Now, dear boy," said Prince Vasili playfully, "say 'yes,' and I'll
write to her myself, and we will kill the fatted calf."

But before Prince Vasili had finished his playful speech, Pierre,
without looking at him, and with a kind of fury that made him like his
father, muttered in a whisper:

"Prince, I did not ask you here. Go, please go!" And he jumped up and
opened the door for him.

"Go!" he repeated, amazed at himself and glad to see the look of
confusion and fear that showed itself on Prince Vasili's face.

"What's the matter with you? Are you ill?"

"Go!" the quivering voice repeated. And Prince Vasili had to go without
receiving any explanation.

A week later, Pierre, having taken leave of his new friends, the Masons,
and leaving large sums of money with them for alms, went away to his
estates. His new brethren gave him letters to the Kiev and Odessa Masons
and promised to write to him and guide him in his new activity.




CHAPTER VI

The duel between Pierre and Dolokhov was hushed up and, in spite of the
Emperor's severity regarding duels at that time, neither the principals
nor their seconds suffered for it. But the story of the duel, confirmed
by Pierre's rupture with his wife, was the talk of society. Pierre who
had been regarded with patronizing condescension when he was an
illegitimate son, and petted and extolled when he was the best match in
Russia, had sunk greatly in the esteem of society after his marriage--
when the marriageable daughters and their mothers had nothing to hope
from him--especially as he did not know how, and did not wish, to court
society's favor. Now he alone was blamed for what had happened, he was
said to be insanely jealous and subject like his father to fits of
bloodthirsty rage. And when after Pierre's departure Helene returned to
Petersburg, she was received by all her acquaintances not only
cordially, but even with a shade of deference due to her misfortune.
When conversation turned on her husband Helene assumed a dignified
expression, which with characteristic tact she had acquired though she
did not understand its significance. This expression suggested that she
had resolved to endure her troubles uncomplainingly and that her husband
was a cross laid upon her by God. Prince Vasili expressed his opinion
more openly. He shrugged his shoulders when Pierre was mentioned and,
pointing to his forehead, remarked:

"A bit touched--I always said so."

"I said from the first," declared Anna Pavlovna referring to Pierre, "I
said at the time and before anyone else" (she insisted on her priority)
"that that senseless young man was spoiled by the depraved ideas of
these days. I said so even at the time when everybody was in raptures
about him, when he had just returned from abroad, and when, if you
remember, he posed as a sort of Marat at one of my soirees. And how has
it ended? I was against this marriage even then and foretold all that
has happened."

Anna Pavlovna continued to give on free evenings the same kind of
soirees as before--such as she alone had the gift of arranging--at which
was to be found "the cream of really good society, the bloom of the
intellectual essence of Petersburg," as she herself put it. Besides this
refined selection of society Anna Pavlovna's receptions were also
distinguished by the fact that she always presented some new and
interesting person to the visitors and that nowhere else was the state
of the political thermometer of legitimate Petersburg court society so
dearly and distinctly indicated.

Toward the end of 1806, when all the sad details of Napoleon's
destruction of the Prussian army at Jena and Auerstadt and the surrender
of most of the Prussian fortresses had been received, when our troops
had already entered Prussia and our second war with Napoleon was
beginning, Anna Pavlovna gave one of her soirees. The "cream of really
good society" consisted of the fascinating Helene, forsaken by her
husband, Mortemart, the delightful Prince Hippolyte who had just
returned from Vienna, two diplomatists, the old aunt, a young man
referred to in that drawing room as "a man of great merit" (un homme de
beaucoup de merite), a newly appointed maid of honor and her mother, and
several other less noteworthy persons.

The novelty Anna Pavlovna was setting before her guests that evening was
Boris Drubetskoy, who had just arrived as a special messenger from the
Prussian army and was aide-de-camp to a very important personage.

The temperature shown by the political thermometer to the company that
evening was this:

"Whatever the European sovereigns and commanders may do to countenance
Bonaparte, and to cause me, and us in general, annoyance and
mortification, our opinion of Bonaparte cannot alter. We shall not cease
to express our sincere views on that subject, and can only say to the
King of Prussia and others: 'So much the worse for you. Tu l'as voulu,
George Dandin,' that's all we have to say about it!"

When Boris, who was to be served up to the guests, entered the drawing
room, almost all the company had assembled, and the conversation, guided
by Anna Pavlovna, was about our diplomatic relations with Austria and
the hope of an alliance with her.

Boris, grown more manly and looking fresh, rosy and self-possessed,
entered the drawing room elegantly dressed in the uniform of an aide-de-
camp and was duly conducted to pay his respects to the aunt and then
brought back to the general circle.

Anna Pavlovna gave him her shriveled hand to kiss and introduced him to
several persons whom he did not know, giving him a whispered description
of each.

"Prince Hippolyte Kuragin, M. Krug, the charge d'affaires from
Copenhagen--a profound intellect," and simply, "Mr. Shitov--a man of
great merit"--this of the man usually so described.

Thanks to Anna Mikhaylovna's efforts, his own tastes, and the
peculiarities of his reserved nature, Boris had managed during his
service to place himself very advantageously. He was aide-de-camp to a
very important personage, had been sent on a very important mission to
Prussia, and had just returned from there as a special messenger. He had
become thoroughly conversant with that unwritten code with which he had
been so pleased at Olmutz and according to which an ensign might rank
incomparably higher than a general, and according to which what was
needed for success in the service was not effort or work, or courage, or
perseverance, but only the knowledge of how to get on with those who can
grant rewards, and he was himself often surprised at the rapidity of his
success and at the inability of others to understand these things. In
consequence of this discovery his whole manner of life, all his
relations with old friends, all his plans for his future, were
completely altered. He was not rich, but would spend his last groat to
be better dressed than others, and would rather deprive himself of many
pleasures than allow himself to be seen in a shabby equipage or appear
in the streets of Petersburg in an old uniform. He made friends with and
sought the acquaintance of only those above him in position and who
could therefore be of use to him. He liked Petersburg and despised
Moscow. The remembrance of the Rostovs' house and of his childish love
for Natasha was unpleasant to him and he had not once been to see the
Rostovs since the day of his departure for the army. To be in Anna
Pavlovna's drawing room he considered an important step up in the
service, and he at once understood his role, letting his hostess make
use of whatever interest he had to offer. He himself carefully scanned
each face, appraising the possibilities of establishing intimacy with
each of those present, and the advantages that might accrue. He took the
seat indicated to him beside the fair Helene and listened to the general
conversation.

"Vienna considers the bases of the proposed treaty so unattainable that
not even a continuity of most brilliant successes would secure them, and
she doubts the means we have of gaining them. That is the actual phrase
used by the Vienna cabinet," said the Danish charge d'affaires.

"The doubt is flattering," said "the man of profound intellect," with a
subtle smile.

"We must distinguish between the Vienna cabinet and the Emperor of
Austria," said Mortemart. "The Emperor of Austria can never have thought
of such a thing, it is only the cabinet that says it."

"Ah, my dear vicomte," put in Anna Pavlovna, "L'Urope" (for some reason
she called it Urope as if that were a specially refined French
pronunciation which she could allow herself when conversing with a
Frenchman), "L'Urope ne sera jamais notre alliee sincere." *


* "Europe will never be our sincere ally."

After that Anna Pavlovna led up to the courage and firmness of the King
of Prussia, in order to draw Boris into the conversation.

Boris listened attentively to each of the speakers, awaiting his turn,
but managed meanwhile to look round repeatedly at his neighbor, the
beautiful Helene, whose eyes several times met those of the handsome
young aide-de-camp with a smile.

Speaking of the position of Prussia, Anna Pavlovna very naturally asked
Boris to tell them about his journey to Glogau and in what state he
found the Prussian army. Boris, speaking with deliberation, told them in
pure, correct French many interesting details about the armies and the
court, carefully abstaining from expressing an opinion of his own about
the facts he was recounting. For some time he engrossed the general
attention, and Anna Pavlovna felt that the novelty she had served up was
received with pleasure by all her visitors. The greatest attention of
all to Boris' narrative was shown by Helene. She asked him several
questions about his journey and seemed greatly interested in the state
of the Prussian army. As soon as he had finished she turned to him with
her usual smile.

"You absolutely must come and see me," she said in a tone that implied
that, for certain considerations he could not know of, this was
absolutely necessary.

"On Tuesday between eight and nine. It will give me great pleasure."

Boris promised to fulfill her wish and was about to begin a conversation
with her, when Anna Pavlovna called him away on the pretext that her
aunt wished to hear him.

"You know her husband, of course?" said Anna Pavlovna, closing her eyes
and indicating Helene with a sorrowful gesture. "Ah, she is such an
unfortunate and charming woman! Don't mention him before her--please
don't! It is too painful for her!"




CHAPTER VII

When Boris and Anna Pavlovna returned to the others Prince Hippolyte had
the ear of the company.

Bending forward in his armchair he said: "Le Roi de Prusse!" and having
said this laughed. Everyone turned toward him.

"Le Roi de Prusse?" Hippolyte said interrogatively, again laughing, and
then calmly and seriously sat back in his chair. Anna Pavlovna waited
for him to go on, but as he seemed quite decided to say no more she
began to tell of how at Potsdam the impious Bonaparte had stolen the
sword of Frederick the Great.

"It is the sword of Frederick the Great which I..." she began, but
Hippolyte interrupted her with the words: "Le Roi de Prusse..." and
again, as soon as all turned toward him, excused himself and said no
more.

Anna Pavlovna frowned. Mortemart, Hippolyte's friend, addressed him
firmly.

"Come now, what about your Roi de Prusse?"

Hippolyte laughed as if ashamed of laughing.

"Oh, it's nothing. I only wished to say..." (he wanted to repeat a joke
he had heard in Vienna and which he had been trying all that evening to
get in) "I only wished to say that we are wrong to fight pour le Roi de
Prusse!"

Boris smiled circumspectly, so that it might be taken as ironical or
appreciative according to the way the joke was received. Everybody
laughed.

"Your joke is too bad, it's witty but unjust," said Anna Pavlovna,
shaking her little shriveled finger at him.

"We are not fighting pour le Roi de Prusse, but for right principles.
Oh, that wicked Prince Hippolyte!" she said.

The conversation did not flag all evening and turned chiefly on the
political news. It became particularly animated toward the end of the
evening when the rewards bestowed by the Emperor were mentioned.

"You know N-- N-- received a snuffbox with the portrait last year?" said
"the man of profound intellect." "Why shouldn't S-- S-- get the same
distinction?"

"Pardon me! A snuffbox with the Emperor's portrait is a reward but not a
distinction," said the diplomatist--"a gift, rather."

"There are precedents, I may mention Schwarzenberg."

"It's impossible," replied another.

"Will you bet? The ribbon of the order is a different matter...."

When everybody rose to go, Helene who had spoken very little all the
evening again turned to Boris, asking him in a tone of caressing
significant command to come to her on Tuesday.

"It is of great importance to me," she said, turning with a smile toward
Anna Pavlovna, and Anna Pavlovna, with the same sad smile with which she
spoke of her exalted patroness, supported Helene's wish.

It seemed as if from some words Boris had spoken that evening about the
Prussian army, Helene had suddenly found it necessary to see him. She
seemed to promise to explain that necessity to him when he came on
Tuesday.

But on Tuesday evening, having come to Helene's splendid salon, Boris
received no clear explanation of why it had been necessary for him to
come. There were other guests and the countess talked little to him, and
only as he kissed her hand on taking leave said unexpectedly and in a
whisper, with a strangely unsmiling face: "Come to dinner tomorrow... in
the evening. You must come.... Come!"

During that stay in Petersburg, Boris became an intimate in the
countess' house.




CHAPTER VIII

The war was flaming up and nearing the Russian frontier. Everywhere one
heard curses on Bonaparte, "the enemy of mankind." Militiamen and
recruits were being enrolled in the villages, and from the seat of war
came contradictory news, false as usual and therefore variously
interpreted. The life of old Prince Bolkonski, Prince Andrew, and
Princess Mary had greatly changed since 1805.

In 1806 the old prince was made one of the eight commanders in chief
then appointed to supervise the enrollment decreed throughout Russia.
Despite the weakness of age, which had become particularly noticeable
since the time when he thought his son had been killed, he did not think
it right to refuse a duty to which he had been appointed by the Emperor
himself, and this fresh opportunity for action gave him new energy and
strength. He was continually traveling through the three provinces
entrusted to him, was pedantic in the fulfillment of his duties, severe
to cruel with his subordinates, and went into everything down to the
minutest details himself. Princess Mary had ceased taking lessons in
mathematics from her father, and when the old prince was at home went to
his study with the wet nurse and little Prince Nicholas (as his
grandfather called him). The baby Prince Nicholas lived with his wet
nurse and nurse Savishna in the late princess' rooms and Princess Mary
spent most of the day in the nursery, taking a mother's place to her
little nephew as best she could. Mademoiselle Bourienne, too, seemed
passionately fond of the boy, and Princess Mary often deprived herself
to give her friend the pleasure of dandling the little angel--as she
called her nephew--and playing with him.

Near the altar of the church at Bald Hills there was a chapel over the
tomb of the little princess, and in this chapel was a marble monument
brought from Italy, representing an angel with outspread wings ready to
fly upwards. The angel's upper lip was slightly raised as though about
to smile, and once on coming out of the chapel Prince Andrew and
Princess Mary admitted to one another that the angel's face reminded
them strangely of the little princess. But what was still stranger,
though of this Prince Andrew said nothing to his sister, was that in the
expression the sculptor had happened to give the angel's face, Prince
Andrew read the same mild reproach he had read on the face of his dead
wife: "Ah, why have you done this to me?"

Soon after Prince Andrew's return the old prince made over to him a
large estate, Bogucharovo, about twenty-five miles from Bald Hills.
Partly because of the depressing memories associated with Bald Hills,
partly because Prince Andrew did not always feel equal to bearing with
his father's peculiarities, and partly because he needed solitude,
Prince Andrew made use of Bogucharovo, began building and spent most of
his time there.

After the Austerlitz campaign Prince Andrew had firmly resolved not to
continue his military service, and when the war recommenced and
everybody had to serve, he took a post under his father in the
recruitment so as to avoid active service. The old prince and his son
seemed to have changed roles since the campaign of 1805. The old man,
roused by activity, expected the best results from the new campaign,
while Prince Andrew on the contrary, taking no part in the war and
secretly regretting this, saw only the dark side.

On February 26, 1807, the old prince set off on one of his circuits.
Prince Andrew remained at Bald Hills as usual during his father's
absence. Little Nicholas had been unwell for four days. The coachman who
had driven the old prince to town returned bringing papers and letters
for Prince Andrew.

Not finding the young prince in his study the valet went with the
letters to Princess Mary's apartments, but did not find him there. He
was told that the prince had gone to the nursery.

"If you please, your excellency, Petrusha has brought some papers," said
one of the nursemaids to Prince Andrew who was sitting on a child's
little chair while, frowning and with trembling hands, he poured drops
from a medicine bottle into a wineglass half full of water.

"What is it?" he said crossly, and, his hand shaking unintentionally, he
poured too many drops into the glass. He threw the mixture onto the
floor and asked for some more water. The maid brought it.

There were in the room a child's cot, two boxes, two armchairs, a table,
a child's table, and the little chair on which Prince Andrew was
sitting. The curtains were drawn, and a single candle was burning on the
table, screened by a bound music book so that the light did not fall on
the cot.

"My dear," said Princess Mary, addressing her brother from beside the
cot where she was standing, "better wait a bit... later..."

"Oh, leave off, you always talk nonsense and keep putting things off--
and this is what comes of it!" said Prince Andrew in an exasperated
whisper, evidently meaning to wound his sister.

"My dear, really... it's better not to wake him... he's asleep," said
the princess in a tone of entreaty.

Prince Andrew got up and went on tiptoe up to the little bed, wineglass
in hand.

"Perhaps we'd really better not wake him," he said hesitating.

"As you please... really... I think so... but as you please," said
Princess Mary, evidently intimidated and confused that her opinion had
prevailed. She drew her brother's attention to the maid who was calling
him in a whisper.

It was the second night that neither of them had slept, watching the boy
who was in a high fever. These last days, mistrusting their household
doctor and expecting another for whom they had sent to town, they had
been trying first one remedy and then another. Worn out by sleeplessness
and anxiety they threw their burden of sorrow on one another and
reproached and disputed with each other.

"Petrusha has come with papers from your father," whispered the maid.

Prince Andrew went out.

"Devil take them!" he muttered, and after listening to the verbal
instructions his father had sent and taking the correspondence and his
father's letter, he returned to the nursery.

"Well?" he asked.

"Still the same. Wait, for heaven's sake. Karl Ivanich always says that
sleep is more important than anything," whispered Princess Mary with a
sigh.

Prince Andrew went up to the child and felt him. He was burning hot.

"Confound you and your Karl Ivanich!" He took the glass with the drops
and again went up to the cot.

"Andrew, don't!" said Princess Mary.

But he scowled at her angrily though also with suffering in his eyes,
and stooped glass in hand over the infant.

"But I wish it," he said. "I beg you--give it him!"

Princess Mary shrugged her shoulders but took the glass submissively and
calling the nurse began giving the medicine. The child screamed
hoarsely. Prince Andrew winced and, clutching his head, went out and sat
down on a sofa in the next room.

He still had all the letters in his hand. Opening them mechanically he
began reading. The old prince, now and then using abbreviations, wrote
in his large elongated hand on blue paper as follows:

Have just this moment received by special messenger very joyful news--if
it's not false. Bennigsen seems to have obtained a complete victory over
Buonaparte at Eylau. In Petersburg everyone is rejoicing, and the
rewards sent to the army are innumerable. Though he is a German--I
congratulate him! I can't make out what the commander at Korchevo--a
certain Khandrikov--is up to; till now the additional men and provisions
have not arrived. Gallop off to him at once and say I'll have his head
off if everything is not here in a week. Have received another letter
about the Preussisch-Eylau battle from Petenka--he took part in it--and
it's all true. When mischief-makers don't meddle even a German beats
Buonaparte. He is said to be fleeing in great disorder. Mind you gallop
off to Korchevo without delay and carry out instructions!

Prince Andrew sighed and broke the seal of another envelope. It was a
closely written letter of two sheets from Bilibin. He folded it up
without reading it and reread his father's letter, ending with the
words: "Gallop off to Korchevo and carry out instructions!"

"No, pardon me, I won't go now till the child is better," thought he,
going to the door and looking into the nursery.

Princess Mary was still standing by the cot, gently rocking the baby.

"Ah yes, and what else did he say that's unpleasant?" thought Prince
Andrew, recalling his father's letter. "Yes, we have gained a victory
over Bonaparte, just when I'm not serving. Yes, yes, he's always poking
fun at me.... Ah, well! Let him!" And he began reading Bilibin's letter
which was written in French. He read without understanding half of it,
read only to forget, if but for a moment, what he had too long been
thinking of so painfully to the exclusion of all else.




CHAPTER IX

Bilibin was now at army headquarters in a diplomatic capacity, and
though he wrote in French and used French jests and French idioms, he
described the whole campaign with a fearless self-censure and self-
derision genuinely Russian. Bilibin wrote that the obligation of
diplomatic discretion tormented him, and he was happy to have in Prince
Andrew a reliable correspondent to whom he could pour out the bile he
had accumulated at the sight of all that was being done in the army. The
letter was old, having been written before the battle at Preussisch-
Eylau.

"Since the day of our brilliant success at Austerlitz," wrote Bilibin,
"as you know, my dear prince, I never leave headquarters. I have
certainly acquired a taste for war, and it is just as well for me; what
I have seen during these last three months is incredible.

"I begin ab ovo. 'The enemy of the human race,' as you know, attacks the
Prussians. The Prussians are our faithful allies who have only betrayed
us three times in three years. We take up their cause, but it turns out
that 'the enemy of the human race' pays no heed to our fine speeches and
in his rude and savage way throws himself on the Prussians without
giving them time to finish the parade they had begun, and in two twists
of the hand he breaks them to smithereens and installs himself in the
palace at Potsdam.

"'I most ardently desire,' writes the King of Prussia to Bonaparte,
'that Your Majesty should be received and treated in my palace in a
manner agreeable to yourself, and in so far as circumstances allowed, I
have hastened to take all steps to that end. May I have succeeded!' The
Prussian generals pride themselves on being polite to the French and lay
down their arms at the first demand.

"The head of the garrison at Glogau, with ten thousand men, asks the
King of Prussia what he is to do if he is summoned to surrender.... All
this is absolutely true.

"In short, hoping to settle matters by taking up a warlike attitude, it
turns out that we have landed ourselves in war, and what is more, in war
on our own frontiers, with and for the King of Prussia. We have
everything in perfect order, only one little thing is lacking, namely, a
commander in chief. As it was considered that the Austerlitz success
might have been more decisive had the commander-in-chief not been so
young, all our octogenarians were reviewed, and of Prozorovski and
Kamenski the latter was preferred. The general comes to us, Suvorov-
like, in a kibitka, and is received with acclamations of joy and
triumph.

"On the 4th, the first courier arrives from Petersburg. The mails are
taken to the field marshal's room, for he likes to do everything
himself. I am called in to help sort the letters and take those meant
for us. The field marshal looks on and waits for letters addressed to
him. We search, but none are to be found. The field marshal grows
impatient and sets to work himself and finds letters from the Emperor to
Count T., Prince V., and others. Then he bursts into one of his wild
furies and rages at everyone and everything, seizes the letters, opens
them, and reads those from the Emperor addressed to others. 'Ah! So
that's the way they treat me! No confidence in me! Ah, ordered to keep
an eye on me! Very well then! Get along with you!' So he writes the
famous order of the day to General Bennigsen:

'I am wounded and cannot ride and consequently cannot command the army.
You have brought your army corps to Pultusk, routed: here it is exposed,
and without fuel or forage, so something must be done, and, as you
yourself reported to Count Buxhowden yesterday, you must think of
retreating to our frontier--which do today.'

"'From all my riding,' he writes to the Emperor, 'I have got a saddle
sore which, coming after all my previous journeys, quite prevents my
riding and commanding so vast an army, so I have passed on the command
to the general next in seniority, Count Buxhowden, having sent him my
whole staff and all that belongs to it, advising him if there is a lack
of bread, to move farther into the interior of Prussia, for only one
day's ration of bread remains, and in some regiments none at all, as
reported by the division commanders, Ostermann and Sedmoretzki, and all
that the peasants had has been eaten up. I myself will remain in
hospital at Ostrolenka till I recover. In regard to which I humbly
submit my report, with the information that if the army remains in its
present bivouac another fortnight there will not be a healthy man left
in it by spring.

"'Grant leave to retire to his country seat to an old man who is already
in any case dishonored by being unable to fulfill the great and glorious
task for which he was chosen. I shall await your most gracious
permission here in hospital, that I may not have to play the part of a
secretary rather than commander in the army. My removal from the army
does not produce the slightest stir--a blind man has left it. There are
thousands such as I in Russia.'

"The field marshal is angry with the Emperor and he punishes us all,
isn't it logical?

"This is the first act. Those that follow are naturally increasingly
interesting and entertaining. After the field marshal's departure it
appears that we are within sight of the enemy and must give battle.
Buxhowden is commander-in-chief by seniority, but General Bennigsen does
not quite see it; more particularly as it is he and his corps who are
within sight of the enemy and he wishes to profit by the opportunity to
fight a battle 'on his own hand' as the Germans say. He does so. This is
the battle of Pultusk, which is considered a great victory but in my
opinion was nothing of the kind. We civilians, as you know, have a very
bad way of deciding whether a battle was won or lost. Those who retreat
after a battle have lost it is what we say; and according to that it is
we who lost the battle of Pultusk. In short, we retreat after the battle
but send a courier to Petersburg with news of a victory, and General
Bennigsen, hoping to receive from Petersburg the post of commander in
chief as a reward for his victory, does not give up the command of the
army to General Buxhowden. During this interregnum we begin a very
original and interesting series of maneuvers. Our aim is no longer, as
it should be, to avoid or attack the enemy, but solely to avoid General
Buxhowden who by right of seniority should be our chief. So
energetically do we pursue this aim that after crossing an unfordable
river we burn the bridges to separate ourselves from our enemy, who at
the moment is not Bonaparte but Buxhowden. General Buxhowden was all but
attacked and captured by a superior enemy force as a result of one of
these maneuvers that enabled us to escape him. Buxhowden pursues us--we
scuttle. He hardly crosses the river to our side before we recross to
the other. At last our enemy, Buxhowden, catches us and attacks. Both
generals are angry, and the result is a challenge on Buxhowden's part
and an epileptic fit on Bennigsen's. But at the critical moment the
courier who carried the news of our victory at Pultusk to Petersburg
returns bringing our appointment as commander-in-chief, and our first
foe, Buxhowden, is vanquished; we can now turn our thoughts to the
second, Bonaparte. But as it turns out, just at that moment a third
enemy rises before us--namely the Orthodox Russian soldiers, loudly
demanding bread, meat, biscuits, fodder, and whatnot! The stores are
empty, the roads impassable. The Orthodox begin looting, and in a way of
which our last campaign can give you no idea. Half the regiments form
bands and scour the countryside and put everything to fire and sword.
The inhabitants are totally ruined, the hospitals overflow with sick,
and famine is everywhere. Twice the marauders even attack our
headquarters, and the commander-in-chief has to ask for a battalion to
disperse them. During one of these attacks they carried off my empty
portmanteau and my dressing gown. The Emperor proposes to give all
commanders of divisions the right to shoot marauders, but I much fear
this will oblige one half the army to shoot the other."

At first Prince Andrew read with his eyes only, but after a while, in
spite of himself (although he knew how far it was safe to trust
Bilibin), what he had read began to interest him more and more. When he
had read thus far, he crumpled the letter up and threw it away. It was
not what he had read that vexed him, but the fact that the life out
there in which he had now no part could perturb him. He shut his eyes,
rubbed his forehead as if to rid himself of all interest in what he had
read, and listened to what was passing in the nursery. Suddenly he
thought he heard a strange noise through the door. He was seized with
alarm lest something should have happened to the child while he was
reading the letter. He went on tiptoe to the nursery door and opened it.

Just as he went in he saw that the nurse was hiding something from him
with a scared look and that Princess Mary was no longer by the cot.

"My dear," he heard what seemed to him her despairing whisper behind
him.

As often happens after long sleeplessness and long anxiety, he was
seized by an unreasoning panic--it occurred to him that the child was
dead. All that he saw and heard seemed to confirm this terror.

"All is over," he thought, and a cold sweat broke out on his forehead.
He went to the cot in confusion, sure that he would find it empty and
that the nurse had been hiding the dead baby. He drew the curtain aside
and for some time his frightened, restless eyes could not find the baby.
At last he saw him: the rosy boy had tossed about till he lay across the
bed with his head lower than the pillow, and was smacking his lips in
his sleep and breathing evenly.

Prince Andrew was as glad to find the boy like that, as if he had
already lost him. He bent over him and, as his sister had taught him,
tried with his lips whether the child was still feverish. The soft
forehead was moist. Prince Andrew touched the head with his hand; even
the hair was wet, so profusely had the child perspired. He was not dead,
but evidently the crisis was over and he was convalescent. Prince Andrew
longed to snatch up, to squeeze, to hold to his heart, this helpless
little creature, but dared not do so. He stood over him, gazing at his
head and at the little arms and legs which showed under the blanket. He
heard a rustle behind him and a shadow appeared under the curtain of the
cot. He did not look round, but still gazing at the infant's face
listened to his regular breathing. The dark shadow was Princess Mary,
who had come up to the cot with noiseless steps, lifted the curtain, and
dropped it again behind her. Prince Andrew recognized her without
looking and held out his hand to her. She pressed it.

"He has perspired," said Prince Andrew.

"I was coming to tell you so."

The child moved slightly in his sleep, smiled, and rubbed his forehead
against the pillow.

Prince Andrew looked at his sister. In the dim shadow of the curtain her
luminous eyes shone more brightly than usual from the tears of joy that
were in them. She leaned over to her brother and kissed him, slightly
catching the curtain of the cot. Each made the other a warning gesture
and stood still in the dim light beneath the curtain as if not wishing
to leave that seclusion where they three were shut off from all the
world. Prince Andrew was the first to move away, ruffling his hair
against the muslin of the curtain.

"Yes, this is the one thing left me now," he said with a sigh.




CHAPTER X

Soon after his admission to the masonic Brotherhood, Pierre went to the
Kiev province, where he had the greatest number of serfs, taking with
him full directions which he had written down for his own guidance as to
what he should do on his estates.

When he reached Kiev he sent for all his stewards to the head office and
explained to them his intentions and wishes. He told them that steps
would be taken immediately to free his serfs--and that till then they
were not to be overburdened with labor, women while nursing their babies
were not to be sent to work, assistance was to be given to the serfs,
punishments were to be admonitory and not corporal, and hospitals,
asylums, and schools were to be established on all the estates. Some of
the stewards (there were semiliterate foremen among them) listened with
alarm, supposing these words to mean that the young count was displeased
with their management and embezzlement of money, some after their first
fright were amused by Pierre's lisp and the new words they had not heard
before, others simply enjoyed hearing how the master talked, while the
cleverest among them, including the chief steward, understood from this
speech how they could best handle the master for their own ends.

The chief steward expressed great sympathy with Pierre's intentions, but
remarked that besides these changes it would be necessary to go into the
general state of affairs which was far from satisfactory.

Despite Count Bezukhov's enormous wealth, since he had come into an
income which was said to amount to five hundred thousand rubles a year,
Pierre felt himself far poorer than when his father had made him an
allowance of ten thousand rubles. He had a dim perception of the
following budget:

About 80,000 went in payments on all the estates to the Land Bank, about
30,000 went for the upkeep of the estate near Moscow, the town house,
and the allowance to the three princesses; about 15,000 was given in
pensions and the same amount for asylums; 150,000 alimony was sent to
the countess; about 70,000 went for interest on debts. The building of a
new church, previously begun, had cost about 10,000 in each of the last
two years, and he did not know how the rest, about 100,000 rubles, was
spent, and almost every year he was obliged to borrow. Besides this the
chief steward wrote every year telling him of fires and bad harvests, or
of the necessity of rebuilding factories and workshops. So the first
task Pierre had to face was one for which he had very little aptitude or
inclination--practical business.

He discussed estate affairs every day with his chief steward. But he
felt that this did not forward matters at all. He felt that these
consultations were detached from real affairs and did not link up with
them or make them move. On the one hand, the chief steward put the state
of things to him in the very worst light, pointing out the necessity of
paying off the debts and undertaking new activities with serf labor, to
which Pierre did not agree. On the other hand, Pierre demanded that
steps should be taken to liberate the serfs, which the steward met by
showing the necessity of first paying off the loans from the Land Bank,
and the consequent impossibility of a speedy emancipation.

The steward did not say it was quite impossible, but suggested selling
the forests in the province of Kostroma, the land lower down the river,
and the Crimean estate, in order to make it possible: all of which
operations according to him were connected with such complicated
measures--the removal of injunctions, petitions, permits, and so on--
that Pierre became quite bewildered and only replied:

"Yes, yes, do so."

Pierre had none of the practical persistence that would have enabled him
to attend to the business himself and so he disliked it and only tried
to pretend to the steward that he was attending to it. The steward for
his part tried to pretend to the count that he considered these
consultations very valuable for the proprietor and troublesome to
himself.

In Kiev Pierre found some people he knew, and strangers hastened to make
his acquaintance and joyfully welcomed the rich newcomer, the largest
landowner of the province. Temptations to Pierre's greatest weakness--
the one to which he had confessed when admitted to the Lodge--were so
strong that he could not resist them. Again whole days, weeks, and
months of his life passed in as great a rush and were as much occupied
with evening parties, dinners, lunches, and balls, giving him no time
for reflection, as in Petersburg. Instead of the new life he had hoped
to lead he still lived the old life, only in new surroundings.

Of the three precepts of Freemasonry Pierre realized that he did not
fulfill the one which enjoined every Mason to set an example of moral
life, and that of the seven virtues he lacked two--morality and the love
of death. He consoled himself with the thought that he fulfilled another
of the precepts--that of reforming the human race--and had other
virtues--love of his neighbor, and especially generosity.

In the spring of 1807 he decided to return to Petersburg. On the way he
intended to visit all his estates and see for himself how far his orders
had been carried out and in what state were the serfs whom God had
entrusted to his care and whom he intended to benefit.

The chief steward, who considered the young count's attempts almost
insane--unprofitable to himself, to the count, and to the serfs--made
some concessions. Continuing to represent the liberation of the serfs as
impracticable, he arranged for the erection of large buildings--schools,
hospitals, and asylums--on all the estates before the master arrived.
Everywhere preparations were made not for ceremonious welcomes (which he
knew Pierre would not like), but for just such gratefully religious
ones, with offerings of icons and the bread and salt of hospitality, as,
according to his understanding of his master, would touch and delude
him.

The southern spring, the comfortable rapid traveling in a Vienna
carriage, and the solitude of the road, all had a gladdening effect on
Pierre. The estates he had not before visited were each more picturesque
than the other; the serfs everywhere seemed thriving and touchingly
grateful for the benefits conferred on them. Everywhere were receptions,
which though they embarrassed Pierre awakened a joyful feeling in the
depth of his heart. In one place the peasants presented him with bread
and salt and an icon of Saint Peter and Saint Paul, asking permission,
as a mark of their gratitude for the benefits he had conferred on them,
to build a new chantry to the church at their own expense in honor of
Peter and Paul, his patron saints. In another place the women with
infants in arms met him to thank him for releasing them from hard work.
On a third estate the priest, bearing a cross, came to meet him
surrounded by children whom, by the count's generosity, he was
instructing in reading, writing, and religion. On all his estates Pierre
saw with his own eyes brick buildings erected or in course of erection,
all on one plan, for hospitals, schools, and almshouses, which were soon
to be opened. Everywhere he saw the stewards' accounts, according to
which the serfs' manorial labor had been diminished, and heard the
touching thanks of deputations of serfs in their full-skirted blue
coats.

What Pierre did not know was that the place where they presented him
with bread and salt and wished to build a chantry in honor of Peter and
Paul was a market village where a fair was held on St. Peter's day, and
that the richest peasants (who formed the deputation) had begun the
chantry long before, but that nine tenths of the peasants in that
villages were in a state of the greatest poverty. He did not know that
since the nursing mothers were no longer sent to work on his land, they
did still harder work on their own land. He did not know that the priest
who met him with the cross oppressed the peasants by his exactions, and
that the pupils' parents wept at having to let him take their children
and secured their release by heavy payments. He did not know that the
brick buildings, built to plan, were being built by serfs whose manorial
labor was thus increased, though lessened on paper. He did not know that
where the steward had shown him in the accounts that the serfs' payments
had been diminished by a third, their obligatory manorial work had been
increased by a half. And so Pierre was delighted with his visit to his
estates and quite recovered the philanthropic mood in which he had left
Petersburg, and wrote enthusiastic letters to his "brother-instructor"
as he called the Grand Master.

"How easy it is, how little effort it needs, to do so much good,"
thought Pierre, "and how little attention we pay to it!"

He was pleased at the gratitude he received, but felt abashed at
receiving it. This gratitude reminded him of how much more he might do
for these simple, kindly people.

The chief steward, a very stupid but cunning man who saw perfectly
through the naive and intelligent count and played with him as with a
toy, seeing the effect these prearranged receptions had on Pierre,
pressed him still harder with proofs of the impossibility and above all
the uselessness of freeing the serfs, who were quite happy as it was.

Pierre in his secret soul agreed with the steward that it would be
difficult to imagine happier people, and that God only knew what would
happen to them when they were free, but he insisted, though reluctantly,
on what he thought right. The steward promised to do all in his power to
carry out the count's wishes, seeing clearly that not only would the
count never be able to find out whether all measures had been taken for
the sale of the land and forests and to release them from the Land Bank,
but would probably never even inquire and would never know that the
newly erected buildings were standing empty and that the serfs continued
to give in money and work all that other people's serfs gave--that is to
say, all that could be got out of them.




CHAPTER XI

Returning from his journey through South Russia in the happiest state of
mind, Pierre carried out an intention he had long had of visiting his
friend Bolkonski, whom he had not seen for two years.

Bogucharovo lay in a flat uninteresting part of the country among fields
and forests of fir and birch, which were partly cut down. The house lay
behind a newly dug pond filled with water to the brink and with banks
still bare of grass. It was at the end of a village that stretched along
the highroad in the midst of a young copse in which were a few fir
trees.

The homestead consisted of a threshing floor, outhouses, stables, a
bathhouse, a lodge, and a large brick house with semicircular facade
still in course of construction. Round the house was a garden newly laid
out. The fences and gates were new and solid; two fire pumps and a water
cart, painted green, stood in a shed; the paths were straight, the
bridges were strong and had handrails. Everything bore an impress of
tidiness and good management. Some domestic serfs Pierre met, in reply
to inquiries as to where the prince lived, pointed out a small newly
built lodge close to the pond. Anton, a man who had looked after Prince
Andrew in his boyhood, helped Pierre out of his carriage, said that the
prince was at home, and showed him into a clean little anteroom.

Pierre was struck by the modesty of the small though clean house after
the brilliant surroundings in which he had last met his friend in
Petersburg.

He quickly entered the small reception room with its still-unplastered
wooden walls redolent of pine, and would have gone farther, but Anton
ran ahead on tiptoe and knocked at a door.

"Well, what is it?" came a sharp, unpleasant voice.

"A visitor," answered Anton.

"Ask him to wait," and the sound was heard of a chair being pushed back.

Pierre went with rapid steps to the door and suddenly came face to face
with Prince Andrew, who came out frowning and looking old. Pierre
embraced him and lifting his spectacles kissed his friend on the cheek
and looked at him closely.

"Well, I did not expect you, I am very glad," said Prince Andrew.

Pierre said nothing; he looked fixedly at his friend with surprise. He
was struck by the change in him. His words were kindly and there was a
smile on his lips and face, but his eyes were dull and lifeless and in
spite of his evident wish to do so he could not give them a joyous and
glad sparkle. Prince Andrew had grown thinner, paler, and more manly-
looking, but what amazed and estranged Pierre till he got used to it
were his inertia and a wrinkle on his brow indicating prolonged
concentration on some one thought.

As is usually the case with people meeting after a prolonged separation,
it was long before their conversation could settle on anything. They put
questions and gave brief replies about things they knew ought to be
talked over at length. At last the conversation gradually settled on
some of the topics at first lightly touched on: their past life, plans
for the future, Pierre's journeys and occupations, the war, and so on.
The preoccupation and despondency which Pierre had noticed in his
friend's look was now still more clearly expressed in the smile with
which he listened to Pierre, especially when he spoke with joyful
animation of the past or the future. It was as if Prince Andrew would
have liked to sympathize with what Pierre was saying, but could not. The
latter began to feel that it was in bad taste to speak of his
enthusiasms, dreams, and hopes of happiness or goodness, in Prince
Andrew's presence. He was ashamed to express his new masonic views,
which had been particularly revived and strengthened by his late tour.
He checked himself, fearing to seem naive, yet he felt an irresistible
desire to show his friend as soon as possible that he was now a quite
different, and better, Pierre than he had been in Petersburg.

"I can't tell you how much I have lived through since then. I hardly
know myself again."

"Yes, we have altered much, very much, since then," said Prince Andrew.

"Well, and you? What are your plans?"

"Plans!" repeated Prince Andrew ironically. "My plans?" he said, as if
astonished at the word. "Well, you see, I'm building. I mean to settle
here altogether next year...."

Pierre looked silently and searchingly into Prince Andrew's face, which
had grown much older.

"No, I meant to ask..." Pierre began, but Prince Andrew interrupted him.

"But why talk of me?... Talk to me, yes, tell me about your travels and
all you have been doing on your estates."

Pierre began describing what he had done on his estates, trying as far
as possible to conceal his own part in the improvements that had been
made. Prince Andrew several times prompted Pierre's story of what he had
been doing, as though it were all an old-time story, and he listened not
only without interest but even as if ashamed of what Pierre was telling
him.

Pierre felt uncomfortable and even depressed in his friend's company and
at last became silent.

"I'll tell you what, my dear fellow," said Prince Andrew, who evidently
also felt depressed and constrained with his visitor, "I am only
bivouacking here and have just come to look round. I am going back to my
sister today. I will introduce you to her. But of course you know her
already," he said, evidently trying to entertain a visitor with whom he
now found nothing in common. "We will go after dinner. And would you now
like to look round my place?"

They went out and walked about till dinnertime, talking of the political
news and common acquaintances like people who do not know each other
intimately. Prince Andrew spoke with some animation and interest only of
the new homestead he was constructing and its buildings, but even here,
while on the scaffolding, in the midst of a talk explaining the future
arrangements of the house, he interrupted himself:

"However, this is not at all interesting. Let us have dinner, and then
we'll set off."

At dinner, conversation turned on Pierre's marriage.

"I was very much surprised when I heard of it," said Prince Andrew.

Pierre blushed, as he always did when it was mentioned, and said
hurriedly: "I will tell you some time how it all happened. But you know
it is all over, and forever."

"Forever?" said Prince Andrew. "Nothing's forever."

"But you know how it all ended, don't you? You heard of the duel?"

"And so you had to go through that too!"

"One thing I thank God for is that I did not kill that man," said
Pierre.

"Why so?" asked Prince Andrew. "To kill a vicious dog is a very good
thing really."

"No, to kill a man is bad--wrong."

"Why is it wrong?" urged Prince Andrew. "It is not given to man to know
what is right and what is wrong. Men always did and always will err, and
in nothing more than in what they consider right and wrong."

"What does harm to another is wrong," said Pierre, feeling with pleasure
that for the first time since his arrival Prince Andrew was roused, had
begun to talk, and wanted to express what had brought him to his present
state.

"And who has told you what is bad for another man?" he asked.

"Bad! Bad!" exclaimed Pierre. "We all know what is bad for ourselves."

"Yes, we know that, but the harm I am conscious of in myself is
something I cannot inflict on others," said Prince Andrew, growing more
and more animated and evidently wishing to express his new outlook to
Pierre. He spoke in French. "I only know two very real evils in life:
remorse and illness. The only good is the absence of those evils. To
live for myself avoiding those two evils is my whole philosophy now."

"And love of one's neighbor, and self-sacrifice?" began Pierre. "No, I
can't agree with you! To live only so as not to do evil and not to have
to repent is not enough. I lived like that, I lived for myself and
ruined my life. And only now when I am living, or at least trying"
(Pierre's modesty made him correct himself) "to live for others, only
now have I understood all the happiness of life. No, I shall not agree
with you, and you do not really believe what you are saying." Prince
Andrew looked silently at Pierre with an ironic smile.

"When you see my sister, Princess Mary, you'll get on with her," he
said. "Perhaps you are right for yourself," he added after a short
pause, "but everyone lives in his own way. You lived for yourself and
say you nearly ruined your life and only found happiness when you began
living for others. I experienced just the reverse. I lived for glory.--
And after all what is glory? The same love of others, a desire to do
something for them, a desire for their approval.--So I lived for others,
and not almost, but quite, ruined my life. And I have become calmer
since I began to live only for myself."

"But what do you mean by living only for yourself?" asked Pierre,
growing excited. "What about your son, your sister, and your father?"

"But that's just the same as myself--they are not others," explained
Prince Andrew. "The others, one's neighbors, le prochain, as you and
Princess Mary call it, are the chief source of all error and evil. Le
prochain--your Kiev peasants to whom you want to do good."

And he looked at Pierre with a mocking, challenging expression. He
evidently wished to draw him on.

"You are joking," replied Pierre, growing more and more excited. "What
error or evil can there be in my wishing to do good, and even doing a
little--though I did very little and did it very badly? What evil can
there be in it if unfortunate people, our serfs, people like ourselves,
were growing up and dying with no idea of God and truth beyond
ceremonies and meaningless prayers and are now instructed in a
comforting belief in future life, retribution, recompense, and
consolation? What evil and error are there in it, if people were dying
of disease without help while material assistance could so easily be
rendered, and I supplied them with a doctor, a hospital, and an asylum
for the aged? And is it not a palpable, unquestionable good if a
peasant, or a woman with a baby, has no rest day or night and I give
them rest and leisure?" said Pierre, hurrying and lisping. "And I have
done that though badly and to a small extent; but I have done something
toward it and you cannot persuade me that it was not a good action, and
more than that, you can't make me believe that you do not think so
yourself. And the main thing is," he continued, "that I know, and know
for certain, that the enjoyment of doing this good is the only sure
happiness in life."

"Yes, if you put it like that it's quite a different matter," said
Prince Andrew. "I build a house and lay out a garden, and you build
hospitals. The one and the other may serve as a pastime. But what's
right and what's good must be judged by one who knows all, but not by
us. Well, you want an argument," he added, "come on then."

They rose from the table and sat down in the entrance porch which served
as a veranda.

"Come, let's argue then," said Prince Andrew, "You talk of schools," he
went on, crooking a finger, "education and so forth; that is, you want
to raise him" (pointing to a peasant who passed by them taking off his
cap) "from his animal condition and awaken in him spiritual needs, while
it seems to me that animal happiness is the only happiness possible, and
that is just what you want to deprive him of. I envy him, but you want
to make him what I am, without giving him my means. Then you say,
'lighten his toil.' But as I see it, physical labor is as essential to
him, as much a condition of his existence, as mental activity is to you
or me. You can't help thinking. I go to bed after two in the morning,
thoughts come and I can't sleep but toss about till dawn, because I
think and can't help thinking, just as he can't help plowing and mowing;
if he didn't, he would go to the drink shop or fall ill. Just as I could
not stand his terrible physical labor but should die of it in a week, so
he could not stand my physical idleness, but would grow fat and die. The
third thing--what else was it you talked about?" and Prince Andrew
crooked a third finger. "Ah, yes, hospitals, medicine. He has a fit, he
is dying, and you come and bleed him and patch him up. He will drag
about as a cripple, a burden to everybody, for another ten years. It
would be far easier and simpler for him to die. Others are being born
and there are plenty of them as it is. It would be different if you
grudged losing a laborer--that's how I regard him--but you want to cure
him from love of him. And he does not want that. And besides, what a
notion that medicine ever cured anyone! Killed them, yes!" said he,
frowning angrily and turning away from Pierre.

Prince Andrew expressed his ideas so clearly and distinctly that it was
evident he had reflected on this subject more than once, and he spoke
readily and rapidly like a man who has not talked for a long time. His
glance became more animated as his conclusions became more hopeless.

"Oh, that is dreadful, dreadful!" said Pierre. "I don't understand how
one can live with such ideas. I had such moments myself not long ago, in
Moscow and when traveling, but at such times I collapsed so that I don't
live at all--everything seems hateful to me... myself most of all. Then
I don't eat, don't wash... and how is it with you?..."

"Why not wash? That is not cleanly," said Prince Andrew; "on the
contrary one must try to make one's life as pleasant as possible. I'm
alive, that is not my fault, so I must live out my life as best I can
without hurting others."

"But with such ideas what motive have you for living? One would sit
without moving, undertaking nothing...."

"Life as it is leaves one no peace. I should be thankful to do nothing,
but here on the one hand the local nobility have done me the honor to
choose me to be their marshal; it was all I could do to get out of it.
They could not understand that I have not the necessary qualifications
for it--the kind of good-natured, fussy shallowness necessary for the
position. Then there's this house, which must be built in order to have
a nook of one's own in which to be quiet. And now there's this
recruiting."

"Why aren't you serving in the army?"

"After Austerlitz!" said Prince Andrew gloomily. "No, thank you very
much! I have promised myself not to serve again in the active Russian
army. And I won't--not even if Bonaparte were here at Smolensk
threatening Bald Hills--even then I wouldn't serve in the Russian army!
Well, as I was saying," he continued, recovering his composure, "now
there's this recruiting. My father is chief in command of the Third
District, and my only way of avoiding active service is to serve under
him."

"Then you are serving?"

"I am."

He paused a little while.

"And why do you serve?"

"Why, for this reason! My father is one of the most remarkable men of
his time. But he is growing old, and though not exactly cruel he has too
energetic a character. He is so accustomed to unlimited power that he is
terrible, and now he has this authority of a commander-in-chief of the
recruiting, granted by the Emperor. If I had been two hours late a
fortnight ago he would have had a paymaster's clerk at Yukhnovna
hanged," said Prince Andrew with a smile. "So I am serving because I
alone have any influence with my father, and now and then can save him
from actions which would torment him afterwards."

"Well, there you see!"

"Yes, but it is not as you imagine," Prince Andrew continued. "I did
not, and do not, in the least care about that scoundrel of a clerk who
had stolen some boots from the recruits; I should even have been very
glad to see him hanged, but I was sorry for my father--that again is for
myself."

Prince Andrew grew more and more animated. His eyes glittered feverishly
while he tried to prove to Pierre that in his actions there was no
desire to do good to his neighbor.

"There now, you wish to liberate your serfs," he continued; "that is a
very good thing, but not for you--I don't suppose you ever had anyone
flogged or sent to Siberia--and still less for your serfs. If they are
beaten, flogged, or sent to Siberia, I don't suppose they are any the
worse off. In Siberia they lead the same animal life, and the stripes on
their bodies heal, and they are happy as before. But it is a good thing
for proprietors who perish morally, bring remorse upon themselves,
stifle this remorse and grow callous, as a result of being able to
inflict punishments justly and unjustly. It is those people I pity, and
for their sake I should like to liberate the serfs. You may not have
seen, but I have seen, how good men brought up in those traditions of
unlimited power, in time when they grow more irritable, become cruel and
harsh, are conscious of it, but cannot restrain themselves and grow more
and more miserable."

Prince Andrew spoke so earnestly that Pierre could not help thinking
that these thoughts had been suggested to Prince Andrew by his father's
case.

He did not reply.

"So that's what I'm sorry for--human dignity, peace of mind, purity, and
not the serfs' backs and foreheads, which, beat and shave as you may,
always remain the same backs and foreheads."

"No, no! A thousand times no! I shall never agree with you," said
Pierre.




CHAPTER XII

In the evening Andrew and Pierre got into the open carriage and drove to
Bald Hills. Prince Andrew, glancing at Pierre, broke the silence now and
then with remarks which showed that he was in a good temper.

Pointing to the fields, he spoke of the improvements he was making in
his husbandry.

Pierre remained gloomily silent, answering in monosyllables and
apparently immersed in his own thoughts.

He was thinking that Prince Andrew was unhappy, had gone astray, did not
see the true light, and that he, Pierre, ought to aid, enlighten, and
raise him. But as soon as he thought of what he should say, he felt that
Prince Andrew with one word, one argument, would upset all his teaching,
and he shrank from beginning, afraid of exposing to possible ridicule
what to him was precious and sacred.

"No, but why do you think so?" Pierre suddenly began, lowering his head
and looking like a bull about to charge, "why do you think so? You
should not think so."

"Think? What about?" asked Prince Andrew with surprise.

"About life, about man's destiny. It can't be so. I myself thought like
that, and do you know what saved me? Freemasonry! No, don't smile.
Freemasonry is not a religious ceremonial sect, as I thought it was:
Freemasonry is the best expression of the best, the eternal, aspects of
humanity."

And he began to explain Freemasonry as he understood it to Prince
Andrew. He said that Freemasonry is the teaching of Christianity freed
from the bonds of State and Church, a teaching of equality, brotherhood,
and love.

"Only our holy brotherhood has the real meaning of life, all the rest is
a dream," said Pierre. "Understand, my dear fellow, that outside this
union all is filled with deceit and falsehood and I agree with you that
nothing is left for an intelligent and good man but to live out his
life, like you, merely trying not to harm others. But make our
fundamental convictions your own, join our brotherhood, give yourself up
to us, let yourself be guided, and you will at once feel yourself, as I
have felt myself, a part of that vast invisible chain the beginning of
which is hidden in heaven," said Pierre.

Prince Andrew, looking straight in front of him, listened in silence to
Pierre's words. More than once, when the noise of the wheels prevented
his catching what Pierre said, he asked him to repeat it, and by the
peculiar glow that came into Prince Andrew's eyes and by his silence,
Pierre saw that his words were not in vain and that Prince Andrew would
not interrupt him or laugh at what he said.

They reached a river that had overflowed its banks and which they had to
cross by ferry. While the carriage and horses were being placed on it,
they also stepped on the raft.

Prince Andrew, leaning his arms on the raft railing, gazed silently at
the flooding waters glittering in the setting sun.

"Well, what do you think about it?" Pierre asked. "Why are you silent?"

"What do I think about it? I am listening to you. It's all very well....
You say: join our brotherhood and we will show you the aim of life, the
destiny of man, and the laws which govern the world. But who are we?
Men. How is it you know everything? Why do I alone not see what you see?
You see a reign of goodness and truth on earth, but I don't see it."

Pierre interrupted him.

"Do you believe in a future life?" he asked.

"A future life?" Prince Andrew repeated, but Pierre, giving him no time
to reply, took the repetition for a denial, the more readily as he knew
Prince Andrew's former atheistic convictions.

"You say you can't see a reign of goodness and truth on earth. Nor could
I, and it cannot be seen if one looks on our life here as the end of
everything. On earth, here on this earth" (Pierre pointed to the
fields), "there is no truth, all is false and evil; but in the universe,
in the whole universe there is a kingdom of truth, and we who are now
the children of earth are--eternally--children of the whole universe.
Don't I feel in my soul that I am part of this vast harmonious whole?
Don't I feel that I form one link, one step, between the lower and
higher beings, in this vast harmonious multitude of beings in whom the
Deity--the Supreme Power if you prefer the term--is manifest? If I see,
clearly see, that ladder leading from plant to man, why should I suppose
it breaks off at me and does not go farther and farther? I feel that I
cannot vanish, since nothing vanishes in this world, but that I shall
always exist and always have existed. I feel that beyond me and above me
there are spirits, and that in this world there is truth."

"Yes, that is Herder's theory," said Prince Andrew, "but it is not that
which can convince me, dear friend--life and death are what convince.
What convinces is when one sees a being dear to one, bound up with one's
own life, before whom one was to blame and had hoped to make it right"
(Prince Andrew's voice trembled and he turned away), "and suddenly that
being is seized with pain, suffers, and ceases to exist.... Why? It
cannot be that there is no answer. And I believe there is.... That's
what convinces, that is what has convinced me," said Prince Andrew.

"Yes, yes, of course," said Pierre, "isn't that what I'm saying?"

"No. All I say is that it is not argument that convinces me of the
necessity of a future life, but this: when you go hand in hand with
someone and all at once that person vanishes there, into nowhere, and
you yourself are left facing that abyss, and look in. And I have looked
in...."

"Well, that's it then! You know that there is a there and there is a
Someone? There is the future life. The Someone is--God."

Prince Andrew did not reply. The carriage and horses had long since been
taken off, onto the farther bank, and reharnessed. The sun had sunk half
below the horizon and an evening frost was starring the puddles near the
ferry, but Pierre and Andrew, to the astonishment of the footmen,
coachmen, and ferrymen, still stood on the raft and talked.

"If there is a God and future life, there is truth and good, and man's
highest happiness consists in striving to attain them. We must live, we
must love, and we must believe that we live not only today on this scrap
of earth, but have lived and shall live forever, there, in the Whole,"
said Pierre, and he pointed to the sky.

Prince Andrew stood leaning on the railing of the raft listening to
Pierre, and he gazed with his eyes fixed on the red reflection of the
sun gleaming on the blue waters. There was perfect stillness. Pierre
became silent. The raft had long since stopped and only the waves of the
current beat softly against it below. Prince Andrew felt as if the sound
of the waves kept up a refrain to Pierre's words, whispering:

"It is true, believe it."

He sighed, and glanced with a radiant, childlike, tender look at
Pierre's face, flushed and rapturous, but yet shy before his superior
friend.

"Yes, if it only were so!" said Prince Andrew. "However, it is time to
get on," he added, and, stepping off the raft, he looked up at the sky
to which Pierre had pointed, and for the first time since Austerlitz saw
that high, everlasting sky he had seen while lying on that battlefield;
and something that had long been slumbering, something that was best
within him, suddenly awoke, joyful and youthful, in his soul. It
vanished as soon as he returned to the customary conditions of his life,
but he knew that this feeling which he did not know how to develop
existed within him. His meeting with Pierre formed an epoch in Prince
Andrew's life. Though outwardly he continued to live in the same old
way, inwardly he began a new life.




CHAPTER XIII

It was getting dusk when Prince Andrew and Pierre drove up to the front
entrance of the house at Bald Hills. As they approached the house,
Prince Andrew with a smile drew Pierre's attention to a commotion going
on at the back porch. A woman, bent with age, with a wallet on her back,
and a short, long-haired, young man in a black garment had rushed back
to the gate on seeing the carriage driving up. Two women ran out after
them, and all four, looking round at the carriage, ran in dismay up the
steps of the back porch.

"Those are Mary's 'God's folk,'" said Prince Andrew. "They have mistaken
us for my father. This is the one matter in which she disobeys him. He
orders these pilgrims to be driven away, but she receives them."

"But what are 'God's folk'?" asked Pierre.

Prince Andrew had no time to answer. The servants came out to meet them,
and he asked where the old prince was and whether he was expected back
soon.

The old prince had gone to the town and was expected back any minute.

Prince Andrew led Pierre to his own apartments, which were always kept
in perfect order and readiness for him in his father's house; he himself
went to the nursery.

"Let us go and see my sister," he said to Pierre when he returned. "I
have not found her yet, she is hiding now, sitting with her 'God's
folk.' It will serve her right, she will be confused, but you will see
her 'God's folk.' It's really very curious."

"What are 'God's folk'?" asked Pierre.

"Come, and you'll see for yourself."

Princess Mary really was disconcerted and red patches came on her face
when they went in. In her snug room, with lamps burning before the icon
stand, a young lad with a long nose and long hair, wearing a monk's
cassock, sat on the sofa beside her, behind a samovar. Near them, in an
armchair, sat a thin, shriveled, old woman, with a meek expression on
her childlike face.

"Andrew, why didn't you warn me?" said the princess, with mild reproach,
as she stood before her pilgrims like a hen before her chickens.

"Charmee de vous voir. Je suis tres contente de vous voir," * she said
to Pierre as he kissed her hand. She had known him as a child, and now
his friendship with Andrew, his misfortune with his wife, and above all
his kindly, simple face disposed her favorably toward him. She looked at
him with her beautiful radiant eyes and seemed to say, "I like you very
much, but please don't laugh at my people." After exchanging the first
greetings, they sat down.


* "Delighted to see you. I am very glad to see you."

"Ah, and Ivanushka is here too!" said Prince Andrew, glancing with a
smile at the young pilgrim.

"Andrew!" said Princess Mary, imploringly. "Il faut que vous sachiez que
c'est une femme," * said Prince Andrew to Pierre.

"Andrew, au nom de Dieu!" *(2) Princess Mary repeated.


* "You must know that this is a woman."

* (2) "For heaven's sake."

It was evident that Prince Andrew's ironical tone toward the pilgrims
and Princess Mary's helpless attempts to protect them were their
customary long-established relations on the matter.

"Mais, ma bonne amie," said Prince Andrew, "vous devriez au contraire
m'être reconnaissante de ce que j'explique a Pierre votre intimité avec
ce jeune homme." *


* "But, my dear, you ought on the contrary to be grateful to me for
explaining to Pierre your intimacy with this young man."

"Really?" said Pierre, gazing over his spectacles with curiosity and
seriousness (for which Princess Mary was specially grateful to him) into
Ivanushka's face, who, seeing that she was being spoken about, looked
round at them all with crafty eyes.

Princess Mary's embarrassment on her people's account was quite
unnecessary. They were not in the least abashed. The old woman, lowering
her eyes but casting side glances at the newcomers, had turned her cup
upside down and placed a nibbled bit of sugar beside it, and sat quietly
in her armchair, though hoping to be offered another cup of tea.
Ivanushka, sipping out of her saucer, looked with sly womanish eyes from
under her brows at the young men.

"Where have you been? To Kiev?" Prince Andrew asked the old woman.

"I have, good sir," she answered garrulously. "Just at Christmastime I
was deemed worthy to partake of the holy and heavenly sacrament at the
shrine of the saint. And now I'm from Kolyazin, master, where a great
and wonderful blessing has been revealed."

"And was Ivanushka with you?"

"I go by myself, benefactor," said Ivanushka, trying to speak in a bass
voice. "I only came across Pelageya in Yukhnovo..."

Pelageya interrupted her companion; she evidently wished to tell what
she had seen.

"In Kolyazin, master, a wonderful blessing has been revealed."

"What is it? Some new relics?" asked Prince Andrew.

"Andrew, do leave off," said Princess Mary. "Don't tell him, Pelageya."

"No... why not, my dear, why shouldn't I? I like him. He is kind, he is
one of God's chosen, he's a benefactor, he once gave me ten rubles, I
remember. When I was in Kiev, Crazy Cyril says to me (he's one of God's
own and goes barefoot summer and winter), he says, 'Why are you not
going to the right place? Go to Kolyazin where a wonder-working icon of
the Holy Mother of God has been revealed.' On hearing those words I said
good-by to the holy folk and went."

All were silent, only the pilgrim woman went on in measured tones,
drawing in her breath.

"So I come, master, and the people say to me: 'A great blessing has been
revealed, holy oil trickles from the cheeks of our blessed Mother, the
Holy Virgin Mother of God'...."

"All right, all right, you can tell us afterwards," said Princess Mary,
flushing.

"Let me ask her," said Pierre. "Did you see it yourselves?" he inquired.

"Oh, yes, master, I was found worthy. Such a brightness on the face like
the light of heaven, and from the blessed Mother's cheek it drops and
drops...."

"But, dear me, that must be a fraud!" said Pierre, naively, who had
listened attentively to the pilgrim.

"Oh, master, what are you saying?" exclaimed the horrified Pelageya,
turning to Princess Mary for support.

"They impose on the people," he repeated.

"Lord Jesus Christ!" exclaimed the pilgrim woman, crossing herself. "Oh,
don't speak so, master! There was a general who did not believe, and
said, 'The monks cheat,' and as soon as he'd said it he went blind. And
he dreamed that the Holy Virgin Mother of the Kiev catacombs came to him
and said, 'Believe in me and I will make you whole.' So he begged: 'Take
me to her, take me to her.' It's the real truth I'm telling you, I saw
it myself. So he was brought, quite blind, straight to her, and he goes
up to her and falls down and says, 'Make me whole,' says he, 'and I'll
give thee what the Tsar bestowed on me.' I saw it myself, master, the
star is fixed into the icon. Well, and what do you think? He received
his sight! It's a sin to speak so. God will punish you," she said
admonishingly, turning to Pierre.

"How did the star get into the icon?" Pierre asked.

"And was the Holy Mother promoted to the rank of general?" said Prince
Andrew, with a smile.

Pelageya suddenly grew quite pale and clasped her hands.

"Oh, master, master, what a sin! And you who have a son!" she began, her
pallor suddenly turning to a vivid red. "Master, what have you said? God
forgive you!" And she crossed herself. "Lord forgive him! My dear, what
does it mean?..." she asked, turning to Princess Mary. She got up and,
almost crying, began to arrange her wallet. She evidently felt
frightened and ashamed to have accepted charity in a house where such
things could be said, and was at the same time sorry to have now to
forgo the charity of this house.

"Now, why need you do it?" said Princess Mary. "Why did you come to
me?..."

"Come, Pelageya, I was joking," said Pierre. "Princesse, ma parole, je
n'ai pas voulu l'offenser. * I did not mean anything, I was only
joking," he said, smiling shyly and trying to efface his offense. "It
was all my fault, and Andrew was only joking."


* "Princess, on my word, I did not wish to offend her."

Pelageya stopped doubtfully, but in Pierre's face there was such a look
of sincere penitence, and Prince Andrew glanced so meekly now at her and
now at Pierre, that she was gradually reassured.




CHAPTER XIV

The pilgrim woman was appeased and, being encouraged to talk, gave a
long account of Father Amphilochus, who led so holy a life that his
hands smelled of incense, and how on her last visit to Kiev some monks
she knew let her have the keys of the catacombs, and how she, taking
some dried bread with her, had spent two days in the catacombs with the
saints. "I'd pray awhile to one, ponder awhile, then go on to another.
I'd sleep a bit and then again go and kiss the relics, and there was
such peace all around, such blessedness, that one don't want to come
out, even into the light of heaven again."

Pierre listened to her attentively and seriously. Prince Andrew went out
of the room, and then, leaving "God's folk" to finish their tea,
Princess Mary took Pierre into the drawing room.

"You are very kind," she said to him.

"Oh, I really did not mean to hurt her feelings. I understand them so
well and have the greatest respect for them."

Princess Mary looked at him silently and smiled affectionately.

"I have known you a long time, you see, and am as fond of you as of a
brother," she said. "How do you find Andrew?" she added hurriedly, not
giving him time to reply to her affectionate words. "I am very anxious
about him. His health was better in the winter, but last spring his
wound reopened and the doctor said he ought to go away for a cure. And I
am also very much afraid for him spiritually. He has not a character
like us women who, when we suffer, can weep away our sorrows. He keeps
it all within him. Today he is cheerful and in good spirits, but that is
the effect of your visit--he is not often like that. If you could
persuade him to go abroad. He needs activity, and this quiet regular
life is very bad for him. Others don't notice it, but I see it."

Toward ten o'clock the men servants rushed to the front door, hearing
the bells of the old prince's carriage approaching. Prince Andrew and
Pierre also went out into the porch.

"Who's that?" asked the old prince, noticing Pierre as he got out of the
carriage.

"Ah! Very glad! Kiss me," he said, having learned who the young stranger
was.

The old prince was in a good temper and very gracious to Pierre.

Before supper, Prince Andrew, coming back to his father's study, found
him disputing hotly with his visitor. Pierre was maintaining that a time
would come when there would be no more wars. The old prince disputed it
chaffingly, but without getting angry.

"Drain the blood from men's veins and put in water instead, then there
will be no more war! Old women's nonsense--old women's nonsense!" he
repeated, but still he patted Pierre affectionately on the shoulder, and
then went up to the table where Prince Andrew, evidently not wishing to
join in the conversation, was looking over the papers his father had
brought from town. The old prince went up to him and began to talk
business.

"The marshal, a Count Rostov, hasn't sent half his contingent. He came
to town and wanted to invite me to dinner--I gave him a pretty
dinner!... And there, look at this.... Well, my boy," the old prince
went on, addressing his son and patting Pierre on the shoulder. "A fine
fellow--your friend--I like him! He stirs me up. Another says clever
things and one doesn't care to listen, but this one talks rubbish yet
stirs an old fellow up. Well, go! Get along! Perhaps I'll come and sit
with you at supper. We'll have another dispute. Make friends with my
little fool, Princess Mary," he shouted after Pierre, through the door.

Only now, on his visit to Bald Hills, did Pierre fully realize the
strength and charm of his friendship with Prince Andrew. That charm was
not expressed so much in his relations with him as with all his family
and with the household. With the stern old prince and the gentle, timid
Princess Mary, though he had scarcely known them, Pierre at once felt
like an old friend. They were all fond of him already. Not only Princess
Mary, who had been won by his gentleness with the pilgrims, gave him her
most radiant looks, but even the one-year-old "Prince Nicholas" (as his
grandfather called him) smiled at Pierre and let himself be taken in his
arms, and Michael Ivanovich and Mademoiselle Bourienne looked at him
with pleasant smiles when he talked to the old prince.

The old prince came in to supper; this was evidently on Pierre's
account. And during the two days of the young man's visit he was
extremely kind to him and told him to visit them again.

When Pierre had gone and the members of the household met together, they
began to express their opinions of him as people always do after a new
acquaintance has left, but as seldom happens, no one said anything but
what was good of him.




CHAPTER XV

When returning from his leave, Rostov felt, for the first time, how
close was the bond that united him to Denisov and the whole regiment.

On approaching it, Rostov felt as he had done when approaching his home
in Moscow. When he saw the first hussar with the unbuttoned uniform of
his regiment, when he recognized red-haired Dementyev and saw the picket
ropes of the roan horses, when Lavrushka gleefully shouted to his
master, "The count has come!" and Denisov, who had been asleep on his
bed, ran all disheveled out of the mud hut to embrace him, and the
officers collected round to greet the new arrival, Rostov experienced
the same feeling as when his mother, his father, and his sister had
embraced him, and tears of joy choked him so that he could not speak.
The regiment was also a home, and as unalterably dear and precious as
his parents' house.

When he had reported himself to the commander of the regiment and had
been reassigned to his former squadron, had been on duty and had gone
out foraging, when he had again entered into all the little interests of
the regiment and felt himself deprived of liberty and bound in one
narrow, unchanging frame, he experienced the same sense of peace, of
moral support, and the same sense of being at home here in his own
place, as he had felt under the parental roof. But here was none of all
that turmoil of the world at large, where he did not know his right
place and took mistaken decisions; here was no Sonya with whom he ought,
or ought not, to have an explanation; here was no possibility of going
there or not going there; here there were not twenty-four hours in the
day which could be spent in such a variety of ways; there was not that
innumerable crowd of people of whom not one was nearer to him or farther
from him than another; there were none of those uncertain and undefined
money relations with his father, and nothing to recall that terrible
loss to Dolokhov. Here, in the regiment, all was clear and simple. The
whole world was divided into two unequal parts: one, our Pavlograd
regiment; the other, all the rest. And the rest was no concern of his.
In the regiment, everything was definite: who was lieutenant, who
captain, who was a good fellow, who a bad one, and most of all, who was
a comrade. The canteenkeeper gave one credit, one's pay came every four
months, there was nothing to think out or decide, you had only to do
nothing that was considered bad in the Pavlograd regiment and, when
given an order, to do what was clearly, distinctly, and definitely
ordered--and all would be well.

Having once more entered into the definite conditions of this regimental
life, Rostov felt the joy and relief a tired man feels on lying down to
rest. Life in the regiment, during this campaign, was all the pleasanter
for him, because, after his loss to Dolokhov (for which, in spite of all
his family's efforts to console him, he could not forgive himself), he
had made up his mind to atone for his fault by serving, not as he had
done before, but really well, and by being a perfectly first-rate
comrade and officer--in a word, a splendid man altogether, a thing which
seemed so difficult out in the world, but so possible in the regiment.

After his losses, he had determined to pay back his debt to his parents
in five years. He received ten thousand rubles a year, but now resolved
to take only two thousand and leave the rest to repay the debt to his
parents.

Our army, after repeated retreats and advances and battles at Pultusk
and Preussisch-Eylau, was concentrated near Bartenstein. It was awaiting
the Emperor's arrival and the beginning of a new campaign.

The Pavlograd regiment, belonging to that part of the army which had
served in the 1805 campaign, had been recruiting up to strength in
Russia, and arrived too late to take part in the first actions of the
campaign. It had been neither at Pultusk nor at Preussisch-Eylau and,
when it joined the army in the field in the second half of the campaign,
was attached to Platov's division.

Platov's division was acting independently of the main army. Several
times parts of the Pavlograd regiment had exchanged shots with the
enemy, had taken prisoners, and once had even captured Marshal Oudinot's
carriages. In April the Pavlograds were stationed immovably for some
weeks near a totally ruined and deserted German village.

A thaw had set in, it was muddy and cold, the ice on the river broke,
and the roads became impassable. For days neither provisions for the men
nor fodder for the horses had been issued. As no transports could
arrive, the men dispersed about the abandoned and deserted villages,
searching for potatoes, but found few even of these.

Everything had been eaten up and the inhabitants had all fled--if any
remained, they were worse than beggars and nothing more could be taken
from them; even the soldiers, usually pitiless enough, instead of taking
anything from them, often gave them the last of their rations.

The Pavlograd regiment had had only two men wounded in action, but had
lost nearly half its men from hunger and sickness. In the hospitals,
death was so certain that soldiers suffering from fever, or the swelling
that came from bad food, preferred to remain on duty, and hardly able to
drag their legs went to the front rather than to the hospitals. When
spring came on, the soldiers found a plant just showing out of the
ground that looked like asparagus, which, for some reason, they called
"Mashka's sweet root." It was very bitter, but they wandered about the
fields seeking it and dug it out with their sabers and ate it, though
they were ordered not to do so, as it was a noxious plant. That spring a
new disease broke out among the soldiers, a swelling of the arms, legs,
and face, which the doctors attributed to eating this root. But in spite
of all this, the soldiers of Denisov's squadron fed chiefly on "Mashka's
sweet root," because it was the second week that the last of the
biscuits were being doled out at the rate of half a pound a man and the
last potatoes received had sprouted and frozen.

The horses also had been fed for a fortnight on straw from the thatched
roofs and had become terribly thin, though still covered with tufts of
felty winter hair.

Despite this destitution, the soldiers and officers went on living just
as usual. Despite their pale swollen faces and tattered uniforms, the
hussars formed line for roll call, kept things in order, groomed their
horses, polished their arms, brought in straw from the thatched roofs in
place of fodder, and sat down to dine round the caldrons from which they
rose up hungry, joking about their nasty food and their hunger. As
usual, in their spare time, they lit bonfires, steamed themselves before
them naked; smoked, picked out and baked sprouting rotten potatoes, told
and listened to stories of Potemkin's and Suvorov's campaigns, or to
legends of Alesha the Sly, or the priest's laborer Mikolka.

The officers, as usual, lived in twos and threes in the roofless, half-
ruined houses. The seniors tried to collect straw and potatoes and, in
general, food for the men. The younger ones occupied themselves as
before, some playing cards (there was plenty of money, though there was
no food), some with more innocent games, such as quoits and skittles.
The general trend of the campaign was rarely spoken of, partly because
nothing certain was known about it, partly because there was a vague
feeling that in the main it was going badly.

Rostov lived, as before, with Denisov, and since their furlough they had
become more friendly than ever. Denisov never spoke of Rostov's family,
but by the tender friendship his commander showed him, Rostov felt that
the elder hussar's luckless love for Natasha played a part in
strengthening their friendship. Denisov evidently tried to expose Rostov
to danger as seldom as possible, and after an action greeted his safe
return with evident joy. On one of his foraging expeditions, in a
deserted and ruined village to which he had come in search of
provisions, Rostov found a family consisting of an old Pole and his
daughter with an infant in arms. They were half clad, hungry, too weak
to get away on foot and had no means of obtaining a conveyance. Rostov
brought them to his quarters, placed them in his own lodging, and kept
them for some weeks while the old man was recovering. One of his
comrades, talking of women, began chaffing Rostov, saying that he was
more wily than any of them and that it would not be a bad thing if he
introduced to them the pretty Polish girl he had saved. Rostov took the
joke as an insult, flared up, and said such unpleasant things to the
officer that it was all Denisov could do to prevent a duel. When the
officer had gone away, Denisov, who did not himself know what Rostov's
relations with the Polish girl might be, began to upbraid him for his
quickness of temper, and Rostov replied:

"Say what you like.... She is like a sister to me, and I can't tell you
how it offended me... because... well, for that reason...."

Denisov patted him on the shoulder and began rapidly pacing the room
without looking at Rostov, as was his way at moments of deep feeling.

"Ah, what a mad bweed you Wostovs are!" he muttered, and Rostov noticed
tears in his eyes.




CHAPTER XVI

In April the troops were enlivened by news of the Emperor's arrival, but
Rostov had no chance of being present at the review he held at
Bartenstein, as the Pavlograds were at the outposts far beyond that
place.

They were bivouacking. Denisov and Rostov were living in an earth hut,
dug out for them by the soldiers and roofed with branches and turf. The
hut was made in the following manner, which had then come into vogue. A
trench was dug three and a half feet wide, four feet eight inches deep,
and eight feet long. At one end of the trench, steps were cut out and
these formed the entrance and vestibule. The trench itself was the room,
in which the lucky ones, such as the squadron commander, had a board,
lying on piles at the end opposite the entrance, to serve as a table. On
each side of the trench, the earth was cut out to a breadth of about two
and a half feet, and this did duty for bedsteads and couches. The roof
was so constructed that one could stand up in the middle of the trench
and could even sit up on the beds if one drew close to the table.
Denisov, who was living luxuriously because the soldiers of his squadron
liked him, had also a board in the roof at the farther end, with a piece
of (broken but mended) glass in it for a window. When it was very cold,
embers from the soldiers' campfire were placed on a bent sheet of iron
on the steps in the "reception room"--as Denisov called that part of the
hut--and it was then so warm that the officers, of whom there were
always some with Denisov and Rostov, sat in their shirt sleeves.

In April, Rostov was on orderly duty. One morning, between seven and
eight, returning after a sleepless night, he sent for embers, changed
his rain-soaked underclothes, said his prayers, drank tea, got warm,
then tidied up the things on the table and in his own corner, and, his
face glowing from exposure to the wind and with nothing on but his
shirt, lay down on his back, putting his arms under his head. He was
pleasantly considering the probability of being promoted in a few days
for his last reconnoitering expedition, and was awaiting Denisov, who
had gone out somewhere and with whom he wanted a talk.

Suddenly he heard Denisov shouting in a vibrating voice behind the hut,
evidently much excited. Rostov moved to the window to see whom he was
speaking to, and saw the quartermaster, Topcheenko.

"I ordered you not to let them eat that Mashka woot stuff!" Denisov was
shouting. "And I saw with my own eyes how Lazarchuk bwought some fwom
the fields."

"I have given the order again and again, your honor, but they don't
obey," answered the quartermaster.

Rostov lay down again on his bed and thought complacently: "Let him fuss
and bustle now, my job's done and I'm lying down--capitally!" He could
hear that Lavrushka--that sly, bold orderly of Denisov's--was talking,
as well as the quartermaster. Lavrushka was saying something about
loaded wagons, biscuits, and oxen he had seen when he had gone out for
provisions.

Then Denisov's voice was heard shouting farther and farther away.
"Saddle! Second platoon!"

"Where are they off to now?" thought Rostov.

Five minutes later, Denisov came into the hut, climbed with muddy boots
on the bed, lit his pipe, furiously scattered his things about, took his
leaded whip, buckled on his saber, and went out again. In answer to
Rostov's inquiry where he was going, he answered vaguely and crossly
that he had some business.

"Let God and our gweat monarch judge me afterwards!" said Denisov going
out, and Rostov heard the hoofs of several horses splashing through the
mud. He did not even trouble to find out where Denisov had gone. Having
got warm in his corner, he fell asleep and did not leave the hut till
toward evening. Denisov had not yet returned. The weather had cleared
up, and near the next hut two officers and a cadet were playing svayka,
laughing as they threw their missiles which buried themselves in the
soft mud. Rostov joined them. In the middle of the game, the officers
saw some wagons approaching with fifteen hussars on their skinny horses
behind them. The wagons escorted by the hussars drew up to the picket
ropes and a crowd of hussars surrounded them.

"There now, Denisov has been worrying," said Rostov, "and here are the
provisions."

"So they are!" said the officers. "Won't the soldiers be glad!"

A little behind the hussars came Denisov, accompanied by two infantry
officers with whom he was talking.

Rostov went to meet them.

"I warn you, Captain," one of the officers, a short thin man, evidently
very angry, was saying.

"Haven't I told you I won't give them up?" replied Denisov.

"You will answer for it, Captain. It is mutiny--seizing the transport of
one's own army. Our men have had nothing to eat for two days."

"And mine have had nothing for two weeks," said Denisov.

"It is robbery! You'll answer for it, sir!" said the infantry officer,
raising his voice.

"Now, what are you pestewing me for?" cried Denisov, suddenly losing his
temper. "I shall answer for it and not you, and you'd better not buzz
about here till you get hurt. Be off! Go!" he shouted at the officers.

"Very well, then!" shouted the little officer, undaunted and not riding
away. "If you are determined to rob, I'll..."

"Go to the devil! quick ma'ch, while you're safe and sound!" and Denisov
turned his horse on the officer.

"Very well, very well!" muttered the officer, threateningly, and turning
his horse he trotted away, jolting in his saddle.

"A dog astwide a fence! A weal dog astwide a fence!" shouted Denisov
after him (the most insulting expression a cavalryman can address to a
mounted infantryman) and riding up to Rostov, he burst out laughing.

"I've taken twansports from the infantwy by force!" he said. "After all,
can't let our men starve."

The wagons that had reached the hussars had been consigned to an
infantry regiment, but learning from Lavrushka that the transport was
unescorted, Denisov with his hussars had seized it by force. The
soldiers had biscuits dealt out to them freely, and they even shared
them with the other squadrons.

The next day the regimental commander sent for Denisov, and holding his
fingers spread out before his eyes said:

"This is how I look at this affair: I know nothing about it and won't
begin proceedings, but I advise you to ride over to the staff and settle
the business there in the commissariat department and if possible sign a
receipt for such and such stores received. If not, as the demand was
booked against an infantry regiment, there will be a row and the affair
may end badly."

From the regimental commander's, Denisov rode straight to the staff with
a sincere desire to act on this advice. In the evening he came back to
his dugout in a state such as Rostov had never yet seen him in. Denisov
could not speak and gasped for breath. When Rostov asked what was the
matter, he only uttered some incoherent oaths and threats in a hoarse,
feeble voice.

Alarmed at Denisov's condition, Rostov suggested that he should undress,
drink some water, and send for the doctor.

"Twy me for wobbewy... oh! Some more water... Let them twy me, but I'll
always thwash scoundwels... and I'll tell the Empewo'... Ice..." he
muttered.

The regimental doctor, when he came, said it was absolutely necessary to
bleed Denisov. A deep saucer of black blood was taken from his hairy arm
and only then was he able to relate what had happened to him.

"I get there," began Denisov. "'Now then, where's your chief's
quarters?' They were pointed out. 'Please to wait.' 'I've widden twenty
miles and have duties to attend to and no time to wait. Announce me.'
Vewy well, so out comes their head chief--also took it into his head to
lecture me: 'It's wobbewy!'--'Wobbewy,' I say, 'is not done by man who
seizes pwovisions to feed his soldiers, but by him who takes them to
fill his own pockets!' 'Will you please be silent?' 'Vewy good!' Then he
says: 'Go and give a weceipt to the commissioner, but your affair will
be passed on to headquarters.' I go to the commissioner. I enter, and at
the table... who do you think? No, but wait a bit!... Who is it that's
starving us?" shouted Denisov, hitting the table with the fist of his
newly bled arm so violently that the table nearly broke down and the
tumblers on it jumped about. "Telyanin! 'What? So it's you who's
starving us to death! Is it? Take this and this!' and I hit him so pat,
stwaight on his snout... 'Ah, what a... what a...!' and I sta'ted
fwashing him... Well, I've had a bit of fun I can tell you!" cried
Denisov, gleeful and yet angry, his white teeth showing under his black
mustache. "I'd have killed him if they hadn't taken him away!"

"But what are you shouting for? Calm yourself," said Rostov. "You've set
your arm bleeding afresh. Wait, we must tie it up again."

Denisov was bandaged up again and put to bed. Next day he woke calm and
cheerful.

But at noon the adjutant of the regiment came into Rostov's and
Denisov's dugout with a grave and serious face and regretfully showed
them a paper addressed to Major Denisov from the regimental commander in
which inquiries were made about yesterday's occurrence. The adjutant
told them that the affair was likely to take a very bad turn: that a
court-martial had been appointed, and that in view of the severity with
which marauding and insubordination were now regarded, degradation to
the ranks would be the best that could be hoped for.

The case, as represented by the offended parties, was that, after
seizing the transports, Major Denisov, being drunk, went to the chief
quartermaster and without any provocation called him a thief, threatened
to strike him, and on being led out had rushed into the office and given
two officials a thrashing, and dislocated the arm of one of them.

In answer to Rostov's renewed questions, Denisov said, laughing, that he
thought he remembered that some other fellow had got mixed up in it, but
that it was all nonsense and rubbish, and he did not in the least fear
any kind of trial, and that if those scoundrels dared attack him he
would give them an answer that they would not easily forget.

Denisov spoke contemptuously of the whole matter, but Rostov knew him
too well not to detect that (while hiding it from others) at heart he
feared a court-martial and was worried over the affair, which was
evidently taking a bad turn. Every day, letters of inquiry and notices
from the court arrived, and on the first of May, Denisov was ordered to
hand the squadron over to the next in seniority and appear before the
staff of his division to explain his violence at the commissariat
office. On the previous day Platov reconnoitered with two Cossack
regiments and two squadrons of hussars. Denisov, as was his wont, rode
out in front of the outposts, parading his courage. A bullet fired by a
French sharpshooter hit him in the fleshy part of his leg. Perhaps at
another time Denisov would not have left the regiment for so slight a
wound, but now he took advantage of it to excuse himself from appearing
at the staff and went into hospital.




CHAPTER XVII

In June the battle of Friedland was fought, in which the Pavlograds did
not take part, and after that an armistice was proclaimed. Rostov, who
felt his friend's absence very much, having no news of him since he left
and feeling very anxious about his wound and the progress of his
affairs, took advantage of the armistice to get leave to visit Denisov
in hospital.

The hospital was in a small Prussian town that had been twice devastated
by Russian and French troops. Because it was summer, when it is so
beautiful out in the fields, the little town presented a particularly
dismal appearance with its broken roofs and fences, its foul streets,
tattered inhabitants, and the sick and drunken soldiers wandering about.

The hospital was in a brick building with some of the window frames and
panes broken and a courtyard surrounded by the remains of a wooden fence
that had been pulled to pieces. Several bandaged soldiers, with pale
swollen faces, were sitting or walking about in the sunshine in the
yard.

Directly Rostov entered the door he was enveloped by a smell of
putrefaction and hospital air. On the stairs he met a Russian army
doctor smoking a cigar. The doctor was followed by a Russian assistant.

"I can't tear myself to pieces," the doctor was saying. "Come to Makar
Alexeevich in the evening. I shall be there."

The assistant asked some further questions.

"Oh, do the best you can! Isn't it all the same?" The doctor noticed
Rostov coming upstairs.

"What do you want, sir?" said the doctor. "What do you want? The bullets
having spared you, do you want to try typhus? This is a pesthouse, sir."

"How so?" asked Rostov.

"Typhus, sir. It's death to go in. Only we two, Makeev and I" (he
pointed to the assistant), "keep on here. Some five of us doctors have
died in this place.... When a new one comes he is done for in a week,"
said the doctor with evident satisfaction. "Prussian doctors have been
invited here, but our allies don't like it at all."

Rostov explained that he wanted to see Major Denisov of the hussars, who
was wounded.

"I don't know. I can't tell you, sir. Only think! I am alone in charge
of three hospitals with more than four hundred patients! It's well that
the charitable Prussian ladies send us two pounds of coffee and some
lint each month or we should be lost!" he laughed. "Four hundred, sir,
and they're always sending me fresh ones. There are four hundred? Eh?"
he asked, turning to the assistant.

The assistant looked fagged out. He was evidently vexed and impatient
for the talkative doctor to go.

"Major Denisov," Rostov said again. "He was wounded at Molliten."

"Dead, I fancy. Eh, Makeev?" queried the doctor, in a tone of
indifference.

The assistant, however, did not confirm the doctor's words.

"Is he tall and with reddish hair?" asked the doctor.

Rostov described Denisov's appearance.

"There was one like that," said the doctor, as if pleased. "That one is
dead, I fancy. However, I'll look up our list. We had a list. Have you
got it, Makeev?"

"Makar Alexeevich has the list," answered the assistant. "But if you'll
step into the officers' wards you'll see for yourself," he added,
turning to Rostov.

"Ah, you'd better not go, sir," said the doctor, "or you may have to
stay here yourself."

But Rostov bowed himself away from the doctor and asked the assistant to
show him the way.

"Only don't blame me!" the doctor shouted up after him.

Rostov and the assistant went into the dark corridor. The smell was so
strong there that Rostov held his nose and had to pause and collect his
strength before he could go on. A door opened to the right, and an
emaciated sallow man on crutches, barefoot and in underclothing, limped
out and, leaning against the doorpost, looked with glittering envious
eyes at those who were passing. Glancing in at the door, Rostov saw that
the sick and wounded were lying on the floor on straw and overcoats.

"May I go in and look?"

"What is there to see?" said the assistant.

But, just because the assistant evidently did not want him to go in,
Rostov entered the soldiers' ward. The foul air, to which he had already
begun to get used in the corridor, was still stronger here. It was a
little different, more pungent, and one felt that this was where it
originated.

In the long room, brightly lit up by the sun through the large windows,
the sick and wounded lay in two rows with their heads to the walls, and
leaving a passage in the middle. Most of them were unconscious and paid
no attention to the newcomers. Those who were conscious raised
themselves or lifted their thin yellow faces, and all looked intently at
Rostov with the same expression of hope, of relief, reproach, and envy
of another's health. Rostov went to the middle of the room and looking
through the open doors into the two adjoining rooms saw the same thing
there. He stood still, looking silently around. He had not at all
expected such a sight. Just before him, almost across the middle of the
passage on the bare floor, lay a sick man, probably a Cossack to judge
by the cut of his hair. The man lay on his back, his huge arms and legs
outstretched. His face was purple, his eyes were rolled back so that
only the whites were seen, and on his bare legs and arms which were
still red, the veins stood out like cords. He was knocking the back of
his head against the floor, hoarsely uttering some word which he kept
repeating. Rostov listened and made out the word. It was "drink, drink,
a drink!" Rostov glanced round, looking for someone who would put this
man back in his place and bring him water.

"Who looks after the sick here?" he asked the assistant.

Just then a commissariat soldier, a hospital orderly, came in from the
next room, marching stiffly, and drew up in front of Rostov.

"Good day, your honor!" he shouted, rolling his eyes at Rostov and
evidently mistaking him for one of the hospital authorities.

"Get him to his place and give him some water," said Rostov, pointing to
the Cossack.

"Yes, your honor," the soldier replied complacently, and rolling his
eyes more than ever he drew himself up still straighter, but did not
move.

"No, it's impossible to do anything here," thought Rostov, lowering his
eyes, and he was going out, but became aware of an intense look fixed on
him on his right, and he turned. Close to the corner, on an overcoat,
sat an old, unshaven, gray-bearded soldier as thin as a skeleton, with a
stern sallow face and eyes intently fixed on Rostov. The man's neighbor
on one side whispered something to him, pointing at Rostov, who noticed
that the old man wanted to speak to him. He drew nearer and saw that the
old man had only one leg bent under him, the other had been amputated
above the knee. His neighbor on the other side, who lay motionless some
distance from him with his head thrown back, was a young soldier with a
snub nose. His pale waxen face was still freckled and his eyes were
rolled back. Rostov looked at the young soldier and a cold chill ran
down his back.

"Why, this one seems..." he began, turning to the assistant.

"And how we've been begging, your honor," said the old soldier, his jaw
quivering. "He's been dead since morning. After all we're men, not
dogs."

"I'll send someone at once. He shall be taken away--taken away at once,"
said the assistant hurriedly. "Let us go, your honor."

"Yes, yes, let us go," said Rostov hastily, and lowering his eyes and
shrinking, he tried to pass unnoticed between the rows of reproachful
envious eyes that were fixed upon him, and went out of the room.




CHAPTER XVIII

Going along the corridor, the assistant led Rostov to the officers'
wards, consisting of three rooms, the doors of which stood open. There
were beds in these rooms and the sick and wounded officers were lying or
sitting on them. Some were walking about the rooms in hospital dressing
gowns. The first person Rostov met in the officers' ward was a thin
little man with one arm, who was walking about the first room in a
nightcap and hospital dressing gown, with a pipe between his teeth.
Rostov looked at him, trying to remember where he had seen him before.

"See where we've met again!" said the little man. "Tushin, Tushin, don't
you remember, who gave you a lift at Schon Grabern? And I've had a bit
cut off, you see..." he went on with a smile, pointing to the empty
sleeve of his dressing gown. "Looking for Vasili Dmitrich Denisov? My
neighbor," he added, when he heard who Rostov wanted. "Here, here," and
Tushin led him into the next room, from whence came sounds of several
laughing voices.

"How can they laugh, or even live at all here?" thought Rostov, still
aware of that smell of decomposing flesh that had been so strong in the
soldiers' ward, and still seeming to see fixed on him those envious
looks which had followed him out from both sides, and the face of that
young soldier with eyes rolled back.

Denisov lay asleep on his bed with his head under the blanket, though it
was nearly noon.

"Ah, Wostov? How are you, how are you?" he called out, still in the same
voice as in the regiment, but Rostov noticed sadly that under this
habitual ease and animation some new, sinister, hidden feeling showed
itself in the expression of Denisov's face and the intonations of his
voice.

His wound, though a slight one, had not yet healed even now, six weeks
after he had been hit. His face had the same swollen pallor as the faces
of the other hospital patients, but it was not this that struck Rostov.
What struck him was that Denisov did not seem glad to see him, and
smiled at him unnaturally. He did not ask about the regiment, nor about
the general state of affairs, and when Rostov spoke of these matters did
not listen.

Rostov even noticed that Denisov did not like to be reminded of the
regiment, or in general of that other free life which was going on
outside the hospital. He seemed to try to forget that old life and was
only interested in the affair with the commissariat officers. On
Rostov's inquiry as to how the matter stood, he at once produced from
under his pillow a paper he had received from the commission and the
rough draft of his answer to it. He became animated when he began
reading his paper and specially drew Rostov's attention to the stinging
rejoinders he made to his enemies. His hospital companions, who had
gathered round Rostov--a fresh arrival from the world outside--gradually
began to disperse as soon as Denisov began reading his answer. Rostov
noticed by their faces that all those gentlemen had already heard that
story more than once and were tired of it. Only the man who had the next
bed, a stout Uhlan, continued to sit on his bed, gloomily frowning and
smoking a pipe, and little one-armed Tushin still listened, shaking his
head disapprovingly. In the middle of the reading, the Uhlan interrupted
Denisov.

"But what I say is," he said, turning to Rostov, "it would be best
simply to petition the Emperor for pardon. They say great rewards will
now be distributed, and surely a pardon would be granted...."

"Me petition the Empewo'!" exclaimed Denisov, in a voice to which he
tried hard to give the old energy and fire, but which sounded like an
expression of irritable impotence. "What for? If I were a wobber I would
ask mercy, but I'm being court-martialed for bwinging wobbers to book.
Let them twy me, I'm not afwaid of anyone. I've served the Tsar and my
countwy honowably and have not stolen! And am I to be degwaded?...
Listen, I'm w'iting to them stwaight. This is what I say: 'If I had
wobbed the Tweasuwy...'"

"It's certainly well written," said Tushin, "but that's not the point,
Vasili Dmitrich," and he also turned to Rostov. "One has to submit, and
Vasili Dmitrich doesn't want to. You know the auditor told you it was a
bad business."

"Well, let it be bad," said Denisov.

"The auditor wrote out a petition for you," continued Tushin, "and you
ought to sign it and ask this gentleman to take it. No doubt he"
(indicating Rostov) "has connections on the staff. You won't find a
better opportunity."

"Haven't I said I'm not going to gwovel?" Denisov interrupted him, went
on reading his paper.

Rostov had not the courage to persuade Denisov, though he instinctively
felt that the way advised by Tushin and the other officers was the
safest, and though he would have been glad to be of service to Denisov.
He knew his stubborn will and straightforward hasty temper.

When the reading of Denisov's virulent reply, which took more than an
hour, was over, Rostov said nothing, and he spent the rest of the day in
a most dejected state of mind amid Denisov's hospital comrades, who had
gathered round him, telling them what he knew and listening to their
stories. Denisov was moodily silent all the evening.

Late in the evening, when Rostov was about to leave, he asked Denisov
whether he had no commission for him.

"Yes, wait a bit," said Denisov, glancing round at the officers, and
taking his papers from under his pillow he went to the window, where he
had an inkpot, and sat down to write.

"It seems it's no use knocking one's head against a wall!" he said,
coming from the window and giving Rostov a large envelope. In it was the
petition to the Emperor drawn up by the auditor, in which Denisov,
without alluding to the offenses of the commissariat officials, simply
asked for pardon.

"Hand it in. It seems..."

He did not finish, but gave a painfully unnatural smile.




CHAPTER XIX

Having returned to the regiment and told the commander the state of
Denisov's affairs, Rostov rode to Tilsit with the letter to the Emperor.

On the thirteenth of June the French and Russian Emperors arrived in
Tilsit. Boris Drubetskoy had asked the important personage on whom he
was in attendance, to include him in the suite appointed for the stay at
Tilsit.

"I should like to see the great man," he said, alluding to Napoleon,
whom hitherto he, like everyone else, had always called Buonaparte.

"You are speaking of Buonaparte?" asked the general, smiling.

Boris looked at his general inquiringly and immediately saw that he was
being tested.

"I am speaking, Prince, of the Emperor Napoleon," he replied. The
general patted him on the shoulder, with a smile.

"You will go far," he said, and took him to Tilsit with him.

Boris was among the few present at the Niemen on the day the two
Emperors met. He saw the raft, decorated with monograms, saw Napoleon
pass before the French Guards on the farther bank of the river, saw the
pensive face of the Emperor Alexander as he sat in silence in a tavern
on the bank of the Niemen awaiting Napoleon's arrival, saw both Emperors
get into boats, and saw how Napoleon--reaching the raft first--stepped
quickly forward to meet Alexander and held out his hand to him, and how
they both retired into the pavilion. Since he had begun to move in the
highest circles Boris had made it his habit to watch attentively all
that went on around him and to note it down. At the time of the meeting
at Tilsit he asked the names of those who had come with Napoleon and
about the uniforms they wore, and listened attentively to words spoken
by important personages. At the moment the Emperors went into the
pavilion he looked at his watch, and did not forget to look at it again
when Alexander came out. The interview had lasted an hour and fifty-
three minutes. He noted this down that same evening, among other facts
he felt to be of historic importance. As the Emperor's suite was a very
small one, it was a matter of great importance, for a man who valued his
success in the service, to be at Tilsit on the occasion of this
interview between the two Emperors, and having succeeded in this, Boris
felt that henceforth his position was fully assured. He had not only
become known, but people had grown accustomed to him and accepted him.
Twice he had executed commissions to the Emperor himself, so that the
latter knew his face, and all those at court, far from cold-shouldering
him as at first when they considered him a newcomer, would now have been
surprised had he been absent.

Boris lodged with another adjutant, the Polish Count Zhilinski.
Zhilinski, a Pole brought up in Paris, was rich, and passionately fond
of the French, and almost every day of the stay at Tilsit, French
officers of the Guard and from French headquarters were dining and
lunching with him and Boris.

On the evening of the twenty-fourth of June, Count Zhilinski arranged a
supper for his French friends. The guest of honor was an aide-de-camp of
Napoleon's, there were also several French officers of the Guard, and a
page of Napoleon's, a young lad of an old aristocratic French family.
That same day, Rostov, profiting by the darkness to avoid being
recognized in civilian dress, came to Tilsit and went to the lodging
occupied by Boris and Zhilinski.

Rostov, in common with the whole army from which he came, was far from
having experienced the change of feeling toward Napoleon and the French-
-who from being foes had suddenly become friends--that had taken place
at headquarters and in Boris. In the army, Bonaparte and the French were
still regarded with mingled feelings of anger, contempt, and fear. Only
recently, talking with one of Platov's Cossack officers, Rostov had
argued that if Napoleon were taken prisoner he would be treated not as a
sovereign, but as a criminal. Quite lately, happening to meet a wounded
French colonel on the road, Rostov had maintained with heat that peace
was impossible between a legitimate sovereign and the criminal
Bonaparte. Rostov was therefore unpleasantly struck by the presence of
French officers in Boris' lodging, dressed in uniforms he had been
accustomed to see from quite a different point of view from the outposts
of the flank. As soon as he noticed a French officer, who thrust his
head out of the door, that warlike feeling of hostility which he always
experienced at the sight of the enemy suddenly seized him. He stopped at
the threshold and asked in Russian whether Drubetskoy lived there.
Boris, hearing a strange voice in the anteroom, came out to meet him. An
expression of annoyance showed itself for a moment on his face on first
recognizing Rostov.

"Ah, it's you? Very glad, very glad to see you," he said, however,
coming toward him with a smile. But Rostov had noticed his first
impulse.

"I've come at a bad time I think. I should not have come, but I have
business," he said coldly.

"No, I only wonder how you managed to get away from your regiment. Dans
un moment je suis a vous," * he said, answering someone who called him.


* "In a minute I shall be at your disposal."

"I see I'm intruding," Rostov repeated.

The look of annoyance had already disappeared from Boris' face: having
evidently reflected and decided how to act, he very quietly took both
Rostov's hands and led him into the next room. His eyes, looking
serenely and steadily at Rostov, seemed to be veiled by something, as if
screened by blue spectacles of conventionality. So it seemed to Rostov.

"Oh, come now! As if you could come at a wrong time!" said Boris, and he
led him into the room where the supper table was laid and introduced him
to his guests, explaining that he was not a civilian, but an hussar
officer, and an old friend of his.

"Count Zhilinski--le Comte N. N.--le Capitaine S. S.," said he, naming
his guests. Rostov looked frowningly at the Frenchmen, bowed
reluctantly, and remained silent.

Zhilinski evidently did not receive this new Russian person very
willingly into his circle and did not speak to Rostov. Boris did not
appear to notice the constraint the newcomer produced and, with the same
pleasant composure and the same veiled look in his eyes with which he
had met Rostov, tried to enliven the conversation. One of the Frenchmen,
with the politeness characteristic of his countrymen, addressed the
obstinately taciturn Rostov, saying that the latter had probably come to
Tilsit to see the Emperor.

"No, I came on business," replied Rostov, briefly.

Rostov had been out of humor from the moment he noticed the look of
dissatisfaction on Boris' face, and as always happens to those in a bad
humor, it seemed to him that everyone regarded him with aversion and
that he was in everybody's way. He really was in their way, for he alone
took no part in the conversation which again became general. The looks
the visitors cast on him seemed to say: "And what is he sitting here
for?" He rose and went up to Boris.

"Anyhow, I'm in your way," he said in a low tone. "Come and talk over my
business and I'll go away."

"Oh, no, not at all," said Boris. "But if you are tired, come and lie
down in my room and have a rest."

"Yes, really..."

They went into the little room where Boris slept. Rostov, without
sitting down, began at once, irritably (as if Boris were to blame in
some way) telling him about Denisov's affair, asking him whether,
through his general, he could and would intercede with the Emperor on
Denisov's behalf and get Denisov's petition handed in. When he and Boris
were alone, Rostov felt for the first time that he could not look Boris
in the face without a sense of awkwardness. Boris, with one leg crossed
over the other and stroking his left hand with the slender fingers of
his right, listened to Rostov as a general listens to the report of a
subordinate, now looking aside and now gazing straight into Rostov's
eyes with the same veiled look. Each time this happened Rostov felt
uncomfortable and cast down his eyes.

"I have heard of such cases and know that His Majesty is very severe in
such affairs. I think it would be best not to bring it before the
Emperor, but to apply to the commander of the corps.... But in general,
I think..."

"So you don't want to do anything? Well then, say so!" Rostov almost
shouted, not looking Boris in the face.

Boris smiled.

"On the contrary, I will do what I can. Only I thought..."

At that moment Zhilinski's voice was heard calling Boris.

"Well then, go, go, go..." said Rostov, and refusing supper and
remaining alone in the little room, he walked up and down for a long
time, hearing the lighthearted French conversation from the next room.




CHAPTER XX

Rostov had come to Tilsit the day least suitable for a petition on
Denisov's behalf. He could not himself go to the general in attendance
as he was in mufti and had come to Tilsit without permission to do so,
and Boris, even had he wished to, could not have done so on the
following day. On that day, June 27, the preliminaries of peace were
signed. The Emperors exchanged decorations: Alexander received the Cross
of the Legion of Honor and Napoleon the Order of St. Andrew of the First
Degree, and a dinner had been arranged for the evening, given by a
battalion of the French Guards to the Preobrazhensk battalion. The
Emperors were to be present at that banquet.

Rostov felt so ill at ease and uncomfortable with Boris that, when the
latter looked in after supper, he pretended to be asleep, and early next
morning went away, avoiding Boris. In his civilian clothes and a round
hat, he wandered about the town, staring at the French and their
uniforms and at the streets and houses where the Russian and French
Emperors were staying. In a square he saw tables being set up and
preparations made for the dinner; he saw the Russian and French colors
draped from side to side of the streets, with huge monograms A and N. In
the windows of the houses also flags and bunting were displayed.

"Boris doesn't want to help me and I don't want to ask him. That's
settled," thought Nicholas. "All is over between us, but I won't leave
here without having done all I can for Denisov and certainly not without
getting his letter to the Emperor. The Emperor!... He is here!" thought
Rostov, who had unconsciously returned to the house where Alexander
lodged.

Saddled horses were standing before the house and the suite were
assembling, evidently preparing for the Emperor to come out.

"I may see him at any moment," thought Rostov. "If only I were to hand
the letter direct to him and tell him all... could they really arrest me
for my civilian clothes? Surely not! He would understand on whose side
justice lies. He understands everything, knows everything. Who can be
more just, more magnanimous than he? And even if they did arrest me for
being here, what would it matter?" thought he, looking at an officer who
was entering the house the Emperor occupied. "After all, people do go
in.... It's all nonsense! I'll go in and hand the letter to the Emperor
myself so much the worse for Drubetskoy who drives me to it!" And
suddenly with a determination he himself did not expect, Rostov felt for
the letter in his pocket and went straight to the house.

"No, I won't miss my opportunity now, as I did after Austerlitz," he
thought, expecting every moment to meet the monarch, and conscious of
the blood that rushed to his heart at the thought. "I will fall at his
feet and beseech him. He will lift me up, will listen, and will even
thank me. 'I am happy when I can do good, but to remedy injustice is the
greatest happiness,'" Rostov fancied the sovereign saying. And passing
people who looked after him with curiosity, he entered the porch of the
Emperor's house.

A broad staircase led straight up from the entry, and to the right he
saw a closed door. Below, under the staircase, was a door leading to the
lower floor.

"Whom do you want?" someone inquired.

"To hand in a letter, a petition, to His Majesty," said Nicholas, with a
tremor in his voice.

"A petition? This way, to the officer on duty" (he was shown the door
leading downstairs), "only it won't be accepted."

On hearing this indifferent voice, Rostov grew frightened at what he was
doing; the thought of meeting the Emperor at any moment was so
fascinating and consequently so alarming that he was ready to run away,
but the official who had questioned him opened the door, and Rostov
entered.

A short stout man of about thirty, in white breeches and high boots and
a batiste shirt that he had evidently only just put on, standing in that
room, and his valet was buttoning on to the back of his breeches a new
pair of handsome silk-embroidered braces that, for some reason,
attracted Rostov's attention. This man was speaking to someone in the
adjoining room.

"A good figure and in her first bloom," he was saying, but on seeing
Rostov, he stopped short and frowned.

"What is it? A petition?"

"What is it?" asked the person in the other room.

"Another petitioner," answered the man with the braces.

"Tell him to come later. He'll be coming out directly, we must go."

"Later... later! Tomorrow. It's too late..."

Rostov turned and was about to go, but the man in the braces stopped
him.

"Whom have you come from? Who are you?"

"I come from Major Denisov," answered Rostov.

"Are you an officer?"

"Lieutenant Count Rostov."

"What audacity! Hand it in through your commander. And go along with
you... go," and he continued to put on the uniform the valet handed him.

Rostov went back into the hall and noticed that in the porch there were
many officers and generals in full parade uniform, whom he had to pass.

Cursing his temerity, his heart sinking at the thought of finding
himself at any moment face to face with the Emperor and being put to
shame and arrested in his presence, fully alive now to the impropriety
of his conduct and repenting of it, Rostov, with downcast eyes, was
making his way out of the house through the brilliant suite when a
familiar voice called him and a hand detained him.

"What are you doing here, sir, in civilian dress?" asked a deep voice.

It was a cavalry general who had obtained the Emperor's special favor
during this campaign, and who had formerly commanded the division in
which Rostov was serving.

Rostov, in dismay, began justifying himself, but seeing the kindly,
jocular face of the general, he took him aside and in an excited voice
told him the whole affair, asking him to intercede for Denisov, whom the
general knew. Having heard Rostov to the end, the general shook his head
gravely.

"I'm sorry, sorry for that fine fellow. Give me the letter."

Hardly had Rostov handed him the letter and finished explaining
Denisov's case, when hasty steps and the jingling of spurs were heard on
the stairs, and the general, leaving him, went to the porch. The
gentlemen of the Emperor's suite ran down the stairs and went to their
horses. Hayne, the same groom who had been at Austerlitz, led up the
Emperor's horse, and the faint creak of a footstep Rostov knew at once
was heard on the stairs. Forgetting the danger of being recognized,
Rostov went close to the porch, together with some inquisitive
civilians, and again, after two years, saw those features he adored:
that same face and same look and step, and the same union of majesty and
mildness.... And the feeling of enthusiasm and love for his sovereign
rose again in Rostov's soul in all its old force. In the uniform of the
Preobrazhensk regiment--white chamois-leather breeches and high boots--
and wearing a star Rostov did not know (it was that of the Legion
d'honneur), the monarch came out into the porch, putting on his gloves
and carrying his hat under his arm. He stopped and looked about him,
brightening everything around by his glance. He spoke a few words to
some of the generals, and, recognizing the former commander of Rostov's
division, smiled and beckoned to him.

All the suite drew back and Rostov saw the general talking for some time
to the Emperor.

The Emperor said a few words to him and took a step toward his horse.
Again the crowd of members of the suite and street gazers (among whom
was Rostov) moved nearer to the Emperor. Stopping beside his horse, with
his hand on the saddle, the Emperor turned to the cavalry general and
said in a loud voice, evidently wishing to be heard by all:

"I cannot do it, General. I cannot, because the law is stronger than I,"
and he raised his foot to the stirrup.

The general bowed his head respectfully, and the monarch mounted and
rode down the street at a gallop. Beside himself with enthusiasm, Rostov
ran after him with the crowd.




CHAPTER XXI

The Emperor rode to the square where, facing one another, a battalion of
the Preobrazhensk regiment stood on the right and a battalion of the
French Guards in their bearskin caps on the left.

As the Tsar rode up to one flank of the battalions, which presented
arms, another group of horsemen galloped up to the opposite flank, and
at the head of them Rostov recognized Napoleon. It could be no one else.
He came at a gallop, wearing a small hat, a blue uniform open over a
white vest, and the St. Andrew ribbon over his shoulder. He was riding a
very fine thoroughbred gray Arab horse with a crimson gold-embroidered
saddlecloth. On approaching Alexander he raised his hat, and as he did
so, Rostov, with his cavalryman's eye, could not help noticing that
Napoleon did not sit well or firmly in the saddle. The battalions
shouted "Hurrah!" and "Vive l'Empereur!" Napoleon said something to
Alexander, and both Emperors dismounted and took each other's hands.
Napoleon's face wore an unpleasant and artificial smile. Alexander was
saying something affable to him.

In spite of the trampling of the French gendarmes' horses, which were
pushing back the crowd, Rostov kept his eyes on every movement of
Alexander and Bonaparte. It struck him as a surprise that Alexander
treated Bonaparte as an equal and that the latter was quite at ease with
the Tsar, as if such relations with an Emperor were an everyday matter
to him.

Alexander and Napoleon, with the long train of their suites, approached
the right flank of the Preobrazhensk battalion and came straight up to
the crowd standing there. The crowd unexpectedly found itself so close
to the Emperors that Rostov, standing in the front row, was afraid he
might be recognized.

"Sire, I ask your permission to present the Legion of Honor to the
bravest of your soldiers," said a sharp, precise voice, articulating
every letter.

This was said by the undersized Napoleon, looking up straight into
Alexander's eyes. Alexander listened attentively to what was said to him
and, bending his head, smiled pleasantly.

"To him who has borne himself most bravely in this last war," added
Napoleon, accentuating each syllable, as with a composure and assurance
exasperating to Rostov, he ran his eyes over the Russian ranks drawn up
before him, who all presented arms with their eyes fixed on their
Emperor.

"Will Your Majesty allow me to consult the colonel?" said Alexander and
took a few hasty steps toward Prince Kozlovski, the commander of the
battalion.

Bonaparte meanwhile began taking the glove off his small white hand,
tore it in doing so, and threw it away. An aide-de-camp behind him
rushed forward and picked it up.

"To whom shall it be given?" the Emperor Alexander asked Koslovski, in
Russian in a low voice.

"To whomever Your Majesty commands."

The Emperor knit his brows with dissatisfaction and, glancing back,
remarked:

"But we must give him an answer."

Kozlovski scanned the ranks resolutely and included Rostov in his
scrutiny.

"Can it be me?" thought Rostov.

"Lazarev!" the colonel called, with a frown, and Lazarev, the first
soldier in the rank, stepped briskly forward.

"Where are you off to? Stop here!" voices whispered to Lazarev who did
not know where to go. Lazarev stopped, casting a sidelong look at his
colonel in alarm. His face twitched, as often happens to soldiers called
before the ranks.

Napoleon slightly turned his head, and put his plump little hand out
behind him as if to take something. The members of his suite, guessing
at once what he wanted, moved about and whispered as they passed
something from one to another, and a page--the same one Rostov had seen
the previous evening at Boris'--ran forward and, bowing respectfully
over the outstretched hand and not keeping it waiting a moment, laid in
it an Order on a red ribbon. Napoleon, without looking, pressed two
fingers together and the badge was between them. Then he approached
Lazarev (who rolled his eyes and persistently gazed at his own monarch),
looked round at the Emperor Alexander to imply that what he was now
doing was done for the sake of his ally, and the small white hand
holding the Order touched one of Lazarev's buttons. It was as if
Napoleon knew that it was only necessary for his hand to deign to touch
that soldier's breast for the soldier to be forever happy, rewarded, and
distinguished from everyone else in the world. Napoleon merely laid the
cross on Lazarev's breast and, dropping his hand, turned toward
Alexander as though sure that the cross would adhere there. And it
really did.

Officious hands, Russian and French, immediately seized the cross and
fastened it to the uniform. Lazarev glanced morosely at the little man
with white hands who was doing something to him and, still standing
motionless presenting arms, looked again straight into Alexander's eyes,
as if asking whether he should stand there, or go away, or do something
else. But receiving no orders, he remained for some time in that rigid
position.

The Emperors remounted and rode away. The Preobrazhensk battalion,
breaking rank, mingled with the French Guards and sat down at the tables
prepared for them.

Lazarev sat in the place of honor. Russian and French officers embraced
him, congratulated him, and pressed his hands. Crowds of officers and
civilians drew near merely to see him. A rumble of Russian and French
voices and laughter filled the air round the tables in the square. Two
officers with flushed faces, looking cheerful and happy, passed by
Rostov.

"What d'you think of the treat? All on silver plate," one of them was
saying. "Have you seen Lazarev?"

"I have."

"Tomorrow, I hear, the Preobrazhenskis will give them a dinner."

"Yes, but what luck for Lazarev! Twelve hundred francs' pension for
life."

"Here's a cap, lads!" shouted a Preobrazhensk soldier, donning a shaggy
French cap.

"It's a fine thing! First-rate!"

"Have you heard the password?" asked one Guards' officer of another.
"The day before yesterday it was 'Napoleon, France, bravoure';
yesterday, 'Alexandre, Russie, grandeur.' One day our Emperor gives it
and next day Napoleon. Tomorrow our Emperor will send a St. George's
Cross to the bravest of the French Guards. It has to be done. He must
respond in kind."

Boris, too, with his friend Zhilinski, came to see the Preobrazhensk
banquet. On his way back, he noticed Rostov standing by the corner of a
house.

"Rostov! How d'you do? We missed one another," he said, and could not
refrain from asking what was the matter, so strangely dismal and
troubled was Rostov's face.

"Nothing, nothing," replied Rostov.

"You'll call round?"

"Yes, I will."

Rostov stood at that corner for a long time, watching the feast from a
distance. In his mind, a painful process was going on which he could not
bring to a conclusion. Terrible doubts rose in his soul. Now he
remembered Denisov with his changed expression, his submission, and the
whole hospital, with arms and legs torn off and its dirt and disease. So
vividly did he recall that hospital stench of dead flesh that he looked
round to see where the smell came from. Next he thought of that self-
satisfied Bonaparte, with his small white hand, who was now an Emperor,
liked and respected by Alexander. Then why those severed arms and legs
and those dead men?... Then again he thought of Lazarev rewarded and
Denisov punished and unpardoned. He caught himself harboring such
strange thoughts that he was frightened.

The smell of the food the Preobrazhenskis were eating and a sense of
hunger recalled him from these reflections; he had to get something to
eat before going away. He went to a hotel he had noticed that morning.
There he found so many people, among them officers who, like himself,
had come in civilian clothes, that he had difficulty in getting a
dinner. Two officers of his own division joined him. The conversation
naturally turned on the peace. The officers, his comrades, like most of
the army, were dissatisfied with the peace concluded after the battle of
Friedland. They said that had we held out a little longer Napoleon would
have been done for, as his troops had neither provisions nor ammunition.
Nicholas ate and drank (chiefly the latter) in silence. He finished a
couple of bottles of wine by himself. The process in his mind went on
tormenting him without reaching a conclusion. He feared to give way to
his thoughts, yet could not get rid of them. Suddenly, on one of the
officers' saying that it was humiliating to look at the French, Rostov
began shouting with uncalled-for wrath, and therefore much to the
surprise of the officers:

"How can you judge what's best?" he cried, the blood suddenly rushing to
his face. "How can you judge the Emperor's actions? What right have we
to argue? We cannot comprehend either the Emperor's aims or his
actions!"

"But I never said a word about the Emperor!" said the officer,
justifying himself, and unable to understand Rostov's outburst, except
on the supposition that he was drunk.

But Rostov did not listen to him.

"We are not diplomatic officials, we are soldiers and nothing more," he
went on. "If we are ordered to die, we must die. If we're punished, it
means that we have deserved it, it's not for us to judge. If the Emperor
pleases to recognize Bonaparte as Emperor and to conclude an alliance
with him, it means that that is the right thing to do. If once we begin
judging and arguing about everything, nothing sacred will be left! That
way we shall be saying there is no God--nothing!" shouted Nicholas,
banging the table--very little to the point as it seemed to his
listeners, but quite relevantly to the course of his own thoughts.

"Our business is to do our duty, to fight and not to think! That's
all...." said he.

"And to drink," said one of the officers, not wishing to quarrel.

"Yes, and to drink," assented Nicholas. "Hullo there! Another bottle!"
he shouted.

In 1808 the Emperor Alexander went to Erfurt for a fresh interview with
the Emperor Napoleon, and in the upper circles of Petersburg there was
much talk of the grandeur of this important meeting.




CHAPTER XXII

In 1809 the intimacy between "the world's two arbiters," as Napoleon and
Alexander were called, was such that when Napoleon declared war on
Austria a Russian corps crossed the frontier to co-operate with our old
enemy Bonaparte against our old ally the Emperor of Austria, and in
court circles the possibility of marriage between Napoleon and one of
Alexander's sisters was spoken of. But besides considerations of foreign
policy, the attention of Russian society was at that time keenly
directed on the internal changes that were being undertaken in all the
departments of government.

Life meanwhile--real life, with its essential interests of health and
sickness, toil and rest, and its intellectual interests in thought,
science, poetry, music, love, friendship, hatred, and passions--went on
as usual, independently of and apart from political friendship or enmity
with Napoleon Bonaparte and from all the schemes of reconstruction.

BOOK SIX: 1808 - 10




CHAPTER I

Prince Andrew had spent two years continuously in the country.

All the plans Pierre had attempted on his estates--and constantly
changing from one thing to another had never accomplished--were carried
out by Prince Andrew without display and without perceptible difficulty.

He had in the highest degree a practical tenacity which Pierre lacked,
and without fuss or strain on his part this set things going.

On one of his estates the three hundred serfs were liberated and became
free agricultural laborers--this being one of the first examples of the
kind in Russia. On other estates the serfs' compulsory labor was
commuted for a quitrent. A trained midwife was engaged for Bogucharovo
at his expense, and a priest was paid to teach reading and writing to
the children of the peasants and household serfs.

Prince Andrew spent half his time at Bald Hills with his father and his
son, who was still in the care of nurses. The other half he spent in
"Bogucharovo Cloister," as his father called Prince Andrew's estate.
Despite the indifference to the affairs of the world he had expressed to
Pierre, he diligently followed all that went on, received many books,
and to his surprise noticed that when he or his father had visitors from
Petersburg, the very vortex of life, these people lagged behind himself-
-who never left the country--in knowledge of what was happening in home
and foreign affairs.

Besides being occupied with his estates and reading a great variety of
books, Prince Andrew was at this time busy with a critical survey of our
last two unfortunate campaigns, and with drawing up a proposal for a
reform of the army rules and regulations.

In the spring of 1809 he went to visit the Ryazan estates which had been
inherited by his son, whose guardian he was.

Warmed by the spring sunshine he sat in the caleche looking at the new
grass, the first leaves on the birches, and the first puffs of white
spring clouds floating across the clear blue sky. He was not thinking of
anything, but looked absent-mindedly and cheerfully from side to side.

They crossed the ferry where he had talked with Pierre the year before.
They went through the muddy village, past threshing floors and green
fields of winter rye, downhill where snow still lodged near the bridge,
uphill where the clay had been liquefied by the rain, past strips of
stubble land and bushes touched with green here and there, and into a
birch forest growing on both sides of the road. In the forest it was
almost hot, no wind could be felt. The birches with their sticky green
leaves were motionless, and lilac-colored flowers and the first blades
of green grass were pushing up and lifting last year's leaves. The
coarse evergreen color of the small fir trees scattered here and there
among the birches was an unpleasant reminder of winter. On entering the
forest the horses began to snort and sweated visibly.

Peter the footman made some remark to the coachman; the latter assented.
But apparently the coachman's sympathy was not enough for Peter, and he
turned on the box toward his master.

"How pleasant it is, your excellency!" he said with a respectful smile.

"What?"

"It's pleasant, your excellency!"


"What is he talking about?" thought Prince Andrew. "Oh, the spring, I
suppose," he thought as he turned round. "Yes, really everything is
green already.... How early! The birches and cherry and alders too are
coming out.... But the oaks show no sign yet. Ah, here is one oak!"

At the edge of the road stood an oak. Probably ten times the age of the
birches that formed the forest, it was ten times as thick and twice as
tall as they. It was an enormous tree, its girth twice as great as a man
could embrace, and evidently long ago some of its branches had been
broken off and its bark scarred. With its huge ungainly limbs sprawling
unsymmetrically, and its gnarled hands and fingers, it stood an aged,
stern, and scornful monster among the smiling birch trees. Only the
dead-looking evergreen firs dotted about in the forest, and this oak,
refused to yield to the charm of spring or notice either the spring or
the sunshine.

"Spring, love, happiness!" this oak seemed to say. "Are you not weary of
that stupid, meaningless, constantly repeated fraud? Always the same and
always a fraud? There is no spring, no sun, no happiness! Look at those
cramped dead firs, ever the same, and at me too, sticking out my broken
and barked fingers just where they have grown, whether from my back or
my sides: as they have grown so I stand, and I do not believe in your
hopes and your lies."

As he passed through the forest Prince Andrew turned several times to
look at that oak, as if expecting something from it. Under the oak, too,
were flowers and grass, but it stood among them scowling, rigid,
misshapen, and grim as ever.

"Yes, the oak is right, a thousand times right," thought Prince Andrew.
"Let others--the young--yield afresh to that fraud, but we know life,
our life is finished!"

A whole sequence of new thoughts, hopeless but mournfully pleasant, rose
in his soul in connection with that tree. During this journey he, as it
were, considered his life afresh and arrived at his old conclusion,
restful in its hopelessness: that it was not for him to begin anything
anew--but that he must live out his life, content to do no harm, and not
disturbing himself or desiring anything.




CHAPTER II

Prince Andrew had to see the Marshal of the Nobility for the district in
connection with the affairs of the Ryazan estate of which he was
trustee. This Marshal was Count Ilya Rostov, and in the middle of May
Prince Andrew went to visit him.

It was now hot spring weather. The whole forest was already clothed in
green. It was dusty and so hot that on passing near water one longed to
bathe.

Prince Andrew, depressed and preoccupied with the business about which
he had to speak to the Marshal, was driving up the avenue in the grounds
of the Rostovs' house at Otradnoe. He heard merry girlish cries behind
some trees on the right and saw a group of girls running to cross the
path of his caleche. Ahead of the rest and nearer to him ran a dark-
haired, remarkably slim, pretty girl in a yellow chintz dress, with a
white handkerchief on her head from under which loose locks of hair
escaped. The girl was shouting something but, seeing that he was a
stranger, ran back laughing without looking at him.

Suddenly, he did not know why, he felt a pang. The day was so beautiful,
the sun so bright, everything around so gay, but that slim pretty girl
did not know, or wish to know, of his existence and was contented and
cheerful in her own separate--probably foolish--but bright and happy
life. "What is she so glad about? What is she thinking of? Not of the
military regulations or of the arrangement of the Ryazan serfs'
quitrents. Of what is she thinking? Why is she so happy?" Prince Andrew
asked himself with instinctive curiosity.

In 1809 Count Ilya Rostov was living at Otradnoe just as he had done in
former years, that is, entertaining almost the whole province with
hunts, theatricals, dinners, and music. He was glad to see Prince
Andrew, as he was to see any new visitor, and insisted on his staying
the night.

During the dull day, in the course of which he was entertained by his
elderly hosts and by the more important of the visitors (the old count's
house was crowded on account of an approaching name day), Prince Andrew
repeatedly glanced at Natasha, gay and laughing among the younger
members of the company, and asked himself each time, "What is she
thinking about? Why is she so glad?"

That night, alone in new surroundings, he was long unable to sleep. He
read awhile and then put out his candle, but relit it. It was hot in the
room, the inside shutters of which were closed. He was cross with the
stupid old man (as he called Rostov), who had made him stay by assuring
him that some necessary documents had not yet arrived from town, and he
was vexed with himself for having stayed.

He got up and went to the window to open it. As soon as he opened the
shutters the moonlight, as if it had long been watching for this, burst
into the room. He opened the casement. The night was fresh, bright, and
very still. Just before the window was a row of pollard trees, looking
black on one side and with a silvery light on the other. Beneath the
trees grew some kind of lush, wet, bushy vegetation with silver-lit
leaves and stems here and there. Farther back beyond the dark trees a
roof glittered with dew, to the right was a leafy tree with brilliantly
white trunk and branches, and above it shone the moon, nearly at its
full, in a pale, almost starless, spring sky. Prince Andrew leaned his
elbows on the window ledge and his eyes rested on that sky.

His room was on the first floor. Those in the rooms above were also
awake. He heard female voices overhead.

"Just once more," said a girlish voice above him which Prince Andrew
recognized at once.

"But when are you coming to bed?" replied another voice.

"I won't, I can't sleep, what's the use? Come now for the last time."


Two girlish voices sang a musical passage--the end of some song.

"Oh, how lovely! Now go to sleep, and there's an end of it."

"You go to sleep, but I can't," said the first voice, coming nearer to
the window. She was evidently leaning right out, for the rustle of her
dress and even her breathing could be heard. Everything was stone-still,
like the moon and its light and the shadows. Prince Andrew, too, dared
not stir, for fear of betraying his unintentional presence.

"Sonya! Sonya!" he again heard the first speaker. "Oh, how can you
sleep? Only look how glorious it is! Ah, how glorious! Do wake up,
Sonya!" she said almost with tears in her voice. "There never, never was
such a lovely night before!"

Sonya made some reluctant reply.

"Do just come and see what a moon!... Oh, how lovely! Come here....
Darling, sweetheart, come here! There, you see? I feel like sitting down
on my heels, putting my arms round my knees like this, straining tight,
as tight as possible, and flying away! Like this...."

"Take care, you'll fall out."

He heard the sound of a scuffle and Sonya's disapproving voice: "It's
past one o'clock."

"Oh, you only spoil things for me. All right, go, go!"

Again all was silent, but Prince Andrew knew she was still sitting
there. From time to time he heard a soft rustle and at times a sigh.

"O God, O God! What does it mean?" she suddenly exclaimed. "To bed then,
if it must be!" and she slammed the casement.

"For her I might as well not exist!" thought Prince Andrew while he
listened to her voice, for some reason expecting yet fearing that she
might say something about him. "There she is again! As if it were on
purpose," thought he.

In his soul there suddenly arose such an unexpected turmoil of youthful
thoughts and hopes, contrary to the whole tenor of his life, that unable
to explain his condition to himself he lay down and fell asleep at once.




CHAPTER III

Next morning, having taken leave of no one but the count, and not
waiting for the ladies to appear, Prince Andrew set off for home.

It was already the beginning of June when on his return journey he drove
into the birch forest where the gnarled old oak had made so strange and
memorable an impression on him. In the forest the harness bells sounded
yet more muffled than they had done six weeks before, for now all was
thick, shady, and dense, and the young firs dotted about in the forest
did not jar on the general beauty but, lending themselves to the mood
around, were delicately green with fluffy young shoots.

The whole day had been hot. Somewhere a storm was gathering, but only a
small cloud had scattered some raindrops lightly, sprinkling the road
and the sappy leaves. The left side of the forest was dark in the shade,
the right side glittered in the sunlight, wet and shiny and scarcely
swayed by the breeze. Everything was in blossom, the nightingales
trilled, and their voices reverberated now near, now far away.

"Yes, here in this forest was that oak with which I agreed," thought
Prince Andrew. "But where is it?" he again wondered, gazing at the left
side of the road, and without recognizing it he looked with admiration
at the very oak he sought. The old oak, quite transfigured, spreading
out a canopy of sappy dark-green foliage, stood rapt and slightly
trembling in the rays of the evening sun. Neither gnarled fingers nor
old scars nor old doubts and sorrows were any of them in evidence now.
Through the hard century-old bark, even where there were no twigs,
leaves had sprouted such as one could hardly believe the old veteran
could have produced.

"Yes, it is the same oak," thought Prince Andrew, and all at once he was
seized by an unreasoning springtime feeling of joy and renewal. All the
best moments of his life suddenly rose to his memory. Austerlitz with
the lofty heavens, his wife's dead reproachful face, Pierre at the
ferry, that girl thrilled by the beauty of the night, and that night
itself and the moon, and.... all this rushed suddenly to his mind.

"No, life is not over at thirty-one!" Prince Andrew suddenly decided
finally and decisively. "It is not enough for me to know what I have in
me--everyone must know it: Pierre, and that young girl who wanted to fly
away into the sky, everyone must know me, so that my life may not be
lived for myself alone while others live so apart from it, but so that
it may be reflected in them all, and they and I may live in harmony!"

On reaching home Prince Andrew decided to go to Petersburg that autumn
and found all sorts of reasons for this decision. A whole series of
sensible and logical considerations showing it to be essential for him
to go to Petersburg, and even to re-enter the service, kept springing up
in his mind. He could not now understand how he could ever even have
doubted the necessity of taking an active share in life, just as a month
before he had not understood how the idea of leaving the quiet country
could ever enter his head. It now seemed clear to him that all his
experience of life must be senselessly wasted unless he applied it to
some kind of work and again played an active part in life. He did not
even remember how formerly, on the strength of similar wretched logical
arguments, it had seemed obvious that he would be degrading himself if
he now, after the lessons he had had in life, allowed himself to believe
in the possibility of being useful and in the possibility of happiness
or love. Now reason suggested quite the opposite. After that journey to
Ryazan he found the country dull; his former pursuits no longer
interested him, and often when sitting alone in his study he got up,
went to the mirror, and gazed a long time at his own face. Then he would
turn away to the portrait of his dead Lise, who with hair curled a la
grecque looked tenderly and gaily at him out of the gilt frame. She did
not now say those former terrible words to him, but looked simply,
merrily, and inquisitively at him. And Prince Andrew, crossing his arms
behind him, long paced the room, now frowning, now smiling, as he
reflected on those irrational, inexpressible thoughts, secret as a
crime, which altered his whole life and were connected with Pierre, with
fame, with the girl at the window, the oak, and woman's beauty and love.
And if anyone came into his room at such moments he was particularly
cold, stern, and above all unpleasantly logical.

"My dear," Princess Mary entering at such a moment would say, "little
Nicholas can't go out today, it's very cold."

"If it were hot," Prince Andrew would reply at such times very dryly to
his sister, "he could go out in his smock, but as it is cold he must
wear warm clothes, which were designed for that purpose. That is what
follows from the fact that it is cold; and not that a child who needs
fresh air should remain at home," he would add with extreme logic, as if
punishing someone for those secret illogical emotions that stirred
within him.

At such moments Princess Mary would think how intellectual work dries
men up.




CHAPTER IV

Prince Andrew arrived in Petersburg in August, 1809. It was the time
when the youthful Speranski was at the zenith of his fame and his
reforms were being pushed forward with the greatest energy. That same
August the Emperor was thrown from his caleche, injured his leg, and
remained three weeks at Peterhof, receiving Speranski every day and no
one else. At that time the two famous decrees were being prepared that
so agitated society--abolishing court ranks and introducing examinations
to qualify for the grades of Collegiate Assessor and State Councilor--
and not merely these but a whole state constitution, intended to change
the existing order of government in Russia: legal, administrative, and
financial, from the Council of State down to the district tribunals. Now
those vague liberal dreams with which the Emperor Alexander had ascended
the throne, and which he had tried to put into effect with the aid of
his associates, Czartoryski, Novosiltsev, Kochubey, and Strogonov--whom
he himself in jest had called his Comite de salut public--were taking
shape and being realized.

Now all these men were replaced by Speranski on the civil side, and
Arakcheev on the military. Soon after his arrival Prince Andrew, as a
gentleman of the chamber, presented himself at court and at a levee. The
Emperor, though he met him twice, did not favor him with a single word.
It had always seemed to Prince Andrew before that he was antipathetic to
the Emperor and that the latter disliked his face and personality
generally, and in the cold, repellent glance the Emperor gave him, he
now found further confirmation of this surmise. The courtiers explained
the Emperor's neglect of him by His Majesty's displeasure at Bolkonski's
not having served since 1805.

"I know myself that one cannot help one's sympathies and antipathies,"
thought Prince Andrew, "so it will not do to present my proposal for the
reform of the army regulations to the Emperor personally, but the
project will speak for itself."

He mentioned what he had written to an old field marshal, a friend of
his father's. The field marshal made an appointment to see him, received
him graciously, and promised to inform the Emperor. A few days later
Prince Andrew received notice that he was to go to see the Minister of
War, Count Arakcheev.

On the appointed day Prince Andrew entered Count Arakcheev's waiting
room at nine in the morning.

He did not know Arakcheev personally, had never seen him, and all he had
heard of him inspired him with but little respect for the man.

"He is Minister of War, a man trusted by the Emperor, and I need not
concern myself about his personal qualities: he has been commissioned to
consider my project, so he alone can get it adopted," thought Prince
Andrew as he waited among a number of important and unimportant people
in Count Arakcheev's waiting room.

During his service, chiefly as an adjutant, Prince Andrew had seen the
anterooms of many important men, and the different types of such rooms
were well known to him. Count Arakcheev's anteroom had quite a special
character. The faces of the unimportant people awaiting their turn for
an audience showed embarrassment and servility; the faces of those of
higher rank expressed a common feeling of awkwardness, covered by a mask
of unconcern and ridicule of themselves, their situation, and the person
for whom they were waiting. Some walked thoughtfully up and down, others
whispered and laughed. Prince Andrew heard the nickname "Sila
Andreevich" and the words, "Uncle will give it to us hot," in reference
to Count Arakcheev. One general (an important personage), evidently
feeling offended at having to wait so long, sat crossing and uncrossing
his legs and smiling contemptuously to himself.

But the moment the door opened one feeling alone appeared on all faces--
that of fear. Prince Andrew for the second time asked the adjutant on
duty to take in his name, but received an ironical look and was told
that his turn would come in due course. After some others had been shown
in and out of the minister's room by the adjutant on duty, an officer
who struck Prince Andrew by his humiliated and frightened air was
admitted at that terrible door. This officer's audience lasted a long
time. Then suddenly the grating sound of a harsh voice was heard from
the other side of the door, and the officer--with pale face and
trembling lips--came out and passed through the waiting room, clutching
his head.

After this Prince Andrew was conducted to the door and the officer on
duty said in a whisper, "To the right, at the window."

Prince Andrew entered a plain tidy room and saw at the table a man of
forty with a long waist, a long closely cropped head, deep wrinkles,
scowling brows above dull greenish-hazel eyes and an overhanging red
nose. Arakcheev turned his head toward him without looking at him.

"What is your petition?" asked Arakcheev.

"I am not petitioning, your excellency," returned Prince Andrew quietly.

Arakcheev's eyes turned toward him.

"Sit down," said he. "Prince Bolkonski?"

"I am not petitioning about anything. His Majesty the Emperor has
deigned to send your excellency a project submitted by me..."

"You see, my dear sir, I have read your project," interrupted Arakcheev,
uttering only the first words amiably and then--again without looking at
Prince Andrew--relapsing gradually into a tone of grumbling contempt.
"You are proposing new military laws? There are many laws but no one to
carry out the old ones. Nowadays everybody designs laws, it is easier
writing than doing."

"I came at His Majesty the Emperor's wish to learn from your excellency
how you propose to deal with the memorandum I have presented," said
Prince Andrew politely.

"I have endorsed a resolution on your memorandum and sent it to the
committee. I do not approve of it," said Arakcheev, rising and taking a
paper from his writing table. "Here!" and he handed it to Prince Andrew.

Across the paper was scrawled in pencil, without capital letters,
misspelled, and without punctuation: "Unsoundly constructed because
resembles an imitation of the French military code and from the Articles
of War needlessly deviating."

"To what committee has the memorandum been referred?" inquired Prince
Andrew.

"To the Committee on Army Regulations, and I have recommended that your
honor should be appointed a member, but without a salary."

Prince Andrew smiled.

"I don't want one."

"A member without salary," repeated Arakcheev. "I have the honor... Eh!
Call the next one! Who else is there?" he shouted, bowing to Prince
Andrew.




CHAPTER V

While waiting for the announcement of his appointment to the committee
Prince Andrew looked up his former acquaintances, particularly those he
knew to be in power and whose aid he might need. In Petersburg he now
experienced the same feeling he had had on the eve of a battle, when
troubled by anxious curiosity and irresistibly attracted to the ruling
circles where the future, on which the fate of millions depended, was
being shaped. From the irritation of the older men, the curiosity of the
uninitiated, the reserve of the initiated, the hurry and preoccupation
of everyone, and the innumerable committees and commissions of whose
existence he learned every day, he felt that now, in 1809, here in
Petersburg a vast civil conflict was in preparation, the commander in
chief of which was a mysterious person he did not know, but who was
supposed to be a man of genius--Speranski. And this movement of
reconstruction of which Prince Andrew had a vague idea, and Speranski
its chief promoter, began to interest him so keenly that the question of
the army regulations quickly receded to a secondary place in his
consciousness.

Prince Andrew was most favorably placed to secure good reception in the
highest and most diverse Petersburg circles of the day. The reforming
party cordially welcomed and courted him, in the first place because he
was reputed to be clever and very well read, and secondly because by
liberating his serfs he had obtained the reputation of being a liberal.
The party of the old and dissatisfied, who censured the innovations,
turned to him expecting his sympathy in their disapproval of the
reforms, simply because he was the son of his father. The feminine
society world welcomed him gladly, because he was rich, distinguished, a
good match, and almost a newcomer, with a halo of romance on account of
his supposed death and the tragic loss of his wife. Besides this the
general opinion of all who had known him previously was that he had
greatly improved during these last five years, having softened and grown
more manly, lost his former affectation, pride, and contemptuous irony,
and acquired the serenity that comes with years. People talked about
him, were interested in him, and wanted to meet him.

The day after his interview with Count Arakcheev, Prince Andrew spent
the evening at Count Kochubey's. He told the count of his interview with
Sila Andreevich (Kochubey spoke of Arakcheev by that nickname with the
same vague irony Prince Andrew had noticed in the Minister of War's
anteroom).

"Mon cher, even in this case you can't do without Michael Mikhaylovich
Speranski. He manages everything. I'll speak to him. He has promised to
come this evening."

"What has Speranski to do with the army regulations?" asked Prince
Andrew.

Kochubey shook his head smilingly, as if surprised at Bolkonski's
simplicity.

"We were talking to him about you a few days ago," Kochubey continued,
"and about your freed plowmen."

"Oh, is it you, Prince, who have freed your serfs?" said an old man of
Catherine's day, turning contemptuously toward Bolkonski.

"It was a small estate that brought in no profit," replied Prince
Andrew, trying to extenuate his action so as not to irritate the old man
uselessly.

"Afraid of being late..." said the old man, looking at Kochubey.

"There's one thing I don't understand," he continued. "Who will plow the
land if they are set free? It is easy to write laws, but difficult to
rule.... Just the same as now--I ask you, Count--who will be heads of
the departments when everybody has to pass examinations?"

"Those who pass the examinations, I suppose," replied Kochubey, crossing
his legs and glancing round.

"Well, I have Pryanichnikov serving under me, a splendid man, a
priceless man, but he's sixty. Is he to go up for examination?"

"Yes, that's a difficulty, as education is not at all general, but..."

Count Kochubey did not finish. He rose, took Prince Andrew by the arm,
and went to meet a tall, bald, fair man of about forty with a large open
forehead and a long face of unusual and peculiar whiteness, who was just
entering. The newcomer wore a blue swallow-tail coat with a cross
suspended from his neck and a star on his left breast. It was Speranski.
Prince Andrew recognized him at once, and felt a throb within him, as
happens at critical moments of life. Whether it was from respect, envy,
or anticipation, he did not know. Speranski's whole figure was of a
peculiar type that made him easily recognizable. In the society in which
Prince Andrew lived he had never seen anyone who together with awkward
and clumsy gestures possessed such calmness and self-assurance; he had
never seen so resolute yet gentle an expression as that in those half-
closed, rather humid eyes, or so firm a smile that expressed nothing;
nor had he heard such a refined, smooth, soft voice; above all he had
never seen such delicate whiteness of face or hands--hands which were
broad, but very plump, soft, and white. Such whiteness and softness
Prince Andrew had only seen on the faces of soldiers who had been long
in hospital. This was Speranski, Secretary of State, reporter to the
Emperor and his companion at Erfurt, where he had more than once met and
talked with Napoleon.

Speranski did not shift his eyes from one face to another as people
involuntarily do on entering a large company and was in no hurry to
speak. He spoke slowly, with assurance that he would be listened to, and
he looked only at the person with whom he was conversing.

Prince Andrew followed Speranski's every word and movement with
particular attention. As happens to some people, especially to men who
judge those near to them severely, he always on meeting anyone new--
especially anyone whom, like Speranski, he knew by reputation--expected
to discover in him the perfection of human qualities.

Speranski told Kochubey he was sorry he had been unable to come sooner
as he had been detained at the palace. He did not say that the Emperor
had kept him, and Prince Andrew noticed this affectation of modesty.
When Kochubey introduced Prince Andrew, Speranski slowly turned his eyes
to Bolkonski with his customary smile and looked at him in silence.

"I am very glad to make your acquaintance. I had heard of you, as
everyone has," he said after a pause.

Kochubey said a few words about the reception Arakcheev had given
Bolkonski. Speranski smiled more markedly.

"The chairman of the Committee on Army Regulations is my good friend
Monsieur Magnitski," he said, fully articulating every word and
syllable, "and if you like I can put you in touch with him." He paused
at the full stop. "I hope you will find him sympathetic and ready to co-
operate in promoting all that is reasonable."

A circle soon formed round Speranski, and the old man who had talked
about his subordinate Pryanichnikov addressed a question to him.

Prince Andrew without joining in the conversation watched every movement
of Speranski's: this man, not long since an insignificant divinity
student, who now, Bolkonski thought, held in his hands--those plump
white hands--the fate of Russia. Prince Andrew was struck by the
extraordinarily disdainful composure with which Speranski answered the
old man. He appeared to address condescending words to him from an
immeasurable height. When the old man began to speak too loud, Speranski
smiled and said he could not judge of the advantage or disadvantage of
what pleased the sovereign.

Having talked for a little while in the general circle, Speranski rose
and coming up to Prince Andrew took him along to the other end of the
room. It was clear that he thought it necessary to interest himself in
Bolkonski.

"I had no chance to talk with you, Prince, during the animated
conversation in which that venerable gentleman involved me," he said
with a mildly contemptuous smile, as if intimating by that smile that he
and Prince Andrew understood the insignificance of the people with whom
he had just been talking. This flattered Prince Andrew. "I have known of
you for a long time: first from your action with regard to your serfs, a
first example, of which it is very desirable that there should be more
imitators; and secondly because you are one of those gentlemen of the
chamber who have not considered themselves offended by the new decree
concerning the ranks allotted to courtiers, which is causing so much
gossip and tittle-tattle."

"No," said Prince Andrew, "my father did not wish me to take advantage
of the privilege. I began the service from the lower grade."

"Your father, a man of the last century, evidently stands above our
contemporaries who so condemn this measure which merely reestablishes
natural justice."

"I think, however, that these condemnations have some ground," returned
Prince Andrew, trying to resist Speranski's influence, of which he began
to be conscious. He did not like to agree with him in everything and
felt a wish to contradict. Though he usually spoke easily and well, he
felt a difficulty in expressing himself now while talking with
Speranski. He was too much absorbed in observing the famous man's
personality.

"Grounds of personal ambition maybe," Speranski put in quietly.

"And of state interest to some extent," said Prince Andrew.

"What do you mean?" asked Speranski quietly, lowering his eyes.

"I am an admirer of Montesquieu," replied Prince Andrew, "and his idea
that le principe des monarchies est l'honneur me parait incontestable.
Certains droits et privileges de la noblesse me paraissent etre des
moyens de soutenir ce sentiment." *


* "The principle of monarchies is honor seems to me incontestable.
Certain rights and privileges for the aristocracy appear to me a means
of maintaining that sentiment."

The smile vanished from Speranski's white face, which was much improved
by the change. Probably Prince Andrew's thought interested him.

"Si vous envisagez la question sous ce point de vue," * he began,
pronouncing French with evident difficulty, and speaking even slower
than in Russian but quite calmly.


* "If you regard the question from that point of view."

Speranski went on to say that honor, l'honneur, cannot be upheld by
privileges harmful to the service; that honor, l'honneur, is either a
negative concept of not doing what is blameworthy or it is a source of
emulation in pursuit of commendation and rewards, which recognize it.
His arguments were concise, simple, and clear.

"An institution upholding honor, the source of emulation, is one similar
to the Legion d'honneur of the great Emperor Napoleon, not harmful but
helpful to the success of the service, but not a class or court
privilege."

"I do not dispute that, but it cannot be denied that court privileges
have attained the same end," returned Prince Andrew. "Every courtier
considers himself bound to maintain his position worthily."

"Yet you do not care to avail yourself of the privilege, Prince," said
Speranski, indicating by a smile that he wished to finish amiably an
argument which was embarrassing for his companion. "If you will do me
the honor of calling on me on Wednesday," he added, "I will, after
talking with Magnitski, let you know what may interest you, and shall
also have the pleasure of a more detailed chat with you."

Closing his eyes, he bowed a la francaise, without taking leave, and
trying to attract as little attention as possible, he left the room.




CHAPTER VI

During the first weeks of his stay in Petersburg Prince Andrew felt the
whole trend of thought he had formed during his life of seclusion quite
overshadowed by the trifling cares that engrossed him in that city.

On returning home in the evening he would jot down in his notebook four
or five necessary calls or appointments for certain hours. The mechanism
of life, the arrangement of the day so as to be in time everywhere,
absorbed the greater part of his vital energy. He did nothing, did not
even think or find time to think, but only talked, and talked
successfully, of what he had thought while in the country.

He sometimes noticed with dissatisfaction that he repeated the same
remark on the same day in different circles. But he was so busy for
whole days together that he had no time to notice that he was thinking
of nothing.

As he had done on their first meeting at Kochubey's, Speranski produced
a strong impression on Prince Andrew on the Wednesday, when he received
him tête-à-tête at his own house and talked to him long and
confidentially.

To Bolkonski so many people appeared contemptible and insignificant
creatures, and he so longed to find in someone the living ideal of that
perfection toward which he strove, that he readily believed that in
Speranski he had found this ideal of a perfectly rational and virtuous
man. Had Speranski sprung from the same class as himself and possessed
the same breeding and traditions, Bolkonski would soon have discovered
his weak, human, unheroic sides; but as it was, Speranski's strange and
logical turn of mind inspired him with respect all the more because he
did not quite understand him. Moreover, Speranski, either because he
appreciated the other's capacity or because he considered it necessary
to win him to his side, showed off his dispassionate calm reasonableness
before Prince Andrew and flattered him with that subtle flattery which
goes hand in hand with self-assurance and consists in a tacit assumption
that one's companion is the only man besides oneself capable of
understanding the folly of the rest of mankind and the reasonableness
and profundity of one's own ideas.

During their long conversation on Wednesday evening, Speranski more than
once remarked: "We regard everything that is above the common level of
rooted custom..." or, with a smile: "But we want the wolves to be fed
and the sheep to be safe..." or: "They cannot understand this..." and
all in a way that seemed to say: "We, you and I, understand what they
are and who we are."

This first long conversation with Speranski only strengthened in Prince
Andrew the feeling he had experienced toward him at their first meeting.
He saw in him a remarkable, clear-thinking man of vast intellect who by
his energy and persistence had attained power, which he was using solely
for the welfare of Russia. In Prince Andrew's eyes Speranski was the man
he would himself have wished to be--one who explained all the facts of
life reasonably, considered important only what was rational, and was
capable of applying the standard of reason to everything. Everything
seemed so simple and clear in Speranski's exposition that Prince Andrew
involuntarily agreed with him about everything. If he replied and
argued, it was only because he wished to maintain his independence and
not submit to Speranski's opinions entirely. Everything was right and
everything was as it should be: only one thing disconcerted Prince
Andrew. This was Speranski's cold, mirrorlike look, which did not allow
one to penetrate to his soul, and his delicate white hands, which Prince
Andrew involuntarily watched as one does watch the hands of those who
possess power. This mirrorlike gaze and those delicate hands irritated
Prince Andrew, he knew not why. He was unpleasantly struck, too, by the
excessive contempt for others that he observed in Speranski, and by the
diversity of lines of argument he used to support his opinions. He made
use of every kind of mental device, except analogy, and passed too
boldly, it seemed to Prince Andrew, from one to another. Now he would
take up the position of a practical man and condemn dreamers; now that
of a satirist, and laugh ironically at his opponents; now grow severely
logical, or suddenly rise to the realm of metaphysics. (This last
resource was one he very frequently employed.) He would transfer a
question to metaphysical heights, pass on to definitions of space, time,
and thought, and, having deduced the refutation he needed, would again
descend to the level of the original discussion.

In general the trait of Speranski's mentality which struck Prince Andrew
most was his absolute and unshakable belief in the power and authority
of reason. It was evident that the thought could never occur to him
which to Prince Andrew seemed so natural, namely, that it is after all
impossible to express all one thinks; and that he had never felt the
doubt, "Is not all I think and believe nonsense?" And it was just this
peculiarity of Speranski's mind that particularly attracted Prince
Andrew.

During the first period of their acquaintance Bolkonski felt a
passionate admiration for him similar to that which he had once felt for
Bonaparte. The fact that Speranski was the son of a village priest, and
that stupid people might meanly despise him on account of his humble
origin (as in fact many did), caused Prince Andrew to cherish his
sentiment for him the more, and unconsciously to strengthen it.

On that first evening Bolkonski spent with him, having mentioned the
Commission for the Revision of the Code of Laws, Speranski told him
sarcastically that the Commission had existed for a hundred and fifty
years, had cost millions, and had done nothing except that Rosenkampf
had stuck labels on the corresponding paragraphs of the different codes.

"And that is all the state has for the millions it has spent," said he.
"We want to give the Senate new juridical powers, but we have no laws.
That is why it is a sin for men like you, Prince, not to serve in these
times!"

Prince Andrew said that for that work an education in jurisprudence was
needed which he did not possess.

"But nobody possesses it, so what would you have? It is a vicious circle
from which we must break a way out."

A week later Prince Andrew was a member of the Committee on Army
Regulations and--what he had not at all expected--was chairman of a
section of the committee for the revision of the laws. At Speranski's
request he took the first part of the Civil Code that was being drawn up
and, with the aid of the Code Napoleon and the Institutes of Justinian,
he worked at formulating the section on Personal Rights.




CHAPTER VII

Nearly two years before this, in 1808, Pierre on returning to Petersburg
after visiting his estates had involuntarily found himself in a leading
position among the Petersburg Freemasons. He arranged dining and funeral
lodge meetings, enrolled new members, and busied himself uniting various
lodges and acquiring authentic charters. He gave money for the erection
of temples and supplemented as far as he could the collection of alms,
in regard to which the majority of members were stingy and irregular. He
supported almost singlehanded a poorhouse the order had founded in
Petersburg.

His life meanwhile continued as before, with the same infatuations and
dissipations. He liked to dine and drink well, and though he considered
it immoral and humiliating could not resist the temptations of the
bachelor circles in which he moved.

Amid the turmoil of his activities and distractions, however, Pierre at
the end of a year began to feel that the more firmly he tried to rest
upon it, the more masonic ground on which he stood gave way under him.
At the same time he felt that the deeper the ground sank under him the
closer bound he involuntarily became to the order. When he had joined
the Freemasons he had experienced the feeling of one who confidently
steps onto the smooth surface of a bog. When he put his foot down it
sank in. To make quite sure of the firmness of the ground, he put his
other foot down and sank deeper still, became stuck in it, and
involuntarily waded knee-deep in the bog.

Joseph Alexeevich was not in Petersburg--he had of late stood aside from
the affairs of the Petersburg lodges, and lived almost entirely in
Moscow. All the members of the lodges were men Pierre knew in ordinary
life, and it was difficult for him to regard them merely as Brothers in
Freemasonry and not as Prince B. or Ivan Vasilevich D., whom he knew in
society mostly as weak and insignificant men. Under the masonic aprons
and insignia he saw the uniforms and decorations at which they aimed in
ordinary life. Often after collecting alms, and reckoning up twenty to
thirty rubles received for the most part in promises from a dozen
members, of whom half were as well able to pay as himself, Pierre
remembered the masonic vow in which each Brother promised to devote all
his belongings to his neighbor, and doubts on which he tried not to
dwell arose in his soul.

He divided the Brothers he knew into four categories. In the first he
put those who did not take an active part in the affairs of the lodges
or in human affairs, but were exclusively occupied with the mystical
science of the order: with questions of the threefold designation of
God, the three primordial elements--sulphur, mercury, and salt--or the
meaning of the square and all the various figures of the temple of
Solomon. Pierre respected this class of Brothers to which the elder ones
chiefly belonged, including, Pierre thought, Joseph Alexeevich himself,
but he did not share their interests. His heart was not in the mystical
aspect of Freemasonry.

In the second category Pierre reckoned himself and others like him,
seeking and vacillating, who had not yet found in Freemasonry a straight
and comprehensible path, but hoped to do so.

In the third category he included those Brothers (the majority) who saw
nothing in Freemasonry but the external forms and ceremonies, and prized
the strict performance of these forms without troubling about their
purport or significance. Such were Willarski and even the Grand Master
of the principal lodge.

Finally, to the fourth category also a great many Brothers belonged,
particularly those who had lately joined. These according to Pierre's
observations were men who had no belief in anything, nor desire for
anything, but joined the Freemasons merely to associate with the wealthy
young Brothers who were influential through their connections or rank,
and of whom there were very many in the lodge.

Pierre began to feel dissatisfied with what he was doing. Freemasonry,
at any rate as he saw it here, sometimes seemed to him based merely on
externals. He did not think of doubting Freemasonry itself, but
suspected that Russian Masonry had taken a wrong path and deviated from
its original principles. And so toward the end of the year he went
abroad to be initiated into the higher secrets of the order.

In the summer of 1809 Pierre returned to Petersburg. Our Freemasons knew
from correspondence with those abroad that Bezukhov had obtained the
confidence of many highly placed persons, had been initiated into many
mysteries, had been raised to a higher grade, and was bringing back with
him much that might conduce to the advantage of the masonic cause in
Russia. The Petersburg Freemasons all came to see him, tried to
ingratiate themselves with him, and it seemed to them all that he was
preparing something for them and concealing it.

A solemn meeting of the lodge of the second degree was convened, at
which Pierre promised to communicate to the Petersburg Brothers what he
had to deliver to them from the highest leaders of their order. The
meeting was a full one. After the usual ceremonies Pierre rose and began
his address.

"Dear Brothers," he began, blushing and stammering, with a written
speech in his hand, "it is not sufficient to observe our mysteries in
the seclusion of our lodge--we must act--act! We are drowsing, but we
must act." Pierre raised his notebook and began to read.

"For the dissemination of pure truth and to secure the triumph of
virtue," he read, "we must cleanse men from prejudice, diffuse
principles in harmony with the spirit of the times, undertake the
education of the young, unite ourselves in indissoluble bonds with the
wisest men, boldly yet prudently overcome superstitions, infidelity, and
folly, and form of those devoted to us a body linked together by unity
of purpose and possessed of authority and power.

"To attain this end we must secure a preponderance of virtue over vice
and must endeavor to secure that the honest man may, even in this world,
receive a lasting reward for his virtue. But in these great endeavors we
are gravely hampered by the political institutions of today. What is to
be done in these circumstances? To favor revolutions, overthrow
everything, repel force by force?... No! We are very far from that.
Every violent reform deserves censure, for it quite fails to remedy evil
while men remain what they are, and also because wisdom needs no
violence.

"The whole plan of our order should be based on the idea of preparing
men of firmness and virtue bound together by unity of conviction--aiming
at the punishment of vice and folly, and patronizing talent and virtue:
raising worthy men from the dust and attaching them to our Brotherhood.
Only then will our order have the power unobtrusively to bind the hands
of the protectors of disorder and to control them without their being
aware of it. In a word, we must found a form of government holding
universal sway, which should be diffused over the whole world without
destroying the bonds of citizenship, and beside which all other
governments can continue in their customary course and do everything
except what impedes the great aim of our order, which is to obtain for
virtue the victory over vice. This aim was that of Christianity itself.
It taught men to be wise and good and for their own benefit to follow
the example and instruction of the best and wisest men.

"At that time, when everything was plunged in darkness, preaching alone
was of course sufficient. The novelty of Truth endowed her with special
strength, but now we need much more powerful methods. It is now
necessary that man, governed by his senses, should find in virtue a
charm palpable to those senses. It is impossible to eradicate the
passions; but we must strive to direct them to a noble aim, and it is
therefore necessary that everyone should be able to satisfy his passions
within the limits of virtue. Our order should provide means to that end.

"As soon as we have a certain number of worthy men in every state, each
of them again training two others and all being closely united,
everything will be possible for our order, which has already in secret
accomplished much for the welfare of mankind."

This speech not only made a strong impression, but created excitement in
the lodge. The majority of the Brothers, seeing in it dangerous designs
of Illuminism, * met it with a coldness that surprised Pierre. The Grand
Master began answering him, and Pierre began developing his views with
more and more warmth. It was long since there had been so stormy a
meeting. Parties were formed, some accusing Pierre of Illuminism, others
supporting him. At that meeting he was struck for the first time by the
endless variety of men's minds, which prevents a truth from ever
presenting itself identically to two persons. Even those members who
seemed to be on his side understood him in their own way with
limitations and alterations he could not agree to, as what he always
wanted most was to convey his thought to others just as he himself
understood it.


* The Illuminati sought to substitute republican for monarchical
institutions.

At the end of the meeting the Grand Master with irony and ill-will
reproved Bezukhov for his vehemence and said it was not love of virtue
alone, but also a love of strife that had moved him in the dispute.
Pierre did not answer him and asked briefly whether his proposal would
be accepted. He was told that it would not, and without waiting for the
usual formalities he left the lodge and went home.




CHAPTER VIII

Again Pierre was overtaken by the depression he so dreaded. For three
days after the delivery of his speech at the lodge he lay on a sofa at
home receiving no one and going nowhere.

It was just then that he received a letter from his wife, who implored
him to see her, telling him how grieved she was about him and how she
wished to devote her whole life to him.

At the end of the letter she informed him that in a few days she would
return to Petersburg from abroad.

Following this letter one of the masonic Brothers whom Pierre respected
less than the others forced his way in to see him and, turning the
conversation upon Pierre's matrimonial affairs, by way of fraternal
advice expressed the opinion that his severity to his wife was wrong and
that he was neglecting one of the first rules of Freemasonry by not
forgiving the penitent.

At the same time his mother-in-law, Prince Vasili's wife, sent to him
imploring him to come if only for a few minutes to discuss a most
important matter. Pierre saw that there was a conspiracy against him and
that they wanted to reunite him with his wife, and in the mood he then
was, this was not even unpleasant to him. Nothing mattered to him.
Nothing in life seemed to him of much importance, and under the
influence of the depression that possessed him he valued neither his
liberty nor his resolution to punish his wife.

"No one is right and no one is to blame; so she too is not to blame," he
thought.

If he did not at once give his consent to a reunion with his wife, it
was only because in his state of depression he did not feel able to take
any step. Had his wife come to him, he would not have turned her away.
Compared to what preoccupied him, was it not a matter of indifference
whether he lived with his wife or not?

Without replying either to his wife or his mother-in-law, Pierre late
one night prepared for a journey and started for Moscow to see Joseph
Alexeevich. This is what he noted in his diary:

Moscow, 17th November

I have just returned from my benefactor, and hasten to write down what I
have experienced. Joseph Alexeevich is living poorly and has for three
years been suffering from a painful disease of the bladder. No one has
ever heard him utter a groan or a word of complaint. From morning till
late at night, except when he eats his very plain food, he is working at
science. He received me graciously and made me sit down on the bed on
which he lay. I made the sign of the Knights of the East and of
Jerusalem, and he responded in the same manner, asking me with a mild
smile what I had learned and gained in the Prussian and Scottish lodges.
I told him everything as best I could, and told him what I had proposed
to our Petersburg lodge, of the bad reception I had encountered, and of
my rupture with the Brothers. Joseph Alexeevich, having remained silent
and thoughtful for a good while, told me his view of the matter, which
at once lit up for me my whole past and the future path I should follow.
He surprised me by asking whether I remembered the threefold aim of the
order: (1) The preservation and study of the mystery. (2) The
purification and reformation of oneself for its reception, and (3) The
improvement of the human race by striving for such purification. Which
is the principal aim of these three? Certainly self-reformation and
self-purification. Only to this aim can we always strive independently
of circumstances. But at the same time just this aim demands the
greatest efforts of us; and so, led astray by pride, losing sight of
this aim, we occupy ourselves either with the mystery which in our
impurity we are unworthy to receive, or seek the reformation of the
human race while ourselves setting an example of baseness and
profligacy. Illuminism is not a pure doctrine, just because it is
attracted by social activity and puffed up by pride. On this ground
Joseph Alexeevich condemned my speech and my whole activity, and in the
depth of my soul I agreed with him. Talking of my family affairs he said
to me, "the chief duty of a true Mason, as I have told you, lies in
perfecting himself. We often think that by removing all the difficulties
of our life we shall more quickly reach our aim, but on the contrary, my
dear sir, it is only in the midst of worldly cares that we can attain
our three chief aims: (1) Self-knowledge--for man can only know himself
by comparison, (2) Self-perfecting, which can only be attained by
conflict, and (3) The attainment of the chief virtue--love of death.
Only the vicissitudes of life can show us its vanity and develop our
innate love of death or of rebirth to a new life." These words are all
the more remarkable because, in spite of his great physical sufferings,
Joseph Alexeevich is never weary of life though he loves death, for
which--in spite of the purity and loftiness of his inner man--he does
not yet feel himself sufficiently prepared. My benefactor then explained
to me fully the meaning of the Great Square of creation and pointed out
to me that the numbers three and seven are the basis of everything. He
advised me not to avoid intercourse with the Petersburg Brothers, but to
take up only second-grade posts in the lodge, to try, while diverting
the Brothers from pride, to turn them toward the true path self-
knowledge and self-perfecting. Besides this he advised me for myself
personally above all to keep a watch over myself, and to that end he
gave me a notebook, the one I am now writing in and in which I will in
future note down all my actions.

Petersburg, 23rd November

I am again living with my wife. My mother-in-law came to me in tears and
said that Helene was here and that she implored me to hear her; that she
was innocent and unhappy at my desertion, and much more. I knew that if
I once let myself see her I should not have strength to go on refusing
what she wanted. In my perplexity I did not know whose aid and advice to
seek. Had my benefactor been here he would have told me what to do. I
went to my room and reread Joseph Alexeevich's letters and recalled my
conversations with him, and deduced from it all that I ought not to
refuse a supplicant, and ought to reach a helping hand to everyone--
especially to one so closely bound to me--and that I must bear my cross.
But if I forgive her for the sake of doing right, then let union with
her have only a spiritual aim. That is what I decided, and what I wrote
to Joseph Alexeevich. I told my wife that I begged her to forget the
past, to forgive me whatever wrong I may have done her, and that I had
nothing to forgive. It gave me joy to tell her this. She need not know
how hard it was for me to see her again. I have settled on the upper
floor of this big house and am experiencing a happy feeling of
regeneration.




CHAPTER IX

At that time, as always happens, the highest society that met at court
and at the grand balls was divided into several circles, each with its
own particular tone. The largest of these was the French circle of the
Napoleonic alliance, the circle of Count Rumyantsev and Caulaincourt. In
this group Helene, as soon as she had settled in Petersburg with her
husband, took a very prominent place. She was visited by the members of
the French embassy and by many belonging to that circle and noted for
their intellect and polished manners.

Helene had been at Erfurt during the famous meeting of the Emperors and
had brought from there these connections with the Napoleonic
notabilities. At Erfurt her success had been brilliant. Napoleon himself
had noticed her in the theater and said of her: "C'est un superbe
animal." * Her success as a beautiful and elegant woman did not surprise
Pierre, for she had become even handsomer than before. What did surprise
him was that during these last two years his wife had succeeded in
gaining the reputation "d' une femme charmante, aussi spirituelle que
belle." *(2) The distinguished Prince de Ligne wrote her eight-page
letters. Bilibin saved up his epigrams to produce them in Countess
Bezukhova's presence. To be received in the Countess Bezukhova's salon
was regarded as a diploma of intellect. Young men read books before
attending Helene's evenings, to have something to say in her salon, and
secretaries of the embassy, and even ambassadors, confided diplomatic
secrets to her, so that in a way Helene was a power. Pierre, who knew
she was very stupid, sometimes attended, with a strange feeling of
perplexity and fear, her evenings and dinner parties, where politics,
poetry, and philosophy were discussed. At these parties his feelings
were like those of a conjuror who always expects his trick to be found
out at any moment. But whether because stupidity was just what was
needed to run such a salon, or because those who were deceived found
pleasure in the deception, at any rate it remained unexposed and Helene
Bezukhova's reputation as a lovely and clever woman became so firmly
established that she could say the emptiest and stupidest things and
everybody would go into raptures over every word of hers and look for a
profound meaning in it of which she herself had no conception.


* "That's a superb animal."

* (2) "Of a charming woman, as witty as she is lovely."

Pierre was just the husband needed for a brilliant society woman. He was
that absent-minded crank, a grand seigneur husband who was in no one's
way, and far from spoiling the high tone and general impression of the
drawing room, he served, by the contrast he presented to her, as an
advantageous background to his elegant and tactful wife. Pierre during
the last two years, as a result of his continual absorption in abstract
interests and his sincere contempt for all else, had acquired in his
wife's circle, which did not interest him, that air of unconcern,
indifference, and benevolence toward all, which cannot be acquired
artificially and therefore inspires involuntary respect. He entered his
wife's drawing room as one enters a theater, was acquainted with
everybody, equally pleased to see everyone, and equally indifferent to
them all. Sometimes he joined in a conversation which interested him
and, regardless of whether any "gentlemen of the embassy" were present
or not, lispingly expressed his views, which were sometimes not at all
in accord with the accepted tone of the moment. But the general opinion
concerning the queer husband of "the most distinguished woman in
Petersburg" was so well established that no one took his freaks
seriously.

Among the many young men who frequented her house every day, Boris
Drubetskoy, who had already achieved great success in the service, was
the most intimate friend of the Bezukhov household since Helene's return
from Erfurt. Helene spoke of him as "mon page" and treated him like a
child. Her smile for him was the same as for everybody, but sometimes
that smile made Pierre uncomfortable. Toward him Boris behaved with a
particularly dignified and sad deference. This shade of deference also
disturbed Pierre. He had suffered so painfully three years before from
the mortification to which his wife had subjected him that he now
protected himself from the danger of its repetition, first by not being
a husband to his wife, and secondly by not allowing himself to suspect.

"No, now that she has become a bluestocking she has finally renounced
her former infatuations," he told himself. "There has never been an
instance of a bluestocking being carried away by affairs of the heart"--
a statement which, though gathered from an unknown source, he believed
implicitly. Yet strange to say Boris' presence in his wife's drawing
room (and he was almost always there) had a physical effect upon Pierre;
it constricted his limbs and destroyed the unconsciousness and freedom
of his movements.

"What a strange antipathy," thought Pierre, "yet I used to like him very
much."

In the eyes of the world Pierre was a great gentleman, the rather blind
and absurd husband of a distinguished wife, a clever crank who did
nothing but harmed nobody and was a first-rate, good-natured fellow. But
a complex and difficult process of internal development was taking place
all this time in Pierre's soul, revealing much to him and causing him
many spiritual doubts and joys.




CHAPTER X

Pierre went on with his diary, and this is what he wrote in it during
that time:

24th November

Got up at eight, read the Scriptures, then went to my duties. (By Joseph
Alexeevich's advice Pierre had entered the service of the state and
served on one of the committees.) Returned home for dinner and dined
alone--the countess had many visitors I do not like. I ate and drank
moderately and after dinner copied out some passages for the Brothers.
In the evening I went down to the countess and told a funny story about
B., and only remembered that I ought not to have done so when everybody
laughed loudly at it.

I am going to bed with a happy and tranquil mind. Great God, help me to
walk in Thy paths, (1) to conquer anger by calmness and deliberation,
(2) to vanquish lust by self-restraint and repulsion, (3) to withdraw
from worldliness, but not avoid (a) the service of the state, (b) family
duties, (c) relations with my friends, and the management of my affairs.

27th November

I got up late. On waking I lay long in bed yielding to sloth. O God,
help and strengthen me that I may walk in Thy ways! Read the Scriptures,
but without proper feeling. Brother Urusov came and we talked about
worldly vanities. He told me of the Emperor's new projects. I began to
criticize them, but remembered my rules and my benefactor's words--that
a true Freemason should be a zealous worker for the state when his aid
is required and a quiet onlooker when not called on to assist. My tongue
is my enemy. Brothers G. V. and O. visited me and we had a preliminary
talk about the reception of a new Brother. They laid on me the duty of
Rhetor. I feel myself weak and unworthy. Then our talk turned to the
interpretation of the seven pillars and steps of the Temple, the seven
sciences, the seven virtues, the seven vices, and the seven gifts of the
Holy Spirit. Brother O. was very eloquent. In the evening the admission
took place. The new decoration of the Premises contributed much to the
magnificence of the spectacle. It was Boris Drubetskoy who was admitted.
I nominated him and was the Rhetor. A strange feeling agitated me all
the time I was alone with him in the dark chamber. I caught myself
harboring a feeling of hatred toward him which I vainly tried to
overcome. That is why I should really like to save him from evil and
lead him into the path of truth, but evil thoughts of him did not leave
me. It seemed to me that his object in entering the Brotherhood was
merely to be intimate and in favor with members of our lodge. Apart from
the fact that he had asked me several times whether N. and S. were
members of our lodge (a question to which I could not reply) and that
according to my observation he is incapable of feeling respect for our
holy order and is too preoccupied and satisfied with the outer man to
desire spiritual improvement, I had no cause to doubt him, but he seemed
to me insincere, and all the time I stood alone with him in the dark
temple it seemed to me that he was smiling contemptuously at my words,
and I wished really to stab his bare breast with the sword I held to it.
I could not be eloquent, nor could I frankly mention my doubts to the
Brothers and to the Grand Master. Great Architect of Nature, help me to
find the true path out of the labyrinth of lies!


After this, three pages were left blank in the diary, and then the
following was written:

I have had a long and instructive talk alone with Brother V., who
advised me to hold fast by Brother A. Though I am unworthy, much was
revealed to me. Adonai is the name of the creator of the world. Elohim
is the name of the ruler of all. The third name is the name unutterable
which means the All. Talks with Brother V. strengthen, refresh, and
support me in the path of virtue. In his presence doubt has no place.
The distinction between the poor teachings of mundane science and our
sacred all-embracing teaching is clear to me. Human sciences dissect
everything to comprehend it, and kill everything to examine it. In the
holy science of our order all is one, all is known in its entirety and
life. The Trinity--the three elements of matter--are sulphur, mercury,
and salt. Sulphur is of an oily and fiery nature; in combination with
salt by its fiery nature it arouses a desire in the latter by means of
which it attracts mercury, seizes it, holds it, and in combination
produces other bodies. Mercury is a fluid, volatile, spiritual essence.
Christ, the Holy Spirit, Him!...

3rd December

Awoke late, read the Scriptures but was apathetic. Afterwards went and
paced up and down the large hall. I wished to meditate, but instead my
imagination pictured an occurrence of four years ago, when Dolokhov,
meeting me in Moscow after our duel, said he hoped I was enjoying
perfect peace of mind in spite of my wife's absence. At the time I gave
him no answer. Now I recalled every detail of that meeting and in my
mind gave him the most malevolent and bitter replies. I recollected
myself and drove away that thought only when I found myself glowing with
anger, but I did not sufficiently repent. Afterwards Boris Drubetskoy
came and began relating various adventures. His coming vexed me from the
first, and I said something disagreeable to him. He replied. I flared up
and said much that was unpleasant and even rude to him. He became
silent, and I recollected myself only when it was too late. My God, I
cannot get on with him at all. The cause of this is my egotism. I set
myself above him and so become much worse than he, for he is lenient to
my rudeness while I on the contrary nourish contempt for him. O God,
grant that in his presence I may rather see my own vileness, and behave
so that he too may benefit. After dinner I fell asleep and as I was
drowsing off I clearly heard a voice saying in my left ear, "Thy day!"

I dreamed that I was walking in the dark and was suddenly surrounded by
dogs, but I went on undismayed. Suddenly a smallish dog seized my left
thigh with its teeth and would not let go. I began to throttle it with
my hands. Scarcely had I torn it off before another, a bigger one, began
biting me. I lifted it up, but the higher I lifted it the bigger and
heavier it grew. And suddenly Brother A. came and, taking my arm, led me
to a building to enter which we had to pass along a narrow plank. I
stepped on it, but it bent and gave way and I began to clamber up a
fence which I could scarcely reach with my hands. After much effort I
dragged myself up, so that my leg hung down on one side and my body on
the other. I looked round and saw Brother A. standing on the fence and
pointing me to a broad avenue and garden, and in the garden was a large
and beautiful building. I woke up. O Lord, great Architect of Nature,
help me to tear from myself these dogs--my passions especially the last,
which unites in itself the strength of all the former ones, and aid me
to enter that temple of virtue to a vision of which I attained in my
dream.

7th December

I dreamed that Joseph Alexeevich was sitting in my house, and that I was
very glad and wished to entertain him. It seemed as if I chattered
incessantly with other people and suddenly remembered that this could
not please him, and I wished to come close to him and embrace him. But
as soon as I drew near I saw that his face had changed and grown young,
and he was quietly telling me something about the teaching of our order,
but so softly that I could not hear it. Then it seemed that we all left
the room and something strange happened. We were sitting or lying on the
floor. He was telling me something, and I wished to show him my
sensibility, and not listening to what he was saying I began picturing
to myself the condition of my inner man and the grace of God sanctifying
me. And tears came into my eyes, and I was glad he noticed this. But he
looked at me with vexation and jumped up, breaking off his remarks. I
felt abashed and asked whether what he had been saying did not concern
me; but he did not reply, gave me a kind look, and then we suddenly
found ourselves in my bedroom where there is a double bed. He lay down
on the edge of it and I burned with longing to caress him and lie down
too. And he said, "Tell me frankly what is your chief temptation? Do you
know it? I think you know it already." Abashed by this question, I
replied that sloth was my chief temptation. He shook his head
incredulously; and even more abashed, I said that though I was living
with my wife as he advised, I was not living with her as her husband. To
this he replied that one should not deprive a wife of one's embraces and
gave me to understand that that was my duty. But I replied that I should
be ashamed to do it, and suddenly everything vanished. And I awoke and
found in my mind the text from the Gospel: "The life was the light of
men. And the light shineth in darkness; and the darkness comprehended it
not." Joseph Alexeevich's face had looked young and bright. That day I
received a letter from my benefactor in which he wrote about "conjugal
duties."

9th December

I had a dream from which I awoke with a throbbing heart. I saw that I
was in Moscow in my house, in the big sitting room, and Joseph
Alexeevich came in from the drawing room. I seemed to know at once that
the process of regeneration had already taken place in him, and I rushed
to meet him. I embraced him and kissed his hands, and he said, "Hast
thou noticed that my face is different?" I looked at him, still holding
him in my arms, and saw that his face was young, but that he had no hair
on his head and his features were quite changed. And I said, "I should
have known you had I met you by chance," and I thought to myself, "Am I
telling the truth?" And suddenly I saw him lying like a dead body; then
he gradually recovered and went with me into my study carrying a large
book of sheets of drawing paper; I said, "I drew that," and he answered
by bowing his head. I opened the book, and on all the pages there were
excellent drawings. And in my dream I knew that these drawings
represented the love adventures of the soul with its beloved. And on its
pages I saw a beautiful representation of a maiden in transparent
garments and with a transparent body, flying up to the clouds. And I
seemed to know that this maiden was nothing else than a representation
of the Song of Songs. And looking at those drawings I dreamed I felt
that I was doing wrong, but could not tear myself away from them. Lord,
help me! My God, if Thy forsaking me is Thy doing, Thy will be done; but
if I am myself the cause, teach me what I should do! I shall perish of
my debauchery if Thou utterly desertest me!




CHAPTER XI

The Rostovs' monetary affairs had not improved during the two years they
had spent in the country.

Though Nicholas Rostov had kept firmly to his resolution and was still
serving modestly in an obscure regiment, spending comparatively little,
the way of life at Otradnoe--Mitenka's management of affairs, in
particular--was such that the debts inevitably increased every year. The
only resource obviously presenting itself to the old count was to apply
for an official post, so he had come to Petersburg to look for one and
also, as he said, to let the lassies enjoy themselves for the last time.

Soon after their arrival in Petersburg Berg proposed to Vera and was
accepted.

Though in Moscow the Rostovs belonged to the best society without
themselves giving it a thought, yet in Petersburg their circle of
acquaintances was a mixed and indefinite one. In Petersburg they were
provincials, and the very people they had entertained in Moscow without
inquiring to what set they belonged, here looked down on them.

The Rostovs lived in the same hospitable way in Petersburg as in Moscow,
and the most diverse people met at their suppers. Country neighbors from
Otradnoe, impoverished old squires and their daughters, Peronskaya a
maid of honor, Pierre Bezukhov, and the son of their district postmaster
who had obtained a post in Petersburg. Among the men who very soon
became frequent visitors at the Rostovs' house in Petersburg were Boris,
Pierre whom the count had met in the street and dragged home with him,
and Berg who spent whole days at the Rostovs' and paid the eldest
daughter, Countess Vera, the attentions a young man pays when he intends
to propose.

Not in vain had Berg shown everybody his right hand wounded at
Austerlitz and held a perfectly unnecessary sword in his left. He
narrated that episode so persistently and with so important an air that
everyone believed in the merit and usefulness of his deed, and he had
obtained two decorations for Austerlitz.

In the Finnish war he also managed to distinguish himself. He had picked
up the scrap of a grenade that had killed an aide-de-camp standing near
the commander-in-chief and had taken it to his commander. Just as he had
done after Austerlitz, he related this occurrence at such length and so
insistently that everyone again believed it had been necessary to do
this, and he received two decorations for the Finnish war also. In 1809
he was a captain in the Guards, wore medals, and held some special
lucrative posts in Petersburg.

Though some skeptics smiled when told of Berg's merits, it could not be
denied that he was a painstaking and brave officer, on excellent terms
with his superiors, and a moral young man with a brilliant career before
him and an assured position in society.

Four years before, meeting a German comrade in the stalls of a Moscow
theater, Berg had pointed out Vera Rostova to him and had said in
German, "das soll mein Weib werden," * and from that moment had made up
his mind to marry her. Now in Petersburg, having considered the Rostovs'
position and his own, he decided that the time had come to propose.


* "That girl shall be my wife."

Berg's proposal was at first received with a perplexity that was not
flattering to him. At first it seemed strange that the son of an obscure
Livonian gentleman should propose marriage to a Countess Rostova; but
Berg's chief characteristic was such a naive and good natured egotism
that the Rostovs involuntarily came to think it would be a good thing,
since he himself was so firmly convinced that it was good, indeed
excellent. Moreover, the Rostovs' affairs were seriously embarrassed, as
the suitor could not but know; and above all, Vera was twenty-four, had
been taken out everywhere, and though she was certainly good-looking and
sensible, no one up to now had proposed to her. So they gave their
consent.

"You see," said Berg to his comrade, whom he called "friend" only
because he knew that everyone has friends, "you see, I have considered
it all, and should not marry if I had not thought it all out or if it
were in any way unsuitable. But on the contrary, my papa and mamma are
now provided for--I have arranged that rent for them in the Baltic
Provinces--and I can live in Petersburg on my pay, and with her fortune
and my good management we can get along nicely. I am not marrying for
money--I consider that dishonorable--but a wife should bring her share
and a husband his. I have my position in the service, she has
connections and some means. In our times that is worth something, isn't
it? But above all, she is a handsome, estimable girl, and she loves
me..."

Berg blushed and smiled.

"And I love her, because her character is sensible and very good. Now
the other sister, though they are the same family, is quite different--
an unpleasant character and has not the same intelligence. She is so...
you know?... Unpleasant... But my fiancee!... Well, you will be coming,"
he was going to say, "to dine," but changed his mind and said "to take
tea with us," and quickly doubling up his tongue he blew a small round
ring of tobacco smoke, perfectly embodying his dream of happiness.

After the first feeling of perplexity aroused in the parents by Berg's
proposal, the holiday tone of joyousness usual at such times took
possession of the family, but the rejoicing was external and insincere.
In the family's feeling toward this wedding a certain awkwardness and
constraint was evident, as if they were ashamed of not having loved Vera
sufficiently and of being so ready to get her off their hands. The old
count felt this most. He would probably have been unable to state the
cause of his embarrassment, but it resulted from the state of his
affairs. He did not know at all how much he had, what his debts amounted
to, or what dowry he could give Vera. When his daughters were born he
had assigned to each of them, for her dowry, an estate with three
hundred serfs; but one of these estates had already been sold, and the
other was mortgaged and the interest so much in arrears that it would
have to be sold, so that it was impossible to give it to Vera. Nor had
he any money.

Berg had already been engaged a month, and only a week remained before
the wedding, but the count had not yet decided in his own mind the
question of the dowry, nor spoken to his wife about it. At one time the
count thought of giving her the Ryazan estate or of selling a forest, at
another time of borrowing money on a note of hand. A few days before the
wedding Berg entered the count's study early one morning and, with a
pleasant smile, respectfully asked his future father-in-law to let him
know what Vera's dowry would be. The count was so disconcerted by this
long-foreseen inquiry that without consideration he gave the first reply
that came into his head. "I like your being businesslike about it.... I
like it. You shall be satisfied...."

And patting Berg on the shoulder he got up, wishing to end the
conversation. But Berg, smiling pleasantly, explained that if he did not
know for certain how much Vera would have and did not receive at least
part of the dowry in advance, he would have to break matters off.

"Because, consider, Count--if I allowed myself to marry now without
having definite means to maintain my wife, I should be acting badly...."

The conversation ended by the count, who wished to be generous and to
avoid further importunity, saying that he would give a note of hand for
eighty thousand rubles. Berg smiled meekly, kissed the count on the
shoulder, and said that he was very grateful, but that it was impossible
for him to arrange his new life without receiving thirty thousand in
ready money. "Or at least twenty thousand, Count," he added, "and then a
note of hand for only sixty thousand."

"Yes, yes, all right!" said the count hurriedly. "Only excuse me, my
dear fellow, I'll give you twenty thousand and a note of hand for eighty
thousand as well. Yes, yes! Kiss me."




CHAPTER XII

Natasha was sixteen and it was the year 1809, the very year to which she
had counted on her fingers with Boris after they had kissed four years
ago. Since then she had not seen him. Before Sonya and her mother, if
Boris happened to be mentioned, she spoke quite freely of that episode
as of some childish, long-forgotten matter that was not worth
mentioning. But in the secret depths of her soul the question whether
her engagement to Boris was a jest or an important, binding promise
tormented her.

Since Boris left Moscow in 1805 to join the army he had not seen the
Rostovs. He had been in Moscow several times, and had passed near
Otradnoe, but had never been to see them.

Sometimes it occurred to Natasha that he did not wish to see her, and
this conjecture was confirmed by the sad tone in which her elders spoke
of him.

"Nowadays old friends are not remembered," the countess would say when
Boris was mentioned.

Anna Mikhaylovna also had of late visited them less frequently, seemed
to hold herself with particular dignity, and always spoke rapturously
and gratefully of the merits of her son and the brilliant career on
which he had entered. When the Rostovs came to Petersburg Boris called
on them.

He drove to their house in some agitation. The memory of Natasha was his
most poetic recollection. But he went with the firm intention of letting
her and her parents feel that the childish relations between himself and
Natasha could not be binding either on her or on him. He had a brilliant
position in society thanks to his intimacy with Countess Bezukhova, a
brilliant position in the service thanks to the patronage of an
important personage whose complete confidence he enjoyed, and he was
beginning to make plans for marrying one of the richest heiresses in
Petersburg, plans which might very easily be realized. When he entered
the Rostovs' drawing room Natasha was in her own room. When she heard of
his arrival she almost ran into the drawing room, flushed and beaming
with a more than cordial smile.

Boris remembered Natasha in a short dress, with dark eyes shining from
under her curls and boisterous, childish laughter, as he had known her
four years before; and so he was taken aback when quite a different
Natasha entered, and his face expressed rapturous astonishment. This
expression on his face pleased Natasha.

"Well, do you recognize your little madcap playmate?" asked the
countess.

Boris kissed Natasha's hand and said that he was astonished at the
change in her.

"How handsome you have grown!"

"I should think so!" replied Natasha's laughing eyes.

"And is Papa older?" she asked.

Natasha sat down and, without joining in Boris' conversation with the
countess, silently and minutely studied her childhood's suitor. He felt
the weight of that resolute and affectionate scrutiny and glanced at her
occasionally.

Boris' uniform, spurs, tie, and the way his hair was brushed were all
comme il faut and in the latest fashion. This Natasha noticed at once.
He sat rather sideways in the armchair next to the countess, arranging
with his right hand the cleanest of gloves that fitted his left hand
like a skin, and he spoke with a particularly refined compression of his
lips about the amusements of the highest Petersburg society, recalling
with mild irony old times in Moscow and Moscow acquaintances. It was not
accidentally, Natasha felt, that he alluded, when speaking of the
highest aristocracy, to an ambassador's ball he had attended, and to
invitations he had received from N.N. and S.S.

All this time Natasha sat silent, glancing up at him from under her
brows. This gaze disturbed and confused Boris more and more. He looked
round more frequently toward her, and broke off in what he was saying.
He did not stay more than ten minutes, then rose and took his leave. The
same inquisitive, challenging, and rather mocking eyes still looked at
him. After his first visit Boris said to himself that Natasha attracted
him just as much as ever, but that he must not yield to that feeling,
because to marry her, a girl almost without fortune, would mean ruin to
his career, while to renew their former relations without intending to
marry her would be dishonorable. Boris made up his mind to avoid meeting
Natasha, but despite that resolution he called again a few days later
and began calling often and spending whole days at the Rostovs'. It
seemed to him that he ought to have an explanation with Natasha and tell
her that the old times must be forgotten, that in spite of everything...
she could not be his wife, that he had no means, and they would never
let her marry him. But he failed to do so and felt awkward about
entering on such an explanation. From day to day he became more and more
entangled. It seemed to her mother and Sonya that Natasha was in love
with Boris as of old. She sang him his favorite songs, showed him her
album, making him write in it, did not allow him to allude to the past,
letting it be understood how delightful was the present; and every day
he went away in a fog, without having said what he meant to, and not
knowing what he was doing or why he came, or how it would all end. He
left off visiting Helene and received reproachful notes from her every
day, and yet he continued to spend whole days with the Rostovs.




CHAPTER XIII

One night when the old countess, in nightcap and dressing jacket,
without her false curls, and with her poor little knob of hair showing
under her white cotton cap, knelt sighing and groaning on a rug and
bowing to the ground in prayer, her door creaked and Natasha, also in a
dressing jacket with slippers on her bare feet and her hair in
curlpapers, ran in. The countess--her prayerful mood dispelled--looked
round and frowned. She was finishing her last prayer: "Can it be that
this couch will be my grave?" Natasha, flushed and eager, seeing her
mother in prayer, suddenly checked her rush, half sat down, and
unconsciously put out her tongue as if chiding herself. Seeing that her
mother was still praying she ran on tiptoe to the bed and, rapidly
slipping one little foot against the other, pushed off her slippers and
jumped onto the bed the countess had feared might become her grave. This
couch was high, with a feather bed and five pillows each smaller than
the one below. Natasha jumped on it, sank into the feather bed, rolled
over to the wall, and began snuggling up the bedclothes as she settled
down, raising her knees to her chin, kicking out and laughing almost
inaudibly, now covering herself up head and all, and now peeping at her
mother. The countess finished her prayers and came to the bed with a
stern face, but seeing, that Natasha's head was covered, she smiled in
her kind, weak way.

"Now then, now then!" said she.

"Mamma, can we have a talk? Yes?" said Natasha. "Now, just one on your
throat and another... that'll do!" And seizing her mother round the
neck, she kissed her on the throat. In her behavior to her mother
Natasha seemed rough, but she was so sensitive and tactful that however
she clasped her mother she always managed to do it without hurting her
or making her feel uncomfortable or displeased.

"Well, what is it tonight?" said the mother, having arranged her pillows
and waited until Natasha, after turning over a couple of times, had
settled down beside her under the quilt, spread out her arms, and
assumed a serious expression.

These visits of Natasha's at night before the count returned from his
club were one of the greatest pleasures of both mother, and daughter.

"What is it tonight?--But I have to tell you..."

Natasha put her hand on her mother's mouth.

"About Boris... I know," she said seriously; "that's what I have come
about. Don't say it--I know. No, do tell me!" and she removed her hand.
"Tell me, Mamma! He's nice?"

"Natasha, you are sixteen. At your age I was married. You say Boris is
nice. He is very nice, and I love him like a son. But what then?... What
are you thinking about? You have quite turned his head, I can see
that...."

As she said this the countess looked round at her daughter. Natasha was
lying looking steadily straight before her at one of the mahogany
sphinxes carved on the corners of the bedstead, so that the countess
only saw her daughter's face in profile. That face struck her by its
peculiarly serious and concentrated expression.

Natasha was listening and considering.

"Well, what then?" said she.

"You have quite turned his head, and why? What do you want of him? You
know you can't marry him."

"Why not?" said Natasha, without changing her position.

"Because he is young, because he is poor, because he is a relation...
and because you yourself don't love him."

"How do you know?"

"I know. It is not right, darling!"


"But if I want to..." said Natasha.

"Leave off talking nonsense," said the countess.

"But if I want to..."

"Natasha, I am in earnest..."

Natasha did not let her finish. She drew the countess' large hand to
her, kissed it on the back and then on the palm, then again turned it
over and began kissing first one knuckle, then the space between the
knuckles, then the next knuckle, whispering, "January, February, March,
April, May. Speak, Mamma, why don't you say anything? Speak!" said she,
turning to her mother, who was tenderly gazing at her daughter and in
that contemplation seemed to have forgotten all she had wished to say.

"It won't do, my love! Not everyone will understand this friendship
dating from your childish days, and to see him so intimate with you may
injure you in the eyes of other young men who visit us, and above all it
torments him for nothing. He may already have found a suitable and
wealthy match, and now he's half crazy."

"Crazy?" repeated Natasha.

"I'll tell you some things about myself. I had a cousin..."

"I know! Cyril Matveich... but he is old."

"He was not always old. But this is what I'll do, Natasha, I'll have a
talk with Boris. He need not come so often...."

"Why not, if he likes to?"

"Because I know it will end in nothing...."

"How can you know? No, Mamma, don't speak to him! What nonsense!" said
Natasha in the tone of one being deprived of her property. "Well, I
won't marry, but let him come if he enjoys it and I enjoy it." Natasha
smiled and looked at her mother. "Not to marry, but just so," she added.

"How so, my pet?"

"Just so. There's no need for me to marry him. But... just so."

"Just so, just so," repeated the countess, and shaking all over, she
went off into a good humored, unexpected, elderly laugh.

"Don't laugh, stop!" cried Natasha. "You're shaking the whole bed!
You're awfully like me, just such another giggler.... Wait..." and she
seized the countess' hands and kissed a knuckle of the little finger,
saying, "June," and continued, kissing, "July, August," on the other
hand. "But, Mamma, is he very much in love? What do you think? Was
anybody ever so much in love with you? And he's very nice, very, very
nice. Only not quite my taste--he is so narrow, like the dining-room
clock.... Don't you understand? Narrow, you know--gray, light gray..."

"What rubbish you're talking!" said the countess.

Natasha continued: "Don't you really understand? Nicholas would
understand.... Bezukhov, now, is blue, dark-blue and red, and he is
square."

"You flirt with him too," said the countess, laughing.

"No, he is a Freemason, I have found out. He is fine, dark-blue and
red.... How can I explain it to you?"

"Little countess!" the count's voice called from behind the door.
"You're not asleep?" Natasha jumped up, snatched up her slippers, and
ran barefoot to her own room.

It was a long time before she could sleep. She kept thinking that no one
could understand all that she understood and all there was in her.

"Sonya?" she thought, glancing at that curled-up, sleeping little kitten
with her enormous plait of hair. "No, how could she? She's virtuous. She
fell in love with Nicholas and does not wish to know anything more. Even
Mamma does not understand. It is wonderful how clever I am and how...
charming she is," she went on, speaking of herself in the third person,
and imagining it was some very wise man--the wisest and best of men--who
was saying it of her. "There is everything, everything in her,"
continued this man. "She is unusually intelligent, charming... and then
she is pretty, uncommonly pretty, and agile--she swims and rides
splendidly... and her voice! One can really say it's a wonderful voice!"

She hummed a scrap from her favorite opera by Cherubini, threw herself
on her bed, laughed at the pleasant thought that she would immediately
fall asleep, called Dunyasha the maid to put out the candle, and before
Dunyasha had left the room had already passed into yet another happier
world of dreams, where everything was as light and beautiful as in
reality, and even more so because it was different.

Next day the countess called Boris aside and had a talk with him, after
which he ceased coming to the Rostovs'.




CHAPTER XIV

On the thirty-first of December, New Year's Eve, 1809 - 10 an old
grandee of Catherine's day was giving a ball and midnight supper. The
diplomatic corps and the Emperor himself were to be present.

The grandee's well-known mansion on the English Quay glittered with
innumerable lights. Police were stationed at the brightly lit entrance
which was carpeted with red baize, and not only gendarmes but dozens of
police officers and even the police master himself stood at the porch.
Carriages kept driving away and fresh ones arriving, with red-liveried
footmen and footmen in plumed hats. From the carriages emerged men
wearing uniforms, stars, and ribbons, while ladies in satin and ermine
cautiously descended the carriage steps which were let down for them
with a clatter, and then walked hurriedly and noiselessly over the baize
at the entrance.

Almost every time a new carriage drove up a whisper ran through the
crowd and caps were doffed.

"The Emperor?... No, a minister.... prince... ambassador. Don't you see
the plumes?..." was whispered among the crowd.

One person, better dressed than the rest, seemed to know everyone and
mentioned by name the greatest dignitaries of the day.

A third of the visitors had already arrived, but the Rostovs, who were
to be present, were still hurrying to get dressed.

There had been many discussions and preparations for this ball in the
Rostov family, many fears that the invitation would not arrive, that the
dresses would not be ready, or that something would not be arranged as
it should be.

Marya Ignatevna Peronskaya, a thin and shallow maid of honor at the
court of the Dowager Empress, who was a friend and relation of the
countess and piloted the provincial Rostovs in Petersburg high society,
was to accompany them to the ball.

They were to call for her at her house in the Taurida Gardens at ten
o'clock, but it was already five minutes to ten, and the girls were not
yet dressed.

Natasha was going to her first grand ball. She had got up at eight that
morning and had been in a fever of excitement and activity all day. All
her powers since morning had been concentrated on ensuring that they
all--she herself, Mamma, and Sonya--should be as well dressed as
possible. Sonya and her mother put themselves entirely in her hands. The
countess was to wear a claret-colored velvet dress, and the two girls
white gauze over pink silk slips, with roses on their bodices and their
hair dressed a la grecque.

Everything essential had already been done; feet, hands, necks, and ears
washed, perfumed, and powdered, as befits a ball; the openwork silk
stockings and white satin shoes with ribbons were already on; the
hairdressing was almost done. Sonya was finishing dressing and so was
the countess, but Natasha, who had bustled about helping them all, was
behindhand. She was still sitting before a looking-glass with a dressing
jacket thrown over her slender shoulders. Sonya stood ready dressed in
the middle of the room and, pressing the head of a pin till it hurt her
dainty finger, was fixing on a last ribbon that squeaked as the pin went
through it.

"That's not the way, that's not the way, Sonya!" cried Natasha turning
her head and clutching with both hands at her hair which the maid who
was dressing it had not time to release. "That bow is not right. Come
here!"

Sonya sat down and Natasha pinned the ribbon on differently.

"Allow me, Miss! I can't do it like that," said the maid who was holding
Natasha's hair.

"Oh, dear! Well then, wait. That's right, Sonya."

"Aren't you ready? It is nearly ten," came the countess' voice.

"Directly! Directly! And you, Mamma?"

"I have only my cap to pin on."

"Don't do it without me!" called Natasha. "You won't do it right."

"But it's already ten."

They had decided to be at the ball by half past ten, and Natasha had
still to get dressed and they had to call at the Taurida Gardens.

When her hair was done, Natasha, in her short petticoat from under which
her dancing shoes showed, and in her mother's dressing jacket, ran up to
Sonya, scrutinized her, and then ran to her mother. Turning her mother's
head this way and that, she fastened on the cap and, hurriedly kissing
her gray hair, ran back to the maids who were turning up the hem of her
skirt.

The cause of the delay was Natasha's skirt, which was too long. Two
maids were turning up the hem and hurriedly biting off the ends of
thread. A third with pins in her mouth was running about between the
countess and Sonya, and a fourth held the whole of the gossamer garment
up high on one uplifted hand.

"Mavra, quicker, darling!"

"Give me my thimble, Miss, from there..."

"Whenever will you be ready?" asked the count coming to the door. "Here
is some scent. Peronskaya must be tired of waiting."

"It's ready, Miss," said the maid, holding up the shortened gauze dress
with two fingers, and blowing and shaking something off it, as if by
this to express a consciousness of the airiness and purity of what she
held.

Natasha began putting on the dress.

"In a minute! In a minute! Don't come in, Papa!" she cried to her father
as he opened the door--speaking from under the filmy skirt which still
covered her whole face.

Sonya slammed the door to. A minute later they let the count in. He was
wearing a blue swallow-tail coat, shoes and stockings, and was perfumed
and his hair pomaded.

"Oh, Papa! how nice you look! Charming!" cried Natasha, as she stood in
the middle of the room smoothing out the folds of the gauze.

"If you please, Miss! allow me," said the maid, who on her knees was
pulling the skirt straight and shifting the pins from one side of her
mouth to the other with her tongue.

"Say what you like," exclaimed Sonya, in a despairing voice as she
looked at Natasha, "say what you like, it's still too long."

Natasha stepped back to look at herself in the pier glass. The dress was
too long.

"Really, madam, it is not at all too long," said Mavra, crawling on her
knees after her young lady.

"Well, if it's too long we'll take it up... we'll tack it up in one
minute," said the resolute Dunyasha taking a needle that was stuck on
the front of her little shawl and, still kneeling on the floor, set to
work once more.

At that moment, with soft steps, the countess came in shyly, in her cap
and velvet gown.

"Oo-oo, my beauty!" exclaimed the count, "she looks better than any of
you!"

He would have embraced her but, blushing, she stepped aside fearing to
be rumpled.

"Mamma, your cap, more to this side," said Natasha. "I'll arrange it,"
and she rushed forward so that the maids who were tacking up her skirt
could not move fast enough and a piece of gauze was torn off.

"Oh goodness! What has happened? Really it was not my fault!"

"Never mind, I'll run it up, it won't show," said Dunyasha.

"What a beauty--a very queen!" said the nurse as she came to the door.
"And Sonya! They are lovely!"

At a quarter past ten they at last got into their carriages and started.
But they had still to call at the Taurida Gardens.

Peronskaya was quite ready. In spite of her age and plainness she had
gone through the same process as the Rostovs, but with less flurry--for
to her it was a matter of routine. Her ugly old body was washed,
perfumed, and powdered in just the same way. She had washed behind her
ears just as carefully, and when she entered her drawing room in her
yellow dress, wearing her badge as maid of honor, her old lady's maid
was as full of rapturous admiration as the Rostovs' servants had been.

She praised the Rostovs' toilets. They praised her taste and toilet, and
at eleven o'clock, careful of their coiffures and dresses, they settled
themselves in their carriages and drove off.




CHAPTER XV

Natasha had not had a moment free since early morning and had not once
had time to think of what lay before her.

In the damp chill air and crowded closeness of the swaying carriage, she
for the first time vividly imagined what was in store for her there at
the ball, in those brightly lighted rooms--with music, flowers, dances,
the Emperor, and all the brilliant young people of Petersburg. The
prospect was so splendid that she hardly believed it would come true, so
out of keeping was it with the chill darkness and closeness of the
carriage. She understood all that awaited her only when, after stepping
over the red baize at the entrance, she entered the hall, took off her
fur cloak, and, beside Sonya and in front of her mother, mounted the
brightly illuminated stairs between the flowers. Only then did she
remember how she must behave at a ball, and tried to assume the majestic
air she considered indispensable for a girl on such an occasion. But,
fortunately for her, she felt her eyes growing misty, she saw nothing
clearly, her pulse beat a hundred to the minute, and the blood throbbed
at her heart. She could not assume that pose, which would have made her
ridiculous, and she moved on almost fainting from excitement and trying
with all her might to conceal it. And this was the very attitude that
became her best. Before and behind them other visitors were entering,
also talking in low tones and wearing ball dresses. The mirrors on the
landing reflected ladies in white, pale-blue, and pink dresses, with
diamonds and pearls on their bare necks and arms.

Natasha looked in the mirrors and could not distinguish her reflection
from the others. All was blended into one brilliant procession. On
entering the ballroom the regular hum of voices, footsteps, and
greetings deafened Natasha, and the light and glitter dazzled her still
more. The host and hostess, who had already been standing at the door
for half an hour repeating the same words to the various arrivals,
"Charme de vous voir," * greeted the Rostovs and Peronskaya in the same
manner.


* "Delighted to see you."

The two girls in their white dresses, each with a rose in her black
hair, both curtsied in the same way, but the hostess' eye involuntarily
rested longer on the slim Natasha. She looked at her and gave her alone
a special smile in addition to her usual smile as hostess. Looking at
her she may have recalled the golden, irrecoverable days of her own
girlhood and her own first ball. The host also followed Natasha with his
eyes and asked the count which was his daughter.

"Charming!" said he, kissing the tips of his fingers.

In the ballroom guests stood crowding at the entrance doors awaiting the
Emperor. The countess took up a position in one of the front rows of
that crowd. Natasha heard and felt that several people were asking about
her and looking at her. She realized that those noticing her liked her,
and this observation helped to calm her.

"There are some like ourselves and some worse," she thought.

Peronskaya was pointing out to the countess the most important people at
the ball.

"That is the Dutch ambassador, do you see? That gray-haired man," she
said, indicating an old man with a profusion of silver-gray curly hair,
who was surrounded by ladies laughing at something he said.

"Ah, here she is, the Queen of Petersburg, Countess Bezukhova," said
Peronskaya, indicating Helene who had just entered. "How lovely! She is
quite equal to Marya Antonovna. See how the men, young and old, pay
court to her. Beautiful and clever... they say Prince--is quite mad
about her. But see, those two, though not good-looking, are even more
run after."

She pointed to a lady who was crossing the room followed by a very plain
daughter.

"She is a splendid match, a millionairess," said Peronskaya. "And look,
here come her suitors."

"That is Bezukhova's brother, Anatole Kuragin," she said, indicating a
handsome officer of the Horse Guards who passed by them with head erect,
looking at something over the heads of the ladies. "He's handsome, isn't
he? I hear they will marry him to that rich girl. But your cousin,
Drubetskoy, is also very attentive to her. They say she has millions. Oh
yes, that's the French ambassador himself!" she replied to the countess'
inquiry about Caulaincourt. "Looks as if he were a king! All the same,
the French are charming, very charming. No one more charming in society.
Ah, here she is! Yes, she is still the most beautiful of them all, our
Marya Antonovna! And how simply she is dressed! Lovely! And that stout
one in spectacles is the universal Freemason," she went on, indicating
Pierre. "Put him beside his wife and he looks a regular buffoon!"

Pierre, swaying his stout body, advanced, making way through the crowd
and nodding to right and left as casually and good-naturedly as if he
were passing through a crowd at a fair. He pushed through, evidently
looking for someone.

Natasha looked joyfully at the familiar face of Pierre, "the buffoon,"
as Peronskaya had called him, and knew he was looking for them, and for
her in particular. He had promised to be at the ball and introduce
partners to her.

But before he reached them Pierre stopped beside a very handsome, dark
man of middle height, and in a white uniform, who stood by a window
talking to a tall man wearing stars and a ribbon. Natasha at once
recognized the shorter and younger man in the white uniform: it was
Bolkonski, who seemed to her to have grown much younger, happier, and
better-looking.

"There's someone else we know--Bolkonski, do you see, Mamma?" said
Natasha, pointing out Prince Andrew. "You remember, he stayed a night
with us at Otradnoe."

"Oh, you know him?" said Peronskaya. "I can't bear him. Il fait a
present la pluie et le beau temps. * He's too proud for anything. Takes
after his father. And he's hand in glove with Speranski, writing some
project or other. Just look how he treats the ladies! There's one
talking to him and he has turned away," she said, pointing at him. "I'd
give it to him if he treated me as he does those ladies."


* "He is all the rage just now."




CHAPTER XVI

Suddenly everybody stirred, began talking, and pressed forward and then
back, and between the two rows, which separated, the Emperor entered to
the sounds of music that had immediately struck up. Behind him walked
his host and hostess. He walked in rapidly, bowing to right and left as
if anxious to get the first moments of the reception over. The band
played the polonaise in vogue at that time on account of the words that
had been set to it, beginning: "Alexander, Elisaveta, all our hearts you
ravish quite..." The Emperor passed on to the drawing room, the crowd
made a rush for the doors, and several persons with excited faces
hurried there and back again. Then the crowd hastily retired from the
drawing-room door, at which the Emperor reappeared talking to the
hostess. A young man, looking distraught, pounced down on the ladies,
asking them to move aside. Some ladies, with faces betraying complete
forgetfulness of all the rules of decorum, pushed forward to the
detriment of their toilets. The men began to choose partners and take
their places for the polonaise.

Everyone moved back, and the Emperor came smiling out of the drawing
room leading his hostess by the hand but not keeping time to the music.
The host followed with Marya Antonovna Naryshkina; then came
ambassadors, ministers, and various generals, whom Peronskaya diligently
named. More than half the ladies already had partners and were taking
up, or preparing to take up, their positions for the polonaise. Natasha
felt that she would be left with her mother and Sonya among a minority
of women who crowded near the wall, not having been invited to dance.
She stood with her slender arms hanging down, her scarcely defined bosom
rising and falling regularly, and with bated breath and glittering,
frightened eyes gazed straight before her, evidently prepared for the
height of joy or misery. She was not concerned about the Emperor or any
of those great people whom Peronskaya was pointing out--she had but one
thought: "Is it possible no one will ask me, that I shall not be among
the first to dance? Is it possible that not one of all these men will
notice me? They do not even seem to see me, or if they do they look as
if they were saying, 'Ah, she's not the one I'm after, so it's not worth
looking at her!' No, it's impossible," she thought. "They must know how
I long to dance, how splendidly I dance, and how they would enjoy
dancing with me."

The strains of the polonaise, which had continued for a considerable
time, had begun to sound like a sad reminiscence to Natasha's ears. She
wanted to cry. Peronskaya had left them. The count was at the other end
of the room. She and the countess and Sonya were standing by themselves
as in the depths of a forest amid that crowd of strangers, with no one
interested in them and not wanted by anyone. Prince Andrew with a lady
passed by, evidently not recognizing them. The handsome Anatole was
smilingly talking to a partner on his arm and looked at Natasha as one
looks at a wall. Boris passed them twice and each time turned away. Berg
and his wife, who were not dancing, came up to them.

This family gathering seemed humiliating to Natasha--as if there were
nowhere else for the family to talk but here at the ball. She did not
listen to or look at Vera, who was telling her something about her own
green dress.

At last the Emperor stopped beside his last partner (he had danced with
three) and the music ceased. A worried aide-de-camp ran up to the
Rostovs requesting them to stand farther back, though as it was they
were already close to the wall, and from the gallery resounded the
distinct, precise, enticingly rhythmical strains of a waltz. The Emperor
looked smilingly down the room. A minute passed but no one had yet begun
dancing. An aide-de-camp, the Master of Ceremonies, went up to Countess
Bezukhova and asked her to dance. She smilingly raised her hand and laid
it on his shoulder without looking at him. The aide-de-camp, an adept in
his art, grasping his partner firmly round her waist, with confident
deliberation started smoothly, gliding first round the edge of the
circle, then at the corner of the room he caught Helene's left hand and
turned her, the only sound audible, apart from the ever-quickening
music, being the rhythmic click of the spurs on his rapid, agile feet,
while at every third beat his partner's velvet dress spread out and
seemed to flash as she whirled round. Natasha gazed at them and was
ready to cry because it was not she who was dancing that first turn of
the waltz.

Prince Andrew, in the white uniform of a cavalry colonel, wearing
stockings and dancing shoes, stood looking animated and bright in the
front row of the circle not far from the Rostovs. Baron Firhoff was
talking to him about the first sitting of the Council of State to be
held next day. Prince Andrew, as one closely connected with Speranski
and participating in the work of the legislative commission, could give
reliable information about that sitting, concerning which various rumors
were current. But not listening to what Firhoff was saying, he was
gazing now at the sovereign and now at the men intending to dance who
had not yet gathered courage to enter the circle.

Prince Andrew was watching these men abashed by the Emperor's presence,
and the women who were breathlessly longing to be asked to dance.

Pierre came up to him and caught him by the arm.

"You always dance. I have a protegee, the young Rostova, here. Ask her,"
he said.

"Where is she?" asked Bolkonski. "Excuse me!" he added, turning to the
baron, "we will finish this conversation elsewhere--at a ball one must
dance." He stepped forward in the direction Pierre indicated. The
despairing, dejected expression of Natasha's face caught his eye. He
recognized her, guessed her feelings, saw that it was her debut,
remembered her conversation at the window, and with an expression of
pleasure on his face approached Countess Rostova.

"Allow me to introduce you to my daughter," said the countess, with
heightened color.

"I have the pleasure of being already acquainted, if the countess
remembers me," said Prince Andrew with a low and courteous bow quite
belying Peronskaya's remarks about his rudeness, and approaching Natasha
he held out his arm to grasp her waist before he had completed his
invitation. He asked her to waltz. That tremulous expression on
Natasha's face, prepared either for despair or rapture, suddenly
brightened into a happy, grateful, childlike smile.

"I have long been waiting for you," that frightened happy little girl
seemed to say by the smile that replaced the threatened tears, as she
raised her hand to Prince Andrew's shoulder. They were the second couple
to enter the circle. Prince Andrew was one of the best dancers of his
day and Natasha danced exquisitely. Her little feet in their white satin
dancing shoes did their work swiftly, lightly, and independently of
herself, while her face beamed with ecstatic happiness. Her slender bare
arms and neck were not beautiful--compared to Helene's her shoulders
looked thin and her bosom undeveloped. But Helene seemed, as it were,
hardened by a varnish left by the thousands of looks that had scanned
her person, while Natasha was like a girl exposed for the first time,
who would have felt very much ashamed had she not been assured that this
was absolutely necessary.

Prince Andrew liked dancing, and wishing to escape as quickly as
possible from the political and clever talk which everyone addressed to
him, wishing also to break up the circle of restraint he disliked,
caused by the Emperor's presence, he danced, and had chosen Natasha
because Pierre pointed her out to him and because she was the first
pretty girl who caught his eye; but scarcely had he embraced that
slender supple figure and felt her stirring so close to him and smiling
so near him than the wine of her charm rose to his head, and he felt
himself revived and rejuvenated when after leaving her he stood
breathing deeply and watching the other dancers.




CHAPTER XVII

After Prince Andrew, Boris came up to ask Natasha for a dance, and then
the aide-de-camp who had opened the ball, and several other young men,
so that, flushed and happy, and passing on her superfluous partners to
Sonya, she did not cease dancing all the evening. She noticed and saw
nothing of what occupied everyone else. Not only did she fail to notice
that the Emperor talked a long time with the French ambassador, and how
particularly gracious he was to a certain lady, or that Prince So-and-so
and So-and-so did and said this and that, and that Helene had great
success and was honored by the special attention of So-and-so, but she
did not even see the Emperor, and only noticed that he had gone because
the ball became livelier after his departure. For one of the merry
cotillions before supper Prince Andrew was again her partner. He
reminded her of their first encounter in the Otradnoe avenue, and how
she had been unable to sleep that moonlight night, and told her how he
had involuntarily overheard her. Natasha blushed at that recollection
and tried to excuse herself, as if there had been something to be
ashamed of in what Prince Andrew had overheard.

Like all men who have grown up in society, Prince Andrew liked meeting
someone there not of the conventional society stamp. And such was
Natasha, with her surprise, her delight, her shyness, and even her
mistakes in speaking French. With her he behaved with special care and
tenderness, sitting beside her and talking of the simplest and most
unimportant matters; he admired her shy grace. In the middle of the
cotillion, having completed one of the figures, Natasha, still out of
breath, was returning to her seat when another dancer chose her. She was
tired and panting and evidently thought of declining, but immediately
put her hand gaily on the man's shoulder, smiling at Prince Andrew.

"I'd be glad to sit beside you and rest: I'm tired; but you see how they
keep asking me, and I'm glad of it, I'm happy and I love everybody, and
you and I understand it all," and much, much more was said in her smile.
When her partner left her Natasha ran across the room to choose two
ladies for the figure.

"If she goes to her cousin first and then to another lady, she will be
my wife," said Prince Andrew to himself quite to his own surprise, as he
watched her. She did go first to her cousin.

"What rubbish sometimes enters one's head!" thought Prince Andrew, "but
what is certain is that that girl is so charming, so original, that she
won't be dancing here a month before she will be married.... Such as she
are rare here," he thought, as Natasha, readjusting a rose that was
slipping on her bodice, settled herself beside him.

When the cotillion was over the old count in his blue coat came up to
the dancers. He invited Prince Andrew to come and see them, and asked
his daughter whether she was enjoying herself. Natasha did not answer at
once but only looked up with a smile that said reproachfully: "How can
you ask such a question?"

"I have never enjoyed myself so much before!" she said, and Prince
Andrew noticed how her thin arms rose quickly as if to embrace her
father and instantly dropped again. Natasha was happier than she had
ever been in her life. She was at that height of bliss when one becomes
completely kind and good and does not believe in the possibility of
evil, unhappiness, or sorrow.

At that ball Pierre for the first time felt humiliated by the position
his wife occupied in court circles. He was gloomy and absent-minded. A
deep furrow ran across his forehead, and standing by a window he stared
over his spectacles seeing no one.

On her way to supper Natasha passed him.

Pierre's gloomy, unhappy look struck her. She stopped in front of him.
She wished to help him, to bestow on him the superabundance of her own
happiness.

"How delightful it is, Count!" said she. "Isn't it?"

Pierre smiled absent-mindedly, evidently not grasping what she said.

"Yes, I am very glad," he said.

"How can people be dissatisfied with anything?" thought Natasha.
"Especially such a capital fellow as Bezukhov!" In Natasha's eyes all
the people at the ball alike were good, kind, and splendid people,
loving one another; none of them capable of injuring another--and so
they ought all to be happy.




CHAPTER XVIII

Next day Prince Andrew thought of the ball, but his mind did not dwell
on it long. "Yes, it was a very brilliant ball," and then... "Yes, that
little Rostova is very charming. There's something fresh, original, un-
Petersburg-like about her that distinguishes her." That was all he
thought about yesterday's ball, and after his morning tea he set to
work.

But either from fatigue or want of sleep he was ill-disposed for work
and could get nothing done. He kept criticizing his own work, as he
often did, and was glad when he heard someone coming.

The visitor was Bitski, who served on various committees, frequented all
the societies in Petersburg, and a passionate devotee of the new ideas
and of Speranski, and a diligent Petersburg newsmonger--one of those men
who choose their opinions like their clothes according to the fashion,
but who for that very reason appear to be the warmest partisans. Hardly
had he got rid of his hat before he ran into Prince Andrew's room with a
preoccupied air and at once began talking. He had just heard particulars
of that morning's sitting of the Council of State opened by the Emperor,
and he spoke of it enthusiastically. The Emperor's speech had been
extraordinary. It had been a speech such as only constitutional monarchs
deliver. "The Sovereign plainly said that the Council and Senate are
estates of the realm, he said that the government must rest not on
authority but on secure bases. The Emperor said that the fiscal system
must be reorganized and the accounts published," recounted Bitski,
emphasizing certain words and opening his eyes significantly.

"Ah, yes! Today's events mark an epoch, the greatest epoch in our
history," he concluded.

Prince Andrew listened to the account of the opening of the Council of
State, which he had so impatiently awaited and to which he had attached
such importance, and was surprised that this event, now that it had
taken place, did not affect him, and even seemed quite insignificant. He
listened with quiet irony to Bitski's enthusiastic account of it. A very
simple thought occurred to him: "What does it matter to me or to Bitski
what the Emperor was pleased to say at the Council? Can all that make me
any happier or better?"

And this simple reflection suddenly destroyed all the interest Prince
Andrew had felt in the impending reforms. He was going to dine that
evening at Speranski's, "with only a few friends," as the host had said
when inviting him. The prospect of that dinner in the intimate home
circle of the man he so admired had greatly interested Prince Andrew,
especially as he had not yet seen Speranski in his domestic
surroundings, but now he felt disinclined to go to it.

At the appointed hour, however, he entered the modest house Speranski
owned in the Taurida Gardens. In the parqueted dining room this small
house, remarkable for its extreme cleanliness (suggesting that of a
monastery), Prince Andrew, who was rather late, found the friendly
gathering of Speranski's intimate acquaintances already assembled at
five o'clock. There were no ladies present except Speranski's little
daughter (long-faced like her father) and her governess. The other
guests were Gervais, Magnitski, and Stolypin. While still in the
anteroom Prince Andrew heard loud voices and a ringing staccato laugh--a
laugh such as one hears on the stage. Someone--it sounded like
Speranski--was distinctly ejaculating ha-ha-ha. Prince Andrew had never
before heard Speranski's famous laugh, and this ringing, high-pitched
laughter from a statesman made a strange impression on him.

He entered the dining room. The whole company were standing between two
windows at a small table laid with hors-d'oeuvres. Speranski, wearing a
gray swallow-tail coat with a star on the breast, and evidently still
the same waistcoat and high white stock he had worn at the meeting of
the Council of State, stood at the table with a beaming countenance. His
guests surrounded him. Magnitski, addressing himself to Speranski, was
relating an anecdote, and Speranski was laughing in advance at what
Magnitski was going to say. When Prince Andrew entered the room
Magnitski's words were again crowned by laughter. Stolypin gave a deep
bass guffaw as he munched a piece of bread and cheese. Gervais laughed
softly with a hissing chuckle, and Speranski in a high-pitched staccato
manner.

Still laughing, Speranski held out his soft white hand to Prince Andrew.

"Very pleased to see you, Prince," he said. "One moment..." he went on,
turning to Magnitski and interrupting his story. "We have agreed that
this is a dinner for recreation, with not a word about business!" and
turning again to the narrator he began to laugh afresh.

Prince Andrew looked at the laughing Speranski with astonishment,
regret, and disillusionment. It seemed to him that this was not
Speranski but someone else. Everything that had formerly appeared
mysterious and fascinating in Speranski suddenly became plain and
unattractive.

At dinner the conversation did not cease for a moment and seemed to
consist of the contents of a book of funny anecdotes. Before Magnitski
had finished his story someone else was anxious to relate something
still funnier. Most of the anecdotes, if not relating to the state
service, related to people in the service. It seemed that in this
company the insignificance of those people was so definitely accepted
that the only possible attitude toward them was one of good humored
ridicule. Speranski related how at the Council that morning a deaf
dignitary, when asked his opinion, replied that he thought so too.
Gervais gave a long account of an official revision, remarkable for the
stupidity of everybody concerned. Stolypin, stuttering, broke into the
conversation and began excitedly talking of the abuses that existed
under the former order of things--threatening to give a serious turn to
the conversation. Magnitski starting quizzing Stolypin about his
vehemence. Gervais intervened with a joke, and the talk reverted to its
former lively tone.

Evidently Speranski liked to rest after his labors and find amusement in
a circle of friends, and his guests, understanding his wish, tried to
enliven him and amuse themselves. But their gaiety seemed to Prince
Andrew mirthless and tiresome. Speranski's high-pitched voice struck him
unpleasantly, and the incessant laughter grated on him like a false
note. Prince Andrew did not laugh and feared that he would be a damper
on the spirits of the company, but no one took any notice of his being
out of harmony with the general mood. They all seemed very gay.

He tried several times to join in the conversation, but his remarks were
tossed aside each time like a cork thrown out of the water, and he could
not jest with them.

There was nothing wrong or unseemly in what they said, it was witty and
might have been funny, but it lacked just that something which is the
salt of mirth, and they were not even aware that such a thing existed.

After dinner Speranski's daughter and her governess rose. He patted the
little girl with his white hand and kissed her. And that gesture, too,
seemed unnatural to Prince Andrew.

The men remained at table over their port--English fashion. In the midst
of a conversation that was started about Napoleon's Spanish affairs,
which they all agreed in approving, Prince Andrew began to express a
contrary opinion. Speranski smiled and, with an evident wish to prevent
the conversation from taking an unpleasant course, told a story that had
no connection with the previous conversation. For a few moments all were
silent.

Having sat some time at table, Speranski corked a bottle of wine and,
remarking, "Nowadays good wine rides in a carriage and pair," passed it
to the servant and got up. All rose and continuing to talk loudly went
into the drawing room. Two letters brought by a courier were handed to
Speranski and he took them to his study. As soon as he had left the room
the general merriment stopped and the guests began to converse sensibly
and quietly with one another.

"Now for the recitation!" said Speranski on returning from his study. "A
wonderful talent!" he said to Prince Andrew, and Magnitski immediately
assumed a pose and began reciting some humorous verses in French which
he had composed about various well-known Petersburg people. He was
interrupted several times by applause. When the verses were finished
Prince Andrew went up to Speranski and took his leave.

"Where are you off to so early?" asked Speranski.

"I promised to go to a reception."

They said no more. Prince Andrew looked closely into those mirrorlike,
impenetrable eyes, and felt that it had been ridiculous of him to have
expected anything from Speranski and from any of his own activities
connected with him, or ever to have attributed importance to what
Speranski was doing. That precise, mirthless laughter rang in Prince
Andrew's ears long after he had left the house.

When he reached home Prince Andrew began thinking of his life in
Petersburg during those last four months as if it were something new. He
recalled his exertions and solicitations, and the history of his project
of army reform, which had been accepted for consideration and which they
were trying to pass over in silence simply because another, a very poor
one, had already been prepared and submitted to the Emperor. He thought
of the meetings of a committee of which Berg was a member. He remembered
how carefully and at what length everything relating to form and
procedure was discussed at those meetings, and how sedulously and
promptly all that related to the gist of the business was evaded. He
recalled his labors on the Legal Code, and how painstakingly he had
translated the articles of the Roman and French codes into Russian, and
he felt ashamed of himself. Then he vividly pictured to himself
Bogucharovo, his occupations in the country, his journey to Ryazan; he
remembered the peasants and Dron the village elder, and mentally
applying to them the Personal Rights he had divided into paragraphs, he
felt astonished that he could have spent so much time on such useless
work.




CHAPTER XIX

Next day Prince Andrew called at a few houses he had not visited before,
and among them at the Rostovs' with whom he had renewed acquaintance at
the ball. Apart from considerations of politeness which demanded the
call, he wanted to see that original, eager girl who had left such a
pleasant impression on his mind, in her own home.

Natasha was one of the first to meet him. She was wearing a dark-blue
house dress in which Prince Andrew thought her even prettier than in her
ball dress. She and all the Rostov family welcomed him as an old friend,
simply and cordially. The whole family, whom he had formerly judged
severely, now seemed to him to consist of excellent, simple, and kindly
people. The old count's hospitality and good nature, which struck one
especially in Petersburg as a pleasant surprise, were such that Prince
Andrew could not refuse to stay to dinner. "Yes," he thought, "they are
capital people, who of course have not the slightest idea what a
treasure they possess in Natasha; but they are kindly folk and form the
best possible setting for this strikingly poetic, charming girl,
overflowing with life!"

In Natasha Prince Andrew was conscious of a strange world completely
alien to him and brimful of joys unknown to him, a different world, that
in the Otradnoe avenue and at the window that moonlight night had
already begun to disconcert him. Now this world disconcerted him no
longer and was no longer alien to him, but he himself having entered it
found in it a new enjoyment.

After dinner Natasha, at Prince Andrew's request, went to the clavichord
and began singing. Prince Andrew stood by a window talking to the ladies
and listened to her. In the midst of a phrase he ceased speaking and
suddenly felt tears choking him, a thing he had thought impossible for
him. He looked at Natasha as she sang, and something new and joyful
stirred in his soul. He felt happy and at the same time sad. He had
absolutely nothing to weep about yet he was ready to weep. What about?
His former love? The little princess? His disillusionments?... His hopes
for the future?... Yes and no. The chief reason was a sudden, vivid
sense of the terrible contrast between something infinitely great and
illimitable within him and that limited and material something that he,
and even she, was. This contrast weighed on and yet cheered him while
she sang.

As soon as Natasha had finished she went up to him and asked how he
liked her voice. She asked this and then became confused, feeling that
she ought not to have asked it. He smiled, looking at her, and said he
liked her singing as he liked everything she did.

Prince Andrew left the Rostovs' late in the evening. He went to bed from
habit, but soon realized that he could not sleep. Having lit his candle
he sat up in bed, then got up, then lay down again not at all troubled
by his sleeplessness: his soul was as fresh and joyful as if he had
stepped out of a stuffy room into God's own fresh air. It did not enter
his head that he was in love with Natasha; he was not thinking about
her, but only picturing her to himself, and in consequence all life
appeared in a new light. "Why do I strive, why do I toil in this narrow,
confined frame, when life, all life with all its joys, is open to me?"
said he to himself. And for the first time for a very long while he
began making happy plans for the future. He decided that he must attend
to his son's education by finding a tutor and putting the boy in his
charge, then he ought to retire from the service and go abroad, and see
England, Switzerland and Italy. "I must use my freedom while I feel so
much strength and youth in me," he said to himself. "Pierre was right
when he said one must believe in the possibility of happiness in order
to be happy, and now I do believe in it. Let the dead bury their dead,
but while one has life one must live and be happy!" thought he.




CHAPTER XX

One morning Colonel Berg, whom Pierre knew as he knew everybody in
Moscow and Petersburg, came to see him. Berg arrived in an immaculate
brand-new uniform, with his hair pomaded and brushed forward over his
temples as the Emperor Alexander wore his hair.

"I have just been to see the countess, your wife. Unfortunately she
could not grant my request, but I hope, Count, I shall be more fortunate
with you," he said with a smile.

"What is it you wish, Colonel? I am at your service."

"I have now quite settled in my new rooms, Count" (Berg said this with
perfect conviction that this information could not but be agreeable),
"and so I wish to arrange just a small party for my own and my wife's
friends." (He smiled still more pleasantly.) "I wished to ask the
countess and you to do me the honor of coming to tea and to supper."

Only Countess Helene, considering the society of such people as the
Bergs beneath her, could be cruel enough to refuse such an invitation.
Berg explained so clearly why he wanted to collect at his house a small
but select company, and why this would give him pleasure, and why though
he grudged spending money on cards or anything harmful, he was prepared
to run into some expense for the sake of good society--that Pierre could
not refuse, and promised to come.

"But don't be late, Count, if I may venture to ask; about ten minutes to
eight, please. We shall make up a rubber. Our general is coming. He is
very good to me. We shall have supper, Count. So you will do me the
favor."

Contrary to his habit of being late, Pierre on that day arrived at the
Bergs' house, not at ten but at fifteen minutes to eight.

Having prepared everything necessary for the party, the Bergs were ready
for their guests' arrival.

In their new, clean, and light study with its small busts and pictures
and new furniture sat Berg and his wife. Berg, closely buttoned up in
his new uniform, sat beside his wife explaining to her that one always
could and should be acquainted with people above one, because only then
does one get satisfaction from acquaintances.

"You can get to know something, you can ask for something. See how I
managed from my first promotion." (Berg measured his life not by years
but by promotions.) "My comrades are still nobodies, while I am only
waiting for a vacancy to command a regiment, and have the happiness to
be your husband." (He rose and kissed Vera's hand, and on the way to her
straightened out a turned-up corner of the carpet.) "And how have I
obtained all this? Chiefly by knowing how to choose my aquaintances. It
goes without saying that one must be conscientious and methodical."

Berg smiled with a sense of his superiority over a weak woman, and
paused, reflecting that this dear wife of his was after all but a weak
woman who could not understand all that constitutes a man's dignity,
what it was ein Mann zu sein. * Vera at the same time smiling with a
sense of superiority over her good, conscientious husband, who all the
same understood life wrongly, as according to Vera all men did. Berg,
judging by his wife, thought all women weak and foolish. Vera, judging
only by her husband and generalizing from that observation, supposed
that all men, though they understand nothing and are conceited and
selfish, ascribe common sense to themselves alone.


* To be a man.

Berg rose and embraced his wife carefully, so as not to crush her lace
fichu for which he had paid a good price, kissing her straight on the
lips.

"The only thing is, we mustn't have children too soon," he continued,
following an unconscious sequence of ideas.

"Yes," answered Vera, "I don't at all want that. We must live for
society."

"Princess Yusupova wore one exactly like this," said Berg, pointing to
the fichu with a happy and kindly smile.

Just then Count Bezukhov was announced. Husband and wife glanced at one
another, both smiling with self-satisfaction, and each mentally claiming
the honor of this visit.

"This is what comes of knowing how to make acquaintances," thought Berg.
"This is what comes of knowing how to conduct oneself."

"But please don't interrupt me when I am entertaining the guests," said
Vera, "because I know what interests each of them and what to say to
different people."

Berg smiled again.

"It can't be helped: men must sometimes have masculine conversation,"
said he.

They received Pierre in their small, new drawing-room, where it was
impossible to sit down anywhere without disturbing its symmetry,
neatness, and order; so it was quite comprehensible and not strange that
Berg, having generously offered to disturb the symmetry of an armchair
or of the sofa for his dear guest, but being apparently painfully
undecided on the matter himself, eventually left the visitor to settle
the question of selection. Pierre disturbed the symmetry by moving a
chair for himself, and Berg and Vera immediately began their evening
party, interrupting each other in their efforts to entertain their
guest.

Vera, having decided in her own mind that Pierre ought to be entertained
with conversation about the French embassy, at once began accordingly.
Berg, having decided that masculine conversation was required,
interrupted his wife's remarks and touched on the question of the war
with Austria, and unconsciously jumped from the general subject to
personal considerations as to the proposals made him to take part in the
Austrian campaign and the reasons why he had declined them. Though the
conversation was very incoherent and Vera was angry at the intrusion of
the masculine element, both husband and wife felt with satisfaction
that, even if only one guest was present, their evening had begun very
well and was as like as two peas to every other evening party with its
talk, tea, and lighted candles.

Before long Boris, Berg's old comrade, arrived. There was a shade of
condescension and patronage in his treatment of Berg and Vera. After
Boris came a lady with the colonel, then the general himself, then the
Rostovs, and the party became unquestionably exactly like all other
evening parties. Berg and Vera could not repress their smiles of
satisfaction at the sight of all this movement in their drawing room, at
the sound of the disconnected talk, the rustling of dresses, and the
bowing and scraping. Everything was just as everybody always has it,
especially so the general, who admired the apartment, patted Berg on the
shoulder, and with parental authority superintended the setting out of
the table for boston. The general sat down by Count Ilya Rostov, who was
next to himself the most important guest. The old people sat with the
old, the young with the young, and the hostess at the tea table, on
which stood exactly the same kind of cakes in a silver cake basket as
the Panins had at their party. Everything was just as it was everywhere
else.




CHAPTER XXI

Pierre, as one of the principal guests, had to sit down to boston with
Count Rostov, the general, and the colonel. At the card table he
happened to be directly facing Natasha, and was struck by a curious
change that had come over her since the ball. She was silent, and not
only less pretty than at the ball, but only redeemed from plainness by
her look of gentle indifference to everything around.

"What's the matter with her?" thought Pierre, glancing at her. She was
sitting by her sister at the tea table, and reluctantly, without looking
at him, made some reply to Boris who sat down beside her. After playing
out a whole suit and to his partner's delight taking five tricks,
Pierre, hearing greetings and the steps of someone who had entered the
room while he was picking up his tricks, glanced again at Natasha.

"What has happened to her?" he asked himself with still greater
surprise.

Prince Andrew was standing before her, saying something to her with a
look of tender solicitude. She, having raised her head, was looking up
at him, flushed and evidently trying to master her rapid breathing. And
the bright glow of some inner fire that had been suppressed was again
alight in her. She was completely transformed and from a plain girl had
again become what she had been at the ball.

Prince Andrew went up to Pierre, and the latter noticed a new and
youthful expression in his friend's face.

Pierre changed places several times during the game, sitting now with
his back to Natasha and now facing her, but during the whole of the six
rubbers he watched her and his friend.

"Something very important is happening between them," thought Pierre,
and a feeling that was both joyful and painful agitated him and made him
neglect the game.

After six rubbers the general got up, saying that it was no use playing
like that, and Pierre was released. Natasha on one side was talking with
Sonya and Boris, and Vera with a subtle smile was saying something to
Prince Andrew. Pierre went up to his friend and, asking whether they
were talking secrets, sat down beside them. Vera, having noticed Prince
Andrew's attentions to Natasha, decided that at a party, a real evening
party, subtle allusions to the tender passion were absolutely necessary
and, seizing a moment when Prince Andrew was alone, began a conversation
with him about feelings in general and about her sister. With so
intellectual a guest as she considered Prince Andrew to be, she felt
that she had to employ her diplomatic tact.

When Pierre went up to them he noticed that Vera was being carried away
by her self-satisfied talk, but that Prince Andrew seemed embarrassed, a
thing that rarely happened with him.

"What do you think?" Vera was saying with an arch smile. "You are so
discerning, Prince, and understand people's characters so well at a
glance. What do you think of Natalie? Could she be constant in her
attachments? Could she, like other women" (Vera meant herself), "love a
man once for all and remain true to him forever? That is what I consider
true love. What do you think, Prince?"

"I know your sister too little," replied Prince Andrew, with a sarcastic
smile under which he wished to hide his embarrassment, "to be able to
solve so delicate a question, and then I have noticed that the less
attractive a woman is the more constant she is likely to be," he added,
and looked up at Pierre who was just approaching them.

"Yes, that is true, Prince. In our days," continued Vera--mentioning
"our days" as people of limited intelligence are fond of doing,
imagining that they have discovered and appraised the peculiarities of
"our days" and that human characteristics change with the times--"in our
days a girl has so much freedom that the pleasure of being courted often
stifles real feeling in her. And it must be confessed that Natalie is
very susceptible." This return to the subject of Natalie caused Prince
Andrew to knit his brows with discomfort: he was about to rise, but Vera
continued with a still more subtle smile:

"I think no one has been more courted than she," she went on, "but till
quite lately she never cared seriously for anyone. Now you know, Count,"
she said to Pierre, "even our dear cousin Boris, who, between ourselves,
was very far gone in the land of tenderness..." (alluding to a map of
love much in vogue at that time).

Prince Andrew frowned and remained silent.

"You are friendly with Boris, aren't you?" asked Vera.

"Yes, I know him..."

"I expect he has told you of his childish love for Natasha?"

"Oh, there was childish love?" suddenly asked Prince Andrew, blushing
unexpectedly.

"Yes, you know between cousins intimacy often leads to love. Le
cousinage est un dangereux voisinage. * Don't you think so?"


* "Cousinhood is a dangerous neighborhood."

"Oh, undoubtedly!" said Prince Andrew, and with sudden and unnatural
liveliness he began chaffing Pierre about the need to be very careful
with his fifty-year-old Moscow cousins, and in the midst of these
jesting remarks he rose, taking Pierre by the arm, and drew him aside.

"Well?" asked Pierre, seeing his friend's strange animation with
surprise, and noticing the glance he turned on Natasha as he rose.

"I must... I must have a talk with you," said Prince Andrew. "You know
that pair of women's gloves?" (He referred to the masonic gloves given
to a newly initiated Brother to present to the woman he loved.) "I...
but no, I will talk to you later on," and with a strange light in his
eyes and restlessness in his movements, Prince Andrew approached Natasha
and sat down beside her. Pierre saw how Prince Andrew asked her
something and how she flushed as she replied.

But at that moment Berg came to Pierre and began insisting that he
should take part in an argument between the general and the colonel on
the affairs in Spain.

Berg was satisfied and happy. The smile of pleasure never left his face.
The party was very successful and quite like other parties he had seen.
Everything was similar: the ladies' subtle talk, the cards, the general
raising his voice at the card table, and the samovar and the tea cakes;
only one thing was lacking that he had always seen at the evening
parties he wished to imitate. They had not yet had a loud conversation
among the men and a dispute about something important and clever. Now
the general had begun such a discussion and so Berg drew Pierre to it.




CHAPTER XXII

Next day, having been invited by the count, Prince Andrew dined with the
Rostovs and spent the rest of the day there.

Everyone in the house realized for whose sake Prince Andrew came, and
without concealing it he tried to be with Natasha all day. Not only in
the soul of the frightened yet happy and enraptured Natasha, but in the
whole house, there was a feeling of awe at something important that was
bound to happen. The countess looked with sad and sternly serious eyes
at Prince Andrew when he talked to Natasha and timidly started some
artificial conversation about trifles as soon as he looked her way.
Sonya was afraid to leave Natasha and afraid of being in the way when
she was with them. Natasha grew pale, in a panic of expectation, when
she remained alone with him for a moment. Prince Andrew surprised her by
his timidity. She felt that he wanted to say something to her but could
not bring himself to do so.

In the evening, when Prince Andrew had left, the countess went up to
Natasha and whispered: "Well, what?"

"Mamma! For heaven's sake don't ask me anything now! One can't talk
about that," said Natasha.

But all the same that night Natasha, now agitated and now frightened,
lay a long time in her mother's bed gazing straight before her. She told
her how he had complimented her, how he told her he was going abroad,
asked her where they were going to spend the summer, and then how he had
asked her about Boris.

"But such a... such a... never happened to me before!" she said. "Only I
feel afraid in his presence. I am always afraid when I'm with him. What
does that mean? Does it mean that it's the real thing? Yes? Mamma, are
you asleep?"

"No, my love; I am frightened myself," answered her mother. "Now go!"

"All the same I shan't sleep. What silliness, to sleep! Mummy! Mummy!
such a thing never happened to me before," she said, surprised and
alarmed at the feeling she was aware of in herself. "And could we ever
have thought!..."

It seemed to Natasha that even at the time she first saw Prince Andrew
at Otradnoe she had fallen in love with him. It was as if she feared
this strange, unexpected happiness of meeting again the very man she had
then chosen (she was firmly convinced she had done so) and of finding
him, as it seemed, not indifferent to her.

"And it had to happen that he should come specially to Petersburg while
we are here. And it had to happen that we should meet at that ball. It
is fate. Clearly it is fate that everything led up to this! Already
then, directly I saw him I felt something peculiar."

"What else did he say to you? What are those verses? Read them..." said
her mother, thoughtfully, referring to some verses Prince Andrew had
written in Natasha's album.

"Mamma, one need not be ashamed of his being a widower?"

"Don't, Natasha! Pray to God. 'Marriages are made in heaven,'" said her
mother.

"Darling Mummy, how I love you! How happy I am!" cried Natasha, shedding
tears of joy and excitement and embracing her mother.

At that very time Prince Andrew was sitting with Pierre and telling him
of his love for Natasha and his firm resolve to make her his wife.

That day Countess Helene had a reception at her house. The French
ambassador was there, and a foreign prince of the blood who had of late
become a frequent visitor of hers, and many brilliant ladies and
gentlemen. Pierre, who had come downstairs, walked through the rooms and
struck everyone by his preoccupied, absent-minded, and morose air.

Since the ball he had felt the approach of a fit of nervous depression
and had made desperate efforts to combat it. Since the intimacy of his
wife with the royal prince, Pierre had unexpectedly been made a
gentleman of the bedchamber, and from that time he had begun to feel
oppressed and ashamed in court society, and dark thoughts of the vanity
of all things human came to him oftener than before. At the same time
the feeling he had noticed between his protegee Natasha and Prince
Andrew accentuated his gloom by the contrast between his own position
and his friend's. He tried equally to avoid thinking about his wife, and
about Natasha and Prince Andrew; and again everything seemed to him
insignificant in comparison with eternity; again the question: for what?
presented itself; and he forced himself to work day and night at masonic
labors, hoping to drive away the evil spirit that threatened him. Toward
midnight, after he had left the countess' apartments, he was sitting
upstairs in a shabby dressing gown, copying out the original transaction
of the Scottish lodge of Freemasons at a table in his low room cloudy
with tobacco smoke, when someone came in. It was Prince Andrew.

"Ah, it's you!" said Pierre with a preoccupied, dissatisfied air. "And
I, you see, am hard at it." He pointed to his manuscript book with that
air of escaping from the ills of life with which unhappy people look at
their work.

Prince Andrew, with a beaming, ecstatic expression of renewed life on
his face, paused in front of Pierre and, not noticing his sad look,
smiled at him with the egotism of joy.

"Well, dear heart," said he, "I wanted to tell you about it yesterday
and I have come to do so today. I never experienced anything like it
before. I am in love, my friend!"

Suddenly Pierre heaved a deep sigh and dumped his heavy person down on
the sofa beside Prince Andrew.

"With Natasha Rostova, yes?" said he.

"Yes, yes! Who else should it be? I should never have believed it, but
the feeling is stronger than I. Yesterday I tormented myself and
suffered, but I would not exchange even that torment for anything in the
world, I have not lived till now. At last I live, but I can't live
without her! But can she love me?... I am too old for her.... Why don't
you speak?"

"I? I? What did I tell you?" said Pierre suddenly, rising and beginning
to pace up and down the room. "I always thought it.... That girl is such
a treasure... she is a rare girl.... My dear friend, I entreat you,
don't philosophize, don't doubt, marry, marry, marry.... And I am sure
there will not be a happier man than you."

"But what of her?"

"She loves you."

"Don't talk rubbish..." said Prince Andrew, smiling and looking into
Pierre's eyes.

"She does, I know," Pierre cried fiercely.

"But do listen," returned Prince Andrew, holding him by the arm. "Do you
know the condition I am in? I must talk about it to someone."

"Well, go on, go on. I am very glad," said Pierre, and his face really
changed, his brow became smooth, and he listened gladly to Prince
Andrew. Prince Andrew seemed, and really was, quite a different, quite a
new man. Where was his spleen, his contempt for life, his
disillusionment? Pierre was the only person to whom he made up his mind
to speak openly; and to him he told all that was in his soul. Now he
boldly and lightly made plans for an extended future, said he could not
sacrifice his own happiness to his father's caprice, and spoke of how he
would either make his father consent to this marriage and love her, or
would do without his consent; then he marveled at the feeling that had
mastered him as at something strange, apart from and independent of
himself.

"I should not have believed anyone who told me that I was capable of
such love," said Prince Andrew. "It is not at all the same feeling that
I knew in the past. The whole world is now for me divided into two
halves: one half is she, and there all is joy, hope, light: the other
half is everything where she is not, and there is all gloom and
darkness...."

"Darkness and gloom," reiterated Pierre: "yes, yes, I understand that."

"I cannot help loving the light, it is not my fault. And I am very
happy! You understand me? I know you are glad for my sake."

"Yes, yes," Pierre assented, looking at his friend with a touched and
sad expression in his eyes. The brighter Prince Andrew's lot appeared to
him, the gloomier seemed his own.




CHAPTER XXIII

Prince Andrew needed his father's consent to his marriage, and to obtain
this he started for the country next day.

His father received his son's communication with external composure, but
inward wrath. He could not comprehend how anyone could wish to alter his
life or introduce anything new into it, when his own life was already
ending. "If only they would let me end my days as I want to," thought
the old man, "then they might do as they please." With his son, however,
he employed the diplomacy he reserved for important occasions and,
adopting a quiet tone, discussed the whole matter.

In the first place the marriage was not a brilliant one as regards
birth, wealth, or rank. Secondly, Prince Andrew was no longer as young
as he had been and his health was poor (the old man laid special stress
on this), while she was very young. Thirdly, he had a son whom it would
be a pity to entrust to a chit of a girl. "Fourthly and finally," the
father said, looking ironically at his son, "I beg you to put it off for
a year: go abroad, take a cure, look out as you wanted to for a German
tutor for Prince Nicholas. Then if your love or passion or obstinacy--as
you please--is still as great, marry! And that's my last word on it.
Mind, the last..." concluded the prince, in a tone which showed that
nothing would make him alter his decision.

Prince Andrew saw clearly that the old man hoped that his feelings, or
his fiancee's, would not stand a year's test, or that he (the old prince
himself) would die before then, and he decided to conform to his
father's wish--to propose, and postpone the wedding for a year.

Three weeks after the last evening he had spent with the Rostovs, Prince
Andrew returned to Petersburg.

Next day after her talk with her mother Natasha expected Bolkonski all
day, but he did not come. On the second and third day it was the same.
Pierre did not come either and Natasha, not knowing that Prince Andrew
had gone to see his father, could not explain his absence to herself.

Three weeks passed in this way. Natasha had no desire to go out anywhere
and wandered from room to room like a shadow, idle and listless; she
wept secretly at night and did not go to her mother in the evenings. She
blushed continually and was irritable. It seemed to her that everybody
knew about her disappointment and was laughing at her and pitying her.
Strong as was her inward grief, this wound to her vanity intensified her
misery.

Once she came to her mother, tried to say something, and suddenly began
to cry. Her tears were those of an offended child who does not know why
it is being punished.

The countess began to soothe Natasha, who after first listening to her
mother's words, suddenly interrupted her:

"Leave off, Mamma! I don't think, and don't want to think about it! He
just came and then left off, left off..."

Her voice trembled, and she again nearly cried, but recovered and went
on quietly:

"And I don't at all want to get married. And I am afraid of him; I have
now become quite calm, quite calm."

The day after this conversation Natasha put on the old dress which she
knew had the peculiar property of conducing to cheerfulness in the
mornings, and that day she returned to the old way of life which she had
abandoned since the ball. Having finished her morning tea she went to
the ballroom, which she particularly liked for its loud resonance, and
began singing her solfeggio. When she had finished her first exercise
she stood still in the middle of the room and sang a musical phrase that
particularly pleased her. She listened joyfully (as though she had not
expected it) to the charm of the notes reverberating, filling the whole
empty ballroom, and slowly dying away; and all at once she felt
cheerful. "What's the good of making so much of it? Things are nice as
it is," she said to herself, and she began walking up and down the room,
not stepping simply on the resounding parquet but treading with each
step from the heel to the toe (she had on a new and favorite pair of
shoes) and listening to the regular tap of the heel and creak of the toe
as gladly as she had to the sounds of her own voice. Passing a mirror
she glanced into it. "There, that's me!" the expression of her face
seemed to say as she caught sight of herself. "Well, and very nice too!
I need nobody."

A footman wanted to come in to clear away something in the room but she
would not let him, and having closed the door behind him continued her
walk. That morning she had returned to her favorite mood--love of, and
delight in, herself. "How charming that Natasha is!" she said again,
speaking as some third, collective, male person. "Pretty, a good voice,
young, and in nobody's way if only they leave her in peace." But however
much they left her in peace she could not now be at peace, and
immediately felt this.

In the hall the porch door opened, and someone asked, "At home?" and
then footsteps were heard. Natasha was looking at the mirror, but did
not see herself. She listened to the sounds in the hall. When she saw
herself, her face was pale. It was he. She knew this for certain, though
she hardly heard his voice through the closed doors.

Pale and agitated, Natasha ran into the drawing room.

"Mamma! Bolkonski has come!" she said. "Mamma, it is awful, it is
unbearable! I don't want... to be tormented? What am I to do?..."

Before the countess could answer, Prince Andrew entered the room with an
agitated and serious face. As soon as he saw Natasha his face
brightened. He kissed the countess' hand and Natasha's, and sat down
beside the sofa.

"It is long since we had the pleasure..." began the countess, but Prince
Andrew interrupted her by answering her intended question, obviously in
haste to say what he had to.

"I have not been to see you all this time because I have been at my
father's. I had to talk over a very important matter with him. I only
got back last night," he said glancing at Natasha; "I want to have a
talk with you, Countess," he added after a moment's pause.

The countess lowered her eyes, sighing deeply.

"I am at your disposal," she murmured.

Natasha knew that she ought to go away, but was unable to do so:
something gripped her throat, and regardless of manners she stared
straight at Prince Andrew with wide-open eyes.

"At once? This instant!... No, it can't be!" she thought.

Again he glanced at her, and that glance convinced her that she was not
mistaken. Yes, at once, that very instant, her fate would be decided.

"Go, Natasha! I will call you," said the countess in a whisper.

Natasha glanced with frightened imploring eyes at Prince Andrew and at
her mother and went out.

"I have come, Countess, to ask for your daughter's hand," said Prince
Andrew.

The countess' face flushed hotly, but she said nothing.

"Your offer..." she began at last sedately. He remained silent, looking
into her eyes. "Your offer..." (she grew confused) "is agreeable to us,
and I accept your offer. I am glad. And my husband... I hope... but it
will depend on her...."

"I will speak to her when I have your consent.... Do you give it to me?"
said Prince Andrew.

"Yes," replied the countess. She held out her hand to him, and with a
mixed feeling of estrangement and tenderness pressed her lips to his
forehead as he stooped to kiss her hand. She wished to love him as a
son, but felt that to her he was a stranger and a terrifying man. "I am
sure my husband will consent," said the countess, "but your father..."

"My father, to whom I have told my plans, has made it an express
condition of his consent that the wedding is not to take place for a
year. And I wished to tell you of that," said Prince Andrew.

"It is true that Natasha is still young, but--so long as that?..."

"It is unavoidable," said Prince Andrew with a sigh.

"I will send her to you," said the countess, and left the room.

"Lord have mercy upon us!" she repeated while seeking her daughter.

Sonya said that Natasha was in her bedroom. Natasha was sitting on the
bed, pale and dry eyed, and was gazing at the icons and whispering
something as she rapidly crossed herself. Seeing her mother she jumped
up and flew to her.

"Well, Mamma?... Well?..."

"Go, go to him. He is asking for your hand," said the countess, coldly
it seemed to Natasha. "Go... go," said the mother, sadly and
reproachfully, with a deep sigh, as her daughter ran away.

Natasha never remembered how she entered the drawing room. When she came
in and saw him she paused. "Is it possible that this stranger has now
become everything to me?" she asked herself, and immediately answered,
"Yes, everything! He alone is now dearer to me than everything in the
world." Prince Andrew came up to her with downcast eyes.

"I have loved you from the very first moment I saw you. May I hope?"

He looked at her and was struck by the serious impassioned expression of
her face. Her face said: "Why ask? Why doubt what you cannot but know?
Why speak, when words cannot express what one feels?"

She drew near to him and stopped. He took her hand and kissed it.

"Do you love me?"

"Yes, yes!" Natasha murmured as if in vexation. Then she sighed loudly
and, catching her breath more and more quickly, began to sob.

"What is it? What's the matter?"

"Oh, I am so happy!" she replied, smiled through her tears, bent over
closer to him, paused for an instant as if asking herself whether she
might, and then kissed him.

Prince Andrew held her hands, looked into her eyes, and did not find in
his heart his former love for her. Something in him had suddenly
changed; there was no longer the former poetic and mystic charm of
desire, but there was pity for her feminine and childish weakness, fear
at her devotion and trustfulness, and an oppressive yet joyful sense of
the duty that now bound him to her forever. The present feeling, though
not so bright and poetic as the former, was stronger and more serious.

"Did your mother tell you that it cannot be for a year?" asked Prince
Andrew, still looking into her eyes.

"Is it possible that I--the 'chit of a girl,' as everybody called me,"
thought Natasha--"is it possible that I am now to be the wife and the
equal of this strange, dear, clever man whom even my father looks up to?
Can it be true? Can it be true that there can be no more playing with
life, that now I am grown up, that on me now lies a responsibility for
my every word and deed? Yes, but what did he ask me?"

"No," she replied, but she had not understood his question.

"Forgive me!" he said. "But you are so young, and I have already been
through so much in life. I am afraid for you, you do not yet know
yourself."

Natasha listened with concentrated attention, trying but failing to take
in the meaning of his words.

"Hard as this year which delays my happiness will be," continued Prince
Andrew, "it will give you time to be sure of yourself. I ask you to make
me happy in a year, but you are free: our engagement shall remain a
secret, and should you find that you do not love me, or should you come
to love..." said Prince Andrew with an unnatural smile.

"Why do you say that?" Natasha interrupted him. "You know that from the
very day you first came to Otradnoe I have loved you," she cried, quite
convinced that she spoke the truth.

"In a year you will learn to know yourself...."

"A whole year!" Natasha repeated suddenly, only now realizing that the
marriage was to be postponed for a year. "But why a year? Why a
year?..."

Prince Andrew began to explain to her the reasons for this delay.
Natasha did not hear him.

"And can't it be helped?" she asked. Prince Andrew did not reply, but
his face expressed the impossibility of altering that decision.

"It's awful! Oh, it's awful! awful!" Natasha suddenly cried, and again
burst into sobs. "I shall die, waiting a year: it's impossible, it's
awful!" She looked into her lover's face and saw in it a look of
commiseration and perplexity.

"No, no! I'll do anything!" she said, suddenly checking her tears. "I am
so happy."

The father and mother came into the room and gave the betrothed couple
their blessing.

From that day Prince Andrew began to frequent the Rostovs' as Natasha's
affianced lover.




CHAPTER XXIV

No betrothal ceremony took place and Natasha's engagement to Bolkonski
was not announced; Prince Andrew insisted on that. He said that as he
was responsible for the delay he ought to bear the whole burden of it;
that he had given his word and bound himself forever, but that he did
not wish to bind Natasha and gave her perfect freedom. If after six
months she felt that she did not love him she would have full right to
reject him. Naturally neither Natasha nor her parents wished to hear of
this, but Prince Andrew was firm. He came every day to the Rostovs', but
did not behave to Natasha as an affianced lover: he did not use the
familiar thou, but said you to her, and kissed only her hand. After
their engagement, quite different, intimate, and natural relations
sprang up between them. It was as if they had not known each other till
now. Both liked to recall how they had regarded each other when as yet
they were nothing to one another; they felt themselves now quite
different beings: then they were artificial, now natural and sincere. At
first the family felt some constraint in intercourse with Prince Andrew;
he seemed a man from another world, and for a long time Natasha trained
the family to get used to him, proudly assuring them all that he only
appeared to be different, but was really just like all of them, and that
she was not afraid of him and no one else ought to be. After a few days
they grew accustomed to him, and without restraint in his presence
pursued their usual way of life, in which he took his part. He could
talk about rural economy with the count, fashions with the countess and
Natasha, and about albums and fancywork with Sonya. Sometimes the
household both among themselves and in his presence expressed their
wonder at how it had all happened, and at the evident omens there had
been of it: Prince Andrew's coming to Otradnoe and their coming to
Petersburg, and the likeness between Natasha and Prince Andrew which her
nurse had noticed on his first visit, and Andrew's encounter with
Nicholas in 1805, and many other incidents betokening that it had to be.

In the house that poetic dullness and quiet reigned which always
accompanies the presence of a betrothed couple. Often when all sitting
together everyone kept silent. Sometimes the others would get up and go
away and the couple, left alone, still remained silent. They rarely
spoke of their future life. Prince Andrew was afraid and ashamed to
speak of it. Natasha shared this as she did all his feelings, which she
constantly divined. Once she began questioning him about his son. Prince
Andrew blushed, as he often did now--Natasha particularly liked it in
him--and said that his son would not live with them.

"Why not?" asked Natasha in a frightened tone.

"I cannot take him away from his grandfather, and besides..."

"How I should have loved him!" said Natasha, immediately guessing his
thought; "but I know you wish to avoid any pretext for finding fault
with us."

Sometimes the old count would come up, kiss Prince Andrew, and ask his
advice about Petya's education or Nicholas' service. The old countess
sighed as she looked at them; Sonya was always getting frightened lest
she should be in the way and tried to find excuses for leaving them
alone, even when they did not wish it. When Prince Andrew spoke (he
could tell a story very well), Natasha listened to him with pride; when
she spoke she noticed with fear and joy that he gazed attentively and
scrutinizingly at her. She asked herself in perplexity: "What does he
look for in me? He is trying to discover something by looking at me!
What if what he seeks in me is not there?" Sometimes she fell into one
of the mad, merry moods characteristic of her, and then she particularly
loved to hear and see how Prince Andrew laughed. He seldom laughed, but
when he did he abandoned himself entirely to his laughter, and after
such a laugh she always felt nearer to him. Natasha would have been
completely happy if the thought of the separation awaiting her and
drawing near had not terrified her, just as the mere thought of it made
him turn pale and cold.

On the eve of his departure from Petersburg Prince Andrew brought with
him Pierre, who had not been to the Rostovs' once since the ball. Pierre
seemed disconcerted and embarrassed. He was talking to the countess, and
Natasha sat down beside a little chess table with Sonya, thereby
inviting Prince Andrew to come too. He did so.

"You have known Bezukhov a long time?" he asked. "Do you like him?"

"Yes, he's a dear, but very absurd."

And as usual when speaking of Pierre, she began to tell anecdotes of his
absent-mindedness, some of which had even been invented about him.

"Do you know I have entrusted him with our secret? I have known him from
childhood. He has a heart of gold. I beg you, Natalie," Prince Andrew
said with sudden seriousness--"I am going away and heaven knows what may
happen. You may cease to... all right, I know I am not to say that. Only
this, then: whatever may happen to you when I am not here..."

"What can happen?"

"Whatever trouble may come," Prince Andrew continued, "I beg you,
Mademoiselle Sophie, whatever may happen, to turn to him alone for
advice and help! He is a most absent-minded and absurd fellow, but he
has a heart of gold."

Neither her father, nor her mother, nor Sonya, nor Prince Andrew himself
could have foreseen how the separation from her lover would act on
Natasha. Flushed and agitated she went about the house all that day,
dry-eyed, occupied with most trivial matters as if not understanding
what awaited her. She did not even cry when, on taking leave, he kissed
her hand for the last time. "Don't go!" she said in a tone that made him
wonder whether he really ought not to stay and which he remembered long
afterwards. Nor did she cry when he was gone; but for several days she
sat in her room dry-eyed, taking no interest in anything and only saying
now and then, "Oh, why did he go away?"

But a fortnight after his departure, to the surprise of those around
her, she recovered from her mental sickness just as suddenly and became
her old self again, but with a change in her moral physiognomy, as a
child gets up after a long illness with a changed expression of face.




CHAPTER XXV

During that year after his son's departure, Prince Nicholas Bolkonski's
health and temper became much worse. He grew still more irritable, and
it was Princess Mary who generally bore the brunt of his frequent fits
of unprovoked anger. He seemed carefully to seek out her tender spots so
as to torture her mentally as harshly as possible. Princess Mary had two
passions and consequently two joys--her nephew, little Nicholas, and
religion--and these were the favorite subjects of the prince's attacks
and ridicule. Whatever was spoken of he would bring round to the
superstitiousness of old maids, or the petting and spoiling of children.
"You want to make him"--little Nicholas--"into an old maid like
yourself! A pity! Prince Andrew wants a son and not an old maid," he
would say. Or, turning to Mademoiselle Bourienne, he would ask her in
Princess Mary's presence how she liked our village priests and icons and
would joke about them.

He continually hurt Princess Mary's feelings and tormented her, but it
cost her no effort to forgive him. Could he be to blame toward her, or
could her father, whom she knew loved her in spite of it all, be unjust?
And what is justice? The princess never thought of that proud word
"justice." All the complex laws of man centered for her in one clear and
simple law--the law of love and self-sacrifice taught us by Him who
lovingly suffered for mankind though He Himself was God. What had she to
do with the justice or injustice of other people? She had to endure and
love, and that she did.

During the winter Prince Andrew had come to Bald Hills and had been gay,
gentle, and more affectionate than Princess Mary had known him for a
long time past. She felt that something had happened to him, but he said
nothing to her about his love. Before he left he had a long talk with
his father about something, and Princess Mary noticed that before his
departure they were dissatisfied with one another.

Soon after Prince Andrew had gone, Princess Mary wrote to her friend
Julie Karagina in Petersburg, whom she had dreamed (as all girls dream)
of marrying to her brother, and who was at that time in mourning for her
own brother, killed in Turkey.

Sorrow, it seems, is our common lot, my dear, tender friend Julie.

Your loss is so terrible that I can only explain it to myself as a
special providence of God who, loving you, wishes to try you and your
excellent mother. Oh, my friend! Religion, and religion alone, can--I
will not say comfort us--but save us from despair. Religion alone can
explain to us what without its help man cannot comprehend: why, for what
cause, kind and noble beings able to find happiness in life--not merely
harming no one but necessary to the happiness of others--are called away
to God, while cruel, useless, harmful persons, or such as are a burden
to themselves and to others, are left living. The first death I saw, and
one I shall never forget--that of my dear sister-in-law--left that
impression on me. Just as you ask destiny why your splendid brother had
to die, so I asked why that angel Lise, who not only never wronged
anyone, but in whose soul there were never any unkind thoughts, had to
die. And what do you think, dear friend? Five years have passed since
then, and already I, with my petty understanding, begin to see clearly
why she had to die, and in what way that death was but an expression of
the infinite goodness of the Creator, whose every action, though
generally incomprehensible to us, is but a manifestation of His infinite
love for His creatures. Perhaps, I often think, she was too angelically
innocent to have the strength to perform all a mother's duties. As a
young wife she was irreproachable; perhaps she could not have been so as
a mother. As it is, not only has she left us, and particularly Prince
Andrew, with the purest regrets and memories, but probably she will
there receive a place I dare not hope for myself. But not to speak of
her alone, that early and terrible death has had the most beneficent
influence on me and on my brother in spite of all our grief. Then, at
the moment of our loss, these thoughts could not occur to me; I should
then have dismissed them with horror, but now they are very clear and
certain. I write all this to you, dear friend, only to convince you of
the Gospel truth which has become for me a principle of life: not a
single hair of our heads will fall without His will. And His will is
governed only by infinite love for us, and so whatever befalls us is for
our good.

You ask whether we shall spend next winter in Moscow. In spite of my
wish to see you, I do not think so and do not want to do so. You will be
surprised to hear that the reason for this is Buonaparte! The case is
this: my father's health is growing noticeably worse, he cannot stand
any contradiction and is becoming irritable. This irritability is, as
you know, chiefly directed to political questions. He cannot endure the
notion that Buonaparte is negotiating on equal terms with all the
sovereigns of Europe and particularly with our own, the grandson of the
Great Catherine! As you know, I am quite indifferent to politics, but
from my father's remarks and his talks with Michael Ivanovich I know all
that goes on in the world and especially about the honors conferred on
Buonaparte, who only at Bald Hills in the whole world, it seems, is not
accepted as a great man, still less as Emperor of France. And my father
cannot stand this. It seems to me that it is chiefly because of his
political views that my father is reluctant to speak of going to Moscow;
for he foresees the encounters that would result from his way of
expressing his views regardless of anybody. All the benefit he might
derive from a course of treatment he would lose as a result of the
disputes about Buonaparte which would be inevitable. In any case it will
be decided very shortly.

Our family life goes on in the old way except for my brother Andrew's
absence. He, as I wrote you before, has changed very much of late. After
his sorrow he only this year quite recovered his spirits. He has again
become as I used to know him when a child: kind, affectionate, with that
heart of gold to which I know no equal. He has realized, it seems to me,
that life is not over for him. But together with this mental change he
has grown physically much weaker. He has become thinner and more
nervous. I am anxious about him and glad he is taking this trip abroad
which the doctors recommended long ago. I hope it will cure him. You
write that in Petersburg he is spoken of as one of the most active,
cultivated, and capable of the young men. Forgive my vanity as a
relation, but I never doubted it. The good he has done to everybody
here, from his peasants up to the gentry, is incalculable. On his
arrival in Petersburg he received only his due. I always wonder at the
way rumors fly from Petersburg to Moscow, especially such false ones as
that you write about--I mean the report of my brother's betrothal to the
little Rostova. I do not think my brother will ever marry again, and
certainly not her; and this is why: first, I know that though he rarely
speaks about the wife he has lost, the grief of that loss has gone too
deep in his heart for him ever to decide to give her a successor and our
little angel a stepmother. Secondly because, as far as I know, that girl
is not the kind of girl who could please Prince Andrew. I do not think
he would choose her for a wife, and frankly I do not wish it. But I am
running on too long and am at the end of my second sheet. Good-bye, my
dear friend. May God keep you in His holy and mighty care. My dear
friend, Mademoiselle Bourienne, sends you kisses.

MARY




CHAPTER XXVI

In the middle of the summer Princess Mary received an unexpected letter
from Prince Andrew in Switzerland in which he gave her strange and
surprising news. He informed her of his engagement to Natasha Rostova.
The whole letter breathed loving rapture for his betrothed and tender
and confiding affection for his sister. He wrote that he had never loved
as he did now and that only now did he understand and know what life
was. He asked his sister to forgive him for not having told her of his
resolve when he had last visited Bald Hills, though he had spoken of it
to his father. He had not done so for fear Princess Mary should ask her
father to give his consent, irritating him and having to bear the brunt
of his displeasure without attaining her object. "Besides," he wrote,
"the matter was not then so definitely settled as it is now. My father
then insisted on a delay of a year and now already six months, half of
that period, have passed, and my resolution is firmer than ever. If the
doctors did not keep me here at the spas I should be back in Russia, but
as it is I have to postpone my return for three months. You know me and
my relations with Father. I want nothing from him. I have been and
always shall be independent; but to go against his will and arouse his
anger, now that he may perhaps remain with us such a short time, would
destroy half my happiness. I am now writing to him about the same
question, and beg you to choose a good moment to hand him the letter and
to let me know how he looks at the whole matter and whether there is
hope that he may consent to reduce the term by four months."

After long hesitations, doubts, and prayers, Princess Mary gave the
letter to her father. The next day the old prince said to her quietly:

"Write and tell your brother to wait till I am dead.... It won't be
long--I shall soon set him free."

The princess was about to reply, but her father would not let her speak
and, raising his voice more and more, cried:

"Marry, marry, my boy!... A good family!... Clever people, eh? Rich, eh?
Yes, a nice stepmother little Nicholas will have! Write and tell him
that he may marry tomorrow if he likes. She will be little Nicholas'
stepmother and I'll marry Bourienne!... Ha, ha, ha! He mustn't be
without a stepmother either! Only one thing, no more women are wanted in
my house--let him marry and live by himself. Perhaps you will go and
live with him too?" he added, turning to Princess Mary. "Go in heavens
name! Go out into the frost... the frost... the frost!"

After this outburst the prince did not speak any more about the matter.
But repressed vexation at his son's poor-spirited behavior found
expression in his treatment of his daughter. To his former pretexts for
irony a fresh one was now added--allusions to stepmothers and
amiabilities to Mademoiselle Bourienne.

"Why shouldn't I marry her?" he asked his daughter. "She'll make a
splendid princess!"

And latterly, to her surprise and bewilderment, Princess Mary noticed
that her father was really associating more and more with the
Frenchwoman. She wrote to Prince Andrew about the reception of his
letter, but comforted him with hopes of reconciling their father to the
idea.

Little Nicholas and his education, her brother Andrew, and religion were
Princess Mary's joys and consolations; but besides that, since everyone
must have personal hopes, Princess Mary in the profoundest depths of her
heart had a hidden dream and hope that supplied the chief consolation of
her life. This comforting dream and hope were given her by God's folk--
the half-witted and other pilgrims who visited her without the prince's
knowledge. The longer she lived, the more experience and observation she
had of life, the greater was her wonder at the short-sightedness of men
who seek enjoyment and happiness here on earth: toiling, suffering,
struggling, and harming one another, to obtain that impossible,
visionary, sinful happiness. Prince Andrew had loved his wife, she died,
but that was not enough: he wanted to bind his happiness to another
woman. Her father objected to this because he wanted a more
distinguished and wealthier match for Andrew. And they all struggled and
suffered and tormented one another and injured their souls, their
eternal souls, for the attainment of benefits which endure but for an
instant. Not only do we know this ourselves, but Christ, the Son of God,
came down to earth and told us that this life is but for a moment and is
a probation; yet we cling to it and think to find happiness in it. "How
is it that no one realizes this?" thought Princess Mary. "No one except
these despised God's folk who, wallet on back, come to me by the back
door, afraid of being seen by the prince, not for fear of ill-usage by
him but for fear of causing him to sin. To leave family, home, and all
the cares of worldly welfare, in order without clinging to anything to
wander in hempen rags from place to place under an assumed name, doing
no one any harm but praying for all--for those who drive one away as
well as for those who protect one: higher than that life and truth there
is no life or truth!"

There was one pilgrim, a quiet pockmarked little woman of fifty called
Theodosia, who for over thirty years had gone about barefoot and worn
heavy chains. Princess Mary was particularly fond of her. Once, when in
a room with a lamp dimly lit before the icon Theodosia was talking of
her life, the thought that Theodosia alone had found the true path of
life suddenly came to Princess Mary with such force that she resolved to
become a pilgrim herself. When Theodosia had gone to sleep Princess Mary
thought about this for a long time, and at last made up her mind that,
strange as it might seem, she must go on a pilgrimage. She disclosed
this thought to no one but to her confessor, Father Akinfi, the monk,
and he approved of her intention. Under guise of a present for the
pilgrims, Princess Mary prepared a pilgrim's complete costume for
herself: a coarse smock, bast shoes, a rough coat, and a black kerchief.
Often, approaching the chest of drawers containing this secret treasure,
Princess Mary paused, uncertain whether the time had not already come to
put her project into execution.

Often, listening to the pilgrims' tales, she was so stimulated by their
simple speech, mechanical to them but to her so full of deep meaning,
that several times she was on the point of abandoning everything and
running away from home. In imagination she already pictured herself by
Theodosia's side, dressed in coarse rags, walking with a staff, a wallet
on her back, along the dusty road, directing her wanderings from one
saint's shrine to another, free from envy, earthly love, or desire, and
reaching at last the place where there is no more sorrow or sighing, but
eternal joy and bliss.

"I shall come to a place and pray there, and before having time to get
used to it or getting to love it, I shall go farther. I will go on till
my legs fail, and I'll lie down and die somewhere, and shall at last
reach that eternal, quiet haven, where there is neither sorrow nor
sighing..." thought Princess Mary.

But afterwards, when she saw her father and especially little Koko
(Nicholas), her resolve weakened. She wept quietly, and felt that she
was a sinner who loved her father and little nephew more than God."}]
}
	