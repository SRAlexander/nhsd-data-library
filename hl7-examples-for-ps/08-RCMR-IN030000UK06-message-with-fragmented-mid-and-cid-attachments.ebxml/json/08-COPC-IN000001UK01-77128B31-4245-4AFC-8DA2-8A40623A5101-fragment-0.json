{
	"ebXML":"<SOAP:Envelope xmlns:xsi=\"http://www.w3c.org/2001/XML-Schema-Instance\" xmlns:SOAP=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:eb=\"http://www.oasis-open.org/committees/ebxml-msg/schema/msg-header-2_0.xsd\" xmlns:hl7ebxml=\"urn:hl7-org:transport/ebxml/DSTUv1.0\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"> <SOAP:Header> <eb:MessageHeader SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:From> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-801710</eb:PartyId> </eb:From> <eb:To> <eb:PartyId eb:type=\"urn:nhs:names:partyType:ocs+serviceInstance\">RHM-803229</eb:PartyId> </eb:To> <eb:CPAId>S2030731A2137927</eb:CPAId> <eb:ConversationId>6E242658-3D8E-11E3-A7DC-172BDA00FA72</eb:ConversationId> <eb:Service>urn:nhs:names:services:gp2gp</eb:Service> <eb:Action>COPC_IN000001UK01</eb:Action> <eb:MessageData> <eb:MessageId>77128B31-4245-4AFC-8DA2-8A40623A5101</eb:MessageId> <eb:Timestamp>2013-10-28T08:59:26Z</eb:Timestamp> </eb:MessageData> <eb:DuplicateElimination/> </eb:MessageHeader> <eb:AckRequested SOAP:mustUnderstand=\"1\" eb:version=\"2.0\" eb:signed=\"false\" SOAP:actor=\"urn:oasis:names:tc:ebxml-msg:actor:nextMSH\"/> </SOAP:Header> <SOAP:Body> <eb:Manifest SOAP:mustUnderstand=\"1\" eb:version=\"2.0\"> <eb:Reference xlink:href=\"cid:3f594b60-3faf-11e3-b10c-8bc15657569c@spine.nhs.uk\"> <eb:Schema eb:location=\"http://www.nhsia.nhs.uk/schemas/HL7-Message.xsd\" eb:version=\"1.0\"/> <eb:Description xml:lang=\"en\">HL7 payload</eb:Description> <hl7ebxml:Payload style=\"HL7\" encoding=\"XML\" version=\"3.0\"/> </eb:Reference> <eb:Reference xlink:href=\"cid:3f597271-3faf-11e3-b10c-8bc15657569c\"> <eb:Description xml:lang=\"en\">Attachment</eb:Description> </eb:Reference> </eb:Manifest> </SOAP:Body> </SOAP:Envelope>",
	"payload":"<COPC_IN000001UK01 xmlns=\"urn:hl7-org:v3\"> <id root=\"77128B31-4245-4AFC-8DA2-8A40623A5101\"/> <creationTime value=\"20131025174854080\"/> <versionCode code=\"V3NPfIT3.0\"/> <interactionId root=\"2.16.840.1.113883.2.1.3.2.4.12\" extension=\"COPC_IN000001UK01\"/> <processingCode code=\"P\"/> <processingModeCode code=\"T\"/> <acceptAckCode code=\"NE\"/> <communicationFunctionRcv> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"276827251543\"/> </device> </communicationFunctionRcv> <communicationFunctionSnd> <device> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </device> </communicationFunctionSnd> <ControlActEvent> <author1> <AgentSystemSDS> <agentSystemSDS> <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"715373337545\"/> </agentSystemSDS> </AgentSystemSDS> </author1> <subject> <PayloadInformation xmlns=\"urn:hl7-org:v3\" xmlns:npfitlc=\"NPFIT:HL7:Localisation\"> <code code=\"GP2GPLMATTACHMENTINFO\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment Information\"/> <id root=\"77128B31-4245-4AFC-8DA2-8A40623A5101\"/> <npfitlc:messageType root=\"2.16.840.1.113883.2.1.3.2.4.18.17\" extension=\"RCMR_MT000001GB01\"/> <value> <Gp2gpfragment xmlns=\"urn:nhs:names:services:gp2gp\"> <Version>01</Version> <Recipients> <Recipient>C81007</Recipient> </Recipients> <From>B83002</From> <subject>Attachment: E39E79A2-FA96-48FF-9373-7BBCB9D036E7_0.messageattachment</subject> <message-id>77128B31-4245-4AFC-8DA2-8A40623A5101</message-id> </Gp2gpfragment> </value> <pertinentInformation> <sequenceNumber value=\"1\"/> <pertinentPayloadBody> <code code=\"GP2GPLMATTACHMENT\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment\"/> <id root=\"F141AF1B-29C0-4153-B5FC-5F65E0FCB0B0\"/> <value><reference value=\"E39E79A2-FA96-48FF-9373-7BBCB9D036E7_1.messageattachment\"/></value> </pertinentPayloadBody> </pertinentInformation> </PayloadInformation> </subject> </ControlActEvent> </COPC_IN000001UK01>",
	"attachments":[{"content_type":"text/plain","is_base64":"true","description":"ContentType=text/plain OriginalBase64=Yes","payload":"


WAR AND PEACE

By Leo Tolstoy/Tolstoi

CONTENTS

BOOK ONE: 1805

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

CHAPTER XXIII

CHAPTER XXIV

CHAPTER XXV

CHAPTER XXVI

CHAPTER XXVII

CHAPTER XXVIII

BOOK TWO: 1805

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

BOOK THREE: 1805

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

BOOK FOUR: 1806

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

BOOK FIVE: 1806 - 07

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

BOOK SIX: 1808 - 10

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

CHAPTER XXIII

CHAPTER XXIV

CHAPTER XXV

CHAPTER XXVI

BOOK SEVEN: 1810 - 11

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

BOOK EIGHT: 1811 - 12

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

BOOK NINE: 1812

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

CHAPTER XXIII

BOOK TEN: 1812

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

CHAPTER XXIII

CHAPTER XXIV

CHAPTER XXV

CHAPTER XXVI

CHAPTER XXVII

CHAPTER XXVIII

CHAPTER XXIX

CHAPTER XXX

CHAPTER XXXI

CHAPTER XXXII

CHAPTER XXXIII

CHAPTER XXXIV

CHAPTER XXXV

CHAPTER XXXVI

CHAPTER XXXVII

CHAPTER XXXVIII

CHAPTER XXXIX

BOOK ELEVEN: 1812

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

CHAPTER XXI

CHAPTER XXII

CHAPTER XXIII

CHAPTER XXIV

CHAPTER XXV

CHAPTER XXVI

CHAPTER XXVII

CHAPTER XXVIII

CHAPTER XXIX

CHAPTER XXX

CHAPTER XXXI

CHAPTER XXXII

CHAPTER XXXIII

CHAPTER XXXIV

BOOK TWELVE: 1812

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

BOOK THIRTEEN: 1812

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

BOOK FOURTEEN: 1812

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

BOOK FIFTEEN: 1812 - 13

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

CHAPTER XVII

CHAPTER XVIII

CHAPTER XIX

CHAPTER XX

FIRST EPILOGUE: 1813 - 20

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

CHAPTER XIII

CHAPTER XIV

CHAPTER XV

CHAPTER XVI

SECOND EPILOGUE

CHAPTER I

CHAPTER II

CHAPTER III

CHAPTER IV

CHAPTER V

CHAPTER VI

CHAPTER VII

CHAPTER VIII

CHAPTER IX

CHAPTER X

CHAPTER XI

CHAPTER XII

BOOK ONE: 1805




CHAPTER I

"Well, Prince, so Genoa and Lucca are now just family estates of the
Buonapartes. But I warn you, if you don't tell me that this means war,
if you still try to defend the infamies and horrors perpetrated by that
Antichrist--I really believe he is Antichrist--I will have nothing more
to do with you and you are no longer my friend, no longer my 'faithful
slave,' as you call yourself! But how do you do? I see I have frightened
you--sit down and tell me all the news."

It was in July, 1805, and the speaker was the well-known Anna Pavlovna
Scherer, maid of honor and favorite of the Empress Marya Fedorovna. With
these words she greeted Prince Vasili Kuragin, a man of high rank and
importance, who was the first to arrive at her reception. Anna Pavlovna
had had a cough for some days. She was, as she said, suffering from la
grippe; grippe being then a new word in St. Petersburg, used only by the
elite.

All her invitations without exception, written in French, and delivered
by a scarlet-liveried footman that morning, ran as follows:

"If you have nothing better to do, Count (or Prince), and if the
prospect of spending an evening with a poor invalid is not too terrible,
I shall be very charmed to see you tonight between 7 and 10--Annette
Scherer."

"Heavens! what a virulent attack!" replied the prince, not in the least
disconcerted by this reception. He had just entered, wearing an
embroidered court uniform, knee breeches, and shoes, and had stars on
his breast and a serene expression on his flat face. He spoke in that
refined French in which our grandfathers not only spoke but thought, and
with the gentle, patronizing intonation natural to a man of importance
who had grown old in society and at court. He went up to Anna Pavlovna,
kissed her hand, presenting to her his bald, scented, and shining head,
and complacently seated himself on the sofa.

"First of all, dear friend, tell me how you are. Set your friend's mind
at rest," said he without altering his tone, beneath the politeness and
affected sympathy of which indifference and even irony could be
discerned.

"Can one be well while suffering morally? Can one be calm in times like
these if one has any feeling?" said Anna Pavlovna. "You are staying the
whole evening, I hope?"

"And the fete at the English ambassador's? Today is Wednesday. I must
put in an appearance there," said the prince. "My daughter is coming for
me to take me there."

"I thought today's fete had been canceled. I confess all these
festivities and fireworks are becoming wearisome."

"If they had known that you wished it, the entertainment would have been
put off," said the prince, who, like a wound-up clock, by force of habit
said things he did not even wish to be believed.

"Don't tease! Well, and what has been decided about Novosiltsev's
dispatch? You know everything."

"What can one say about it?" replied the prince in a cold, listless
tone. "What has been decided? They have decided that Buonaparte has
burnt his boats, and I believe that we are ready to burn ours."

Prince Vasili always spoke languidly, like an actor repeating a stale
part. Anna Pavlovna Scherer on the contrary, despite her forty years,
overflowed with animation and impulsiveness. To be an enthusiast had
become her social vocation and, sometimes even when she did not feel
like it, she became enthusiastic in order not to disappoint the
expectations of those who knew her. The subdued smile which, though it
did not suit her faded features, always played round her lips expressed,
as in a spoiled child, a continual consciousness of her charming defect,
which she neither wished, nor could, nor considered it necessary, to
correct.

In the midst of a conversation on political matters Anna Pavlovna burst
out:

"Oh, don't speak to me of Austria. Perhaps I don't understand things,
but Austria never has wished, and does not wish, for war. She is
betraying us! Russia alone must save Europe. Our gracious sovereign
recognizes his high vocation and will be true to it. That is the one
thing I have faith in! Our good and wonderful sovereign has to perform
the noblest role on earth, and he is so virtuous and noble that God will
not forsake him. He will fulfill his vocation and crush the hydra of
revolution, which has become more terrible than ever in the person of
this murderer and villain! We alone must avenge the blood of the just
one.... Whom, I ask you, can we rely on?... England with her commercial
spirit will not and cannot understand the Emperor Alexander's loftiness
of soul. She has refused to evacuate Malta. She wanted to find, and
still seeks, some secret motive in our actions. What answer did
Novosiltsev get? None. The English have not understood and cannot
understand the self-abnegation of our Emperor who wants nothing for
himself, but only desires the good of mankind. And what have they
promised? Nothing! And what little they have promised they will not
perform! Prussia has always declared that Buonaparte is invincible, and
that all Europe is powerless before him.... And I don't believe a word
that Hardenburg says, or Haugwitz either. This famous Prussian
neutrality is just a trap. I have faith only in God and the lofty
destiny of our adored monarch. He will save Europe!"

She suddenly paused, smiling at her own impetuosity.

"I think," said the prince with a smile, "that if you had been sent
instead of our dear Wintzingerode you would have captured the King of
Prussia's consent by assault. You are so eloquent. Will you give me a
cup of tea?"

"In a moment. A propos," she added, becoming calm again, "I am expecting
two very interesting men tonight, le Vicomte de Mortemart, who is
connected with the Montmorencys through the Rohans, one of the best
French families. He is one of the genuine emigres, the good ones. And
also the Abbe Morio. Do you know that profound thinker? He has been
received by the Emperor. Had you heard?"

"I shall be delighted to meet them," said the prince. "But tell me," he
added with studied carelessness as if it had only just occurred to him,
though the question he was about to ask was the chief motive of his
visit, "is it true that the Dowager Empress wants Baron Funke to be
appointed first secretary at Vienna? The baron by all accounts is a poor
creature."

Prince Vasili wished to obtain this post for his son, but others were
trying through the Dowager Empress Marya Fedorovna to secure it for the
baron.

Anna Pavlovna almost closed her eyes to indicate that neither she nor
anyone else had a right to criticize what the Empress desired or was
pleased with.

"Baron Funke has been recommended to the Dowager Empress by her sister,"
was all she said, in a dry and mournful tone.

As she named the Empress, Anna Pavlovna's face suddenly assumed an
expression of profound and sincere devotion and respect mingled with
sadness, and this occurred every time she mentioned her illustrious
patroness. She added that Her Majesty had deigned to show Baron Funke
beaucoup d'estime, and again her face clouded over with sadness.

The prince was silent and looked indifferent. But, with the womanly and
courtierlike quickness and tact habitual to her, Anna Pavlovna wished
both to rebuke him (for daring to speak as he had done of a man
recommended to the Empress) and at the same time to console him, so she
said:

"Now about your family. Do you know that since your daughter came out
everyone has been enraptured by her? They say she is amazingly
beautiful."

The prince bowed to signify his respect and gratitude.

"I often think," she continued after a short pause, drawing nearer to
the prince and smiling amiably at him as if to show that political and
social topics were ended and the time had come for intimate
conversation--"I often think how unfairly sometimes the joys of life are
distributed. Why has fate given you two such splendid children? I don't
speak of Anatole, your youngest. I don't like him," she added in a tone
admitting of no rejoinder and raising her eyebrows. "Two such charming
children. And really you appreciate them less than anyone, and so you
don't deserve to have them."

And she smiled her ecstatic smile.

"I can't help it," said the prince. "Lavater would have said I lack the
bump of paternity."

"Don't joke; I mean to have a serious talk with you. Do you know I am
dissatisfied with your younger son? Between ourselves" (and her face
assumed its melancholy expression), "he was mentioned at Her Majesty's
and you were pitied...."

The prince answered nothing, but she looked at him significantly,
awaiting a reply. He frowned.

"What would you have me do?" he said at last. "You know I did all a
father could for their education, and they have both turned out fools.
Hippolyte is at least a quiet fool, but Anatole is an active one. That
is the only difference between them." He said this smiling in a way more
natural and animated than usual, so that the wrinkles round his mouth
very clearly revealed something unexpectedly coarse and unpleasant.

"And why are children born to such men as you? If you were not a father
there would be nothing I could reproach you with," said Anna Pavlovna,
looking up pensively.

"I am your faithful slave and to you alone I can confess that my
children are the bane of my life. It is the cross I have to bear. That
is how I explain it to myself. It can't be helped!"

He said no more, but expressed his resignation to cruel fate by a
gesture. Anna Pavlovna meditated.

"Have you never thought of marrying your prodigal son Anatole?" she
asked. "They say old maids have a mania for matchmaking, and though I
don't feel that weakness in myself as yet, I know a little person who is
very unhappy with her father. She is a relation of yours, Princess Mary
Bolkonskaya."

Prince Vasili did not reply, though, with the quickness of memory and
perception befitting a man of the world, he indicated by a movement of
the head that he was considering this information.

"Do you know," he said at last, evidently unable to check the sad
current of his thoughts, "that Anatole is costing me forty thousand
rubles a year? And," he went on after a pause, "what will it be in five
years, if he goes on like this?" Presently he added: "That's what we
fathers have to put up with.... Is this princess of yours rich?"

"Her father is very rich and stingy. He lives in the country. He is the
well-known Prince Bolkonski who had to retire from the army under the
late Emperor, and was nicknamed 'the King of Prussia.' He is very clever
but eccentric, and a bore. The poor girl is very unhappy. She has a
brother; I think you know him, he married Lise Meinen lately. He is an
aide-de-camp of Kutuzov's and will be here tonight."

"Listen, dear Annette," said the prince, suddenly taking Anna Pavlovna's
hand and for some reason drawing it downwards. "Arrange that affair for
me and I shall always be your most devoted slave-slafe with an f, as a
village elder of mine writes in his reports. She is rich and of good
family and that's all I want."

And with the familiarity and easy grace peculiar to him, he raised the
maid of honor's hand to his lips, kissed it, and swung it to and fro as
he lay back in his armchair, looking in another direction.

"Attendez," said Anna Pavlovna, reflecting, "I'll speak to Lise, young
Bolkonski's wife, this very evening, and perhaps the thing can be
arranged. It shall be on your family's behalf that I'll start my
apprenticeship as old maid."




CHAPTER II

Anna Pavlovna's drawing room was gradually filling. The highest
Petersburg society was assembled there: people differing widely in age
and character but alike in the social circle to which they belonged.
Prince Vasili's daughter, the beautiful Helene, came to take her father
to the ambassador's entertainment; she wore a ball dress and her badge
as maid of honor. The youthful little Princess Bolkonskaya, known as la
femme la plus seduisante de Petersbourg, * was also there. She had been
married during the previous winter, and being pregnant did not go to any
large gatherings, but only to small receptions. Prince Vasili's son,
Hippolyte, had come with Mortemart, whom he introduced. The Abbe Morio
and many others had also come.


* The most fascinating woman in Petersburg.

To each new arrival Anna Pavlovna said, "You have not yet seen my aunt,"
or "You do not know my aunt?" and very gravely conducted him or her to a
little old lady, wearing large bows of ribbon in her cap, who had come
sailing in from another room as soon as the guests began to arrive; and
slowly turning her eyes from the visitor to her aunt, Anna Pavlovna
mentioned each one's name and then left them.

Each visitor performed the ceremony of greeting this old aunt whom not
one of them knew, not one of them wanted to know, and not one of them
cared about; Anna Pavlovna observed these greetings with mournful and
solemn interest and silent approval. The aunt spoke to each of them in
the same words, about their health and her own, and the health of Her
Majesty, "who, thank God, was better today." And each visitor, though
politeness prevented his showing impatience, left the old woman with a
sense of relief at having performed a vexatious duty and did not return
to her the whole evening.

The young Princess Bolkonskaya had brought some work in a gold-
embroidered velvet bag. Her pretty little upper lip, on which a delicate
dark down was just perceptible, was too short for her teeth, but it
lifted all the more sweetly, and was especially charming when she
occasionally drew it down to meet the lower lip. As is always the case
with a thoroughly attractive woman, her defect--the shortness of her
upper lip and her half-open mouth--seemed to be her own special and
peculiar form of beauty. Everyone brightened at the sight of this pretty
young woman, so soon to become a mother, so full of life and health, and
carrying her burden so lightly. Old men and dull dispirited young ones
who looked at her, after being in her company and talking to her a
little while, felt as if they too were becoming, like her, full of life
and health. All who talked to her, and at each word saw her bright smile
and the constant gleam of her white teeth, thought that they were in a
specially amiable mood that day.

The little princess went round the table with quick, short, swaying
steps, her workbag on her arm, and gaily spreading out her dress sat
down on a sofa near the silver samovar, as if all she was doing was a
pleasure to herself and to all around her. "I have brought my work,"
said she in French, displaying her bag and addressing all present.
"Mind, Annette, I hope you have not played a wicked trick on me," she
added, turning to her hostess. "You wrote that it was to be quite a
small reception, and just see how badly I am dressed." And she spread
out her arms to show her short-waisted, lace-trimmed, dainty gray dress,
girdled with a broad ribbon just below the breast.

"Soyez tranquille, Lise, you will always be prettier than anyone else,"
replied Anna Pavlovna.

"You know," said the princess in the same tone of voice and still in
French, turning to a general, "my husband is deserting me? He is going
to get himself killed. Tell me what this wretched war is for?" she
added, addressing Prince Vasili, and without waiting for an answer she
turned to speak to his daughter, the beautiful Helene.

"What a delightful woman this little princess is!" said Prince Vasili to
Anna Pavlovna.

One of the next arrivals was a stout, heavily built young man with
close-cropped hair, spectacles, the light-colored breeches fashionable
at that time, a very high ruffle, and a brown dress coat. This stout
young man was an illegitimate son of Count Bezukhov, a well-known
grandee of Catherine's time who now lay dying in Moscow. The young man
had not yet entered either the military or civil service, as he had only
just returned from abroad where he had been educated, and this was his
first appearance in society. Anna Pavlovna greeted him with the nod she
accorded to the lowest hierarchy in her drawing room. But in spite of
this lowest-grade greeting, a look of anxiety and fear, as at the sight
of something too large and unsuited to the place, came over her face
when she saw Pierre enter. Though he was certainly rather bigger than
the other men in the room, her anxiety could only have reference to the
clever though shy, but observant and natural, expression which
distinguished him from everyone else in that drawing room.

"It is very good of you, Monsieur Pierre, to come and visit a poor
invalid," said Anna Pavlovna, exchanging an alarmed glance with her aunt
as she conducted him to her.

Pierre murmured something unintelligible, and continued to look round as
if in search of something. On his way to the aunt he bowed to the little
princess with a pleased smile, as to an intimate acquaintance.

Anna Pavlovna's alarm was justified, for Pierre turned away from the
aunt without waiting to hear her speech about Her Majesty's health. Anna
Pavlovna in dismay detained him with the words: "Do you know the Abbe
Morio? He is a most interesting man."

"Yes, I have heard of his scheme for perpetual peace, and it is very
interesting but hardly feasible."

"You think so?" rejoined Anna Pavlovna in order to say something and get
away to attend to her duties as hostess. But Pierre now committed a
reverse act of impoliteness. First he had left a lady before she had
finished speaking to him, and now he continued to speak to another who
wished to get away. With his head bent, and his big feet spread apart,
he began explaining his reasons for thinking the abbe's plan chimerical.

"We will talk of it later," said Anna Pavlovna with a smile.

And having got rid of this young man who did not know how to behave, she
resumed her duties as hostess and continued to listen and watch, ready
to help at any point where the conversation might happen to flag. As the
foreman of a spinning mill, when he has set the hands to work, goes
round and notices here a spindle that has stopped or there one that
creaks or makes more noise than it should, and hastens to check the
machine or set it in proper motion, so Anna Pavlovna moved about her
drawing room, approaching now a silent, now a too-noisy group, and by a
word or slight rearrangement kept the conversational machine in steady,
proper, and regular motion. But amid these cares her anxiety about
Pierre was evident. She kept an anxious watch on him when he approached
the group round Mortemart to listen to what was being said there, and
again when he passed to another group whose center was the abbe.

Pierre had been educated abroad, and this reception at Anna Pavlovna's
was the first he had attended in Russia. He knew that all the
intellectual lights of Petersburg were gathered there and, like a child
in a toyshop, did not know which way to look, afraid of missing any
clever conversation that was to be heard. Seeing the self-confident and
refined expression on the faces of those present he was always expecting
to hear something very profound. At last he came up to Morio. Here the
conversation seemed interesting and he stood waiting for an opportunity
to express his own views, as young people are fond of doing.




CHAPTER III

Anna Pavlovna's reception was in full swing. The spindles hummed
steadily and ceaselessly on all sides. With the exception of the aunt,
beside whom sat only one elderly lady, who with her thin careworn face
was rather out of place in this brilliant society, the whole company had
settled into three groups. One, chiefly masculine, had formed round the
abbe. Another, of young people, was grouped round the beautiful Princess
Helene, Prince Vasili's daughter, and the little Princess Bolkonskaya,
very pretty and rosy, though rather too plump for her age. The third
group was gathered round Mortemart and Anna Pavlovna.

The vicomte was a nice-looking young man with soft features and polished
manners, who evidently considered himself a celebrity but out of
politeness modestly placed himself at the disposal of the circle in
which he found himself. Anna Pavlovna was obviously serving him up as a
treat to her guests. As a clever maitre d'hotel serves up as a specially
choice delicacy a piece of meat that no one who had seen it in the
kitchen would have cared to eat, so Anna Pavlovna served up to her
guests, first the vicomte and then the abbe, as peculiarly choice
morsels. The group about Mortemart immediately began discussing the
murder of the Duc d'Enghien. The vicomte said that the Duc d'Enghien had
perished by his own magnanimity, and that there were particular reasons
for Buonaparte's hatred of him.

"Ah, yes! Do tell us all about it, Vicomte," said Anna Pavlovna, with a
pleasant feeling that there was something a la Louis XV in the sound of
that sentence: "Contez nous cela, Vicomte."

The vicomte bowed and smiled courteously in token of his willingness to
comply. Anna Pavlovna arranged a group round him, inviting everyone to
listen to his tale.

"The vicomte knew the duc personally," whispered Anna Pavlovna to one of
the guests. "The vicomte is a wonderful raconteur," said she to another.
"How evidently he belongs to the best society," said she to a third; and
the vicomte was served up to the company in the choicest and most
advantageous style, like a well-garnished joint of roast beef on a hot
dish.

The vicomte wished to begin his story and gave a subtle smile.

"Come over here, Helene, dear," said Anna Pavlovna to the beautiful
young princess who was sitting some way off, the center of another
group.

The princess smiled. She rose with the same unchanging smile with which
she had first entered the room--the smile of a perfectly beautiful
woman. With a slight rustle of her white dress trimmed with moss and
ivy, with a gleam of white shoulders, glossy hair, and sparkling
diamonds, she passed between the men who made way for her, not looking
at any of them but smiling on all, as if graciously allowing each the
privilege of admiring her beautiful figure and shapely shoulders, back,
and bosom--which in the fashion of those days were very much exposed--
and she seemed to bring the glamour of a ballroom with her as she moved
toward Anna Pavlovna. Helene was so lovely that not only did she not
show any trace of coquetry, but on the contrary she even appeared shy of
her unquestionable and all too victorious beauty. She seemed to wish,
but to be unable, to diminish its effect.

"How lovely!" said everyone who saw her; and the vicomte lifted his
shoulders and dropped his eyes as if startled by something extraordinary
when she took her seat opposite and beamed upon him also with her
unchanging smile.

"Madame, I doubt my ability before such an audience," said he, smilingly
inclining his head.

The princess rested her bare round arm on a little table and considered
a reply unnecessary. She smilingly waited. All the time the story was
being told she sat upright, glancing now at her beautiful round arm,
altered in shape by its pressure on the table, now at her still more
beautiful bosom, on which she readjusted a diamond necklace. From time
to time she smoothed the folds of her dress, and whenever the story
produced an effect she glanced at Anna Pavlovna, at once adopted just
the expression she saw on the maid of honor's face, and again relapsed
into her radiant smile.

The little princess had also left the tea table and followed Helene.

"Wait a moment, I'll get my work.... Now then, what are you thinking
of?" she went on, turning to Prince Hippolyte. "Fetch me my workbag."

There was a general movement as the princess, smiling and talking
merrily to everyone at once, sat down and gaily arranged herself in her
seat.

"Now I am all right," she said, and asking the vicomte to begin, she
took up her work.

Prince Hippolyte, having brought the workbag, joined the circle and
moving a chair close to hers seated himself beside her.

Le charmant Hippolyte was surprising by his extraordinary resemblance to
his beautiful sister, but yet more by the fact that in spite of this
resemblance he was exceedingly ugly. His features were like his
sister's, but while in her case everything was lit up by a joyous, self-
satisfied, youthful, and constant smile of animation, and by the
wonderful classic beauty of her figure, his face on the contrary was
dulled by imbecility and a constant expression of sullen self-
confidence, while his body was thin and weak. His eyes, nose, and mouth
all seemed puckered into a vacant, wearied grimace, and his arms and
legs always fell into unnatural positions.

"It's not going to be a ghost story?" said he, sitting down beside the
princess and hastily adjusting his lorgnette, as if without this
instrument he could not begin to speak.

"Why no, my dear fellow," said the astonished narrator, shrugging his
shoulders.

"Because I hate ghost stories," said Prince Hippolyte in a tone which
showed that he only understood the meaning of his words after he had
uttered them.

He spoke with such self-confidence that his hearers could not be sure
whether what he said was very witty or very stupid. He was dressed in a
dark-green dress coat, knee breeches of the color of cuisse de nymphe
effrayee, as he called it, shoes, and silk stockings.

The vicomte told his tale very neatly. It was an anecdote, then current,
to the effect that the Duc d'Enghien had gone secretly to Paris to visit
Mademoiselle George; that at her house he came upon Bonaparte, who also
enjoyed the famous actress' favors, and that in his presence Napoleon
happened to fall into one of the fainting fits to which he was subject,
and was thus at the duc's mercy. The latter spared him, and this
magnanimity Bonaparte subsequently repaid by death.

The story was very pretty and interesting, especially at the point where
the rivals suddenly recognized one another; and the ladies looked
agitated.

"Charming!" said Anna Pavlovna with an inquiring glance at the little
princess.

"Charming!" whispered the little princess, sticking the needle into her
work as if to testify that the interest and fascination of the story
prevented her from going on with it.

The vicomte appreciated this silent praise and smiling gratefully
prepared to continue, but just then Anna Pavlovna, who had kept a
watchful eye on the young man who so alarmed her, noticed that he was
talking too loudly and vehemently with the abbe, so she hurried to the
rescue. Pierre had managed to start a conversation with the abbe about
the balance of power, and the latter, evidently interested by the young
man's simple-minded eagerness, was explaining his pet theory. Both were
talking and listening too eagerly and too naturally, which was why Anna
Pavlovna disapproved.

"The means are... the balance of power in Europe and the rights of the
people," the abbe was saying. "It is only necessary for one powerful
nation like Russia--barbaric as she is said to be--to place herself
disinterestedly at the head of an alliance having for its object the
maintenance of the balance of power of Europe, and it would save the
world!"

"But how are you to get that balance?" Pierre was beginning.

At that moment Anna Pavlovna came up and, looking severely at Pierre,
asked the Italian how he stood Russian climate. The Italian's face
instantly changed and assumed an offensively affected, sugary
expression, evidently habitual to him when conversing with women.

"I am so enchanted by the brilliancy of the wit and culture of the
society, more especially of the feminine society, in which I have had
the honor of being received, that I have not yet had time to think of
the climate," said he.

Not letting the abbe and Pierre escape, Anna Pavlovna, the more
conveniently to keep them under observation, brought them into the
larger circle.




CHAPTER IV

Just then another visitor entered the drawing room: Prince Andrew
Bolkonski, the little princess' husband. He was a very handsome young
man, of medium height, with firm, clearcut features. Everything about
him, from his weary, bored expression to his quiet, measured step,
offered a most striking contrast to his quiet, little wife. It was
evident that he not only knew everyone in the drawing room, but had
found them to be so tiresome that it wearied him to look at or listen to
them. And among all these faces that he found so tedious, none seemed to
bore him so much as that of his pretty wife. He turned away from her
with a grimace that distorted his handsome face, kissed Anna Pavlovna's
hand, and screwing up his eyes scanned the whole company.

"You are off to the war, Prince?" said Anna Pavlovna.

"General Kutuzov," said Bolkonski, speaking French and stressing the
last syllable of the general's name like a Frenchman, "has been pleased
to take me as an aide-de-camp...."

"And Lise, your wife?"

"She will go to the country."

"Are you not ashamed to deprive us of your charming wife?"

"Andre," said his wife, addressing her husband in the same coquettish
manner in which she spoke to other men, "the vicomte has been telling us
such a tale about Mademoiselle George and Buonaparte!"

Prince Andrew screwed up his eyes and turned away. Pierre, who from the
moment Prince Andrew entered the room had watched him with glad,
affectionate eyes, now came up and took his arm. Before he looked round
Prince Andrew frowned again, expressing his annoyance with whoever was
touching his arm, but when he saw Pierre's beaming face he gave him an
unexpectedly kind and pleasant smile.

"There now!... So you, too, are in the great world?" said he to Pierre.

"I knew you would be here," replied Pierre. "I will come to supper with
you. May I?" he added in a low voice so as not to disturb the vicomte
who was continuing his story.

"No, impossible!" said Prince Andrew, laughing and pressing Pierre's
hand to show that there was no need to ask the question. He wished to
say something more, but at that moment Prince Vasili and his daughter
got up to go and the two young men rose to let them pass.

"You must excuse me, dear Vicomte," said Prince Vasili to the Frenchman,
holding him down by the sleeve in a friendly way to prevent his rising.
"This unfortunate fete at the ambassador's deprives me of a pleasure,
and obliges me to interrupt you. I am very sorry to leave your
enchanting party," said he, turning to Anna Pavlovna.

His daughter, Princess Helene, passed between the chairs, lightly
holding up the folds of her dress, and the smile shone still more
radiantly on her beautiful face. Pierre gazed at her with rapturous,
almost frightened, eyes as she passed him.

"Very lovely," said Prince Andrew.

"Very," said Pierre.

In passing Prince Vasili seized Pierre's hand and said to Anna Pavlovna:
"Educate this bear for me! He has been staying with me a whole month and
this is the first time I have seen him in society. Nothing is so
necessary for a young man as the society of clever women."

Anna Pavlovna smiled and promised to take Pierre in hand. She knew his
father to be a connection of Prince Vasili's. The elderly lady who had
been sitting with the old aunt rose hurriedly and overtook Prince Vasili
in the anteroom. All the affectation of interest she had assumed had
left her kindly and tear-worn face and it now expressed only anxiety and
fear.

"How about my son Boris, Prince?" said she, hurrying after him into the
anteroom. "I can't remain any longer in Petersburg. Tell me what news I
may take back to my poor boy."

Although Prince Vasili listened reluctantly and not very politely to the
elderly lady, even betraying some impatience, she gave him an
ingratiating and appealing smile, and took his hand that he might not go
away.

"What would it cost you to say a word to the Emperor, and then he would
be transferred to the Guards at once?" said she.

"Believe me, Princess, I am ready to do all I can," answered Prince
Vasili, "but it is difficult for me to ask the Emperor. I should advise
you to appeal to Rumyantsev through Prince Golitsyn. That would be the
best way."

The elderly lady was a Princess Drubetskaya, belonging to one of the
best families in Russia, but she was poor, and having long been out of
society had lost her former influential connections. She had now come to
Petersburg to procure an appointment in the Guards for her only son. It
was, in fact, solely to meet Prince Vasili that she had obtained an
invitation to Anna Pavlovna's reception and had sat listening to the
vicomte's story. Prince Vasili's words frightened her, an embittered
look clouded her once handsome face, but only for a moment; then she
smiled again and clutched Prince Vasili's arm more tightly.

"Listen to me, Prince," said she. "I have never yet asked you for
anything and I never will again, nor have I ever reminded you of my
father's friendship for you; but now I entreat you for God's sake to do
this for my son--and I shall always regard you as a benefactor," she
added hurriedly. "No, don't be angry, but promise! I have asked Golitsyn
and he has refused. Be the kindhearted man you always were," she said,
trying to smile though tears were in her eyes.

"Papa, we shall be late," said Princess Helene, turning her beautiful
head and looking over her classically molded shoulder as she stood
waiting by the door.

Influence in society, however, is a capital which has to be economized
if it is to last. Prince Vasili knew this, and having once realized that
if he asked on behalf of all who begged of him, he would soon be unable
to ask for himself, he became chary of using his influence. But in
Princess Drubetskaya's case he felt, after her second appeal, something
like qualms of conscience. She had reminded him of what was quite true;
he had been indebted to her father for the first steps in his career.
Moreover, he could see by her manners that she was one of those women--
mostly mothers--who, having once made up their minds, will not rest
until they have gained their end, and are prepared if necessary to go on
insisting day after day and hour after hour, and even to make scenes.
This last consideration moved him.

"My dear Anna Mikhaylovna," said he with his usual familiarity and
weariness of tone, "it is almost impossible for me to do what you ask;
but to prove my devotion to you and how I respect your father's memory,
I will do the impossible--your son shall be transferred to the Guards.
Here is my hand on it. Are you satisfied?"

"My dear benefactor! This is what I expected from you--I knew your
kindness!" He turned to go.

"Wait--just a word! When he has been transferred to the Guards..." she
faltered. "You are on good terms with Michael Ilarionovich Kutuzov...
recommend Boris to him as adjutant! Then I shall be at rest, and
then..."

Prince Vasili smiled.

"No, I won't promise that. You don't know how Kutuzov is pestered since
his appointment as Commander in Chief. He told me himself that all the
Moscow ladies have conspired to give him all their sons as adjutants."

"No, but do promise! I won't let you go! My dear benefactor..."

"Papa," said his beautiful daughter in the same tone as before, "we
shall be late."

"Well, au revoir! Good-bye! You hear her?"

"Then tomorrow you will speak to the Emperor?"

"Certainly; but about Kutuzov, I don't promise."

"Do promise, do promise, Vasili!" cried Anna Mikhaylovna as he went,
with the smile of a coquettish girl, which at one time probably came
naturally to her, but was now very ill-suited to her careworn face.

Apparently she had forgotten her age and by force of habit employed all
the old feminine arts. But as soon as the prince had gone her face
resumed its former cold, artificial expression. She returned to the
group where the vicomte was still talking, and again pretended to
listen, while waiting till it would be time to leave. Her task was
accomplished.




CHAPTER V

"And what do you think of this latest comedy, the coronation at Milan?"
asked Anna Pavlovna, "and of the comedy of the people of Genoa and Lucca
laying their petitions before Monsieur Buonaparte, and Monsieur
Buonaparte sitting on a throne and granting the petitions of the
nations? Adorable! It is enough to make one's head whirl! It is as if
the whole world had gone crazy."

Prince Andrew looked Anna Pavlovna straight in the face with a sarcastic
smile.

"'Dieu me la donne, gare a qui la touche!' * They say he was very fine
when he said that," he remarked, repeating the words in Italian: "'Dio
mi l'ha dato. Guai a chi la tocchi!'"


* God has given it to me, let him who touches it beware!

"I hope this will prove the last drop that will make the glass run
over," Anna Pavlovna continued. "The sovereigns will not be able to
endure this man who is a menace to everything."

"The sovereigns? I do not speak of Russia," said the vicomte, polite but
hopeless: "The sovereigns, madame... What have they done for Louis XVII,
for the Queen, or for Madame Elizabeth? Nothing!" and he became more
animated. "And believe me, they are reaping the reward of their betrayal
of the Bourbon cause. The sovereigns! Why, they are sending ambassadors
to compliment the usurper."

And sighing disdainfully, he again changed his position.

Prince Hippolyte, who had been gazing at the vicomte for some time
through his lorgnette, suddenly turned completely round toward the
little princess, and having asked for a needle began tracing the Conde
coat of arms on the table. He explained this to her with as much gravity
as if she had asked him to do it.

"Baton de gueules, engrele de gueules d'azur--maison Conde," said he.

The princess listened, smiling.

"If Buonaparte remains on the throne of France a year longer," the
vicomte continued, with the air of a man who, in a matter with which he
is better acquainted than anyone else, does not listen to others but
follows the current of his own thoughts, "things will have gone too far.
By intrigues, violence, exile, and executions, French society--I mean
good French society--will have been forever destroyed, and then..."

He shrugged his shoulders and spread out his hands. Pierre wished to
make a remark, for the conversation interested him, but Anna Pavlovna,
who had him under observation, interrupted:

"The Emperor Alexander," said she, with the melancholy which always
accompanied any reference of hers to the Imperial family, "has declared
that he will leave it to the French people themselves to choose their
own form of government; and I believe that once free from the usurper,
the whole nation will certainly throw itself into the arms of its
rightful king," she concluded, trying to be amiable to the royalist
emigrant.

"That is doubtful," said Prince Andrew. "Monsieur le Vicomte quite
rightly supposes that matters have already gone too far. I think it will
be difficult to return to the old regime."

"From what I have heard," said Pierre, blushing and breaking into the
conversation, "almost all the aristocracy has already gone over to
Bonaparte's side."

"It is the Buonapartists who say that," replied the vicomte without
looking at Pierre. "At the present time it is difficult to know the real
state of French public opinion."

"Bonaparte has said so," remarked Prince Andrew with a sarcastic smile.

It was evident that he did not like the vicomte and was aiming his
remarks at him, though without looking at him.

"'I showed them the path to glory, but they did not follow it,'" Prince
Andrew continued after a short silence, again quoting Napoleon's words.
"'I opened my antechambers and they crowded in.' I do not know how far
he was justified in saying so."

"Not in the least," replied the vicomte. "After the murder of the duc
even the most partial ceased to regard him as a hero. If to some
people," he went on, turning to Anna Pavlovna, "he ever was a hero,
after the murder of the duc there was one martyr more in heaven and one
hero less on earth."

Before Anna Pavlovna and the others had time to smile their appreciation
of the vicomte's epigram, Pierre again broke into the conversation, and
though Anna Pavlovna felt sure he would say something inappropriate, she
was unable to stop him.

"The execution of the Duc d'Enghien," declared Monsieur Pierre, "was a
political necessity, and it seems to me that Napoleon showed greatness
of soul by not fearing to take on himself the whole responsibility of
that deed."

"Dieu! Mon Dieu!" muttered Anna Pavlovna in a terrified whisper.

"What, Monsieur Pierre... Do you consider that assassination shows
greatness of soul?" said the little princess, smiling and drawing her
work nearer to her.

"Oh! Oh!" exclaimed several voices.

"Capital!" said Prince Hippolyte in English, and began slapping his knee
with the palm of his hand.

The vicomte merely shrugged his shoulders. Pierre looked solemnly at his
audience over his spectacles and continued.

"I say so," he continued desperately, "because the Bourbons fled from
the Revolution leaving the people to anarchy, and Napoleon alone
understood the Revolution and quelled it, and so for the general good,
he could not stop short for the sake of one man's life."

"Won't you come over to the other table?" suggested Anna Pavlovna.

But Pierre continued his speech without heeding her.

"No," cried he, becoming more and more eager, "Napoleon is great because
he rose superior to the Revolution, suppressed its abuses, preserved all
that was good in it--equality of citizenship and freedom of speech and
of the press--and only for that reason did he obtain power."

"Yes, if having obtained power, without availing himself of it to commit
murder he had restored it to the rightful king, I should have called him
a great man," remarked the vicomte.

"He could not do that. The people only gave him power that he might rid
them of the Bourbons and because they saw that he was a great man. The
Revolution was a grand thing!" continued Monsieur Pierre, betraying by
this desperate and provocative proposition his extreme youth and his
wish to express all that was in his mind.

"What? Revolution and regicide a grand thing?... Well, after that... But
won't you come to this other table?" repeated Anna Pavlovna.

"Rousseau's Contrat Social," said the vicomte with a tolerant smile.

"I am not speaking of regicide, I am speaking about ideas."

"Yes: ideas of robbery, murder, and regicide," again interjected an
ironical voice.

"Those were extremes, no doubt, but they are not what is most important.
What is important are the rights of man, emancipation from prejudices,
and equality of citizenship, and all these ideas Napoleon has retained
in full force."

"Liberty and equality," said the vicomte contemptuously, as if at last
deciding seriously to prove to this youth how foolish his words were,
"high-sounding words which have long been discredited. Who does not love
liberty and equality? Even our Saviour preached liberty and equality.
Have people since the Revolution become happier? On the contrary. We
wanted liberty, but Buonaparte has destroyed it."

Prince Andrew kept looking with an amused smile from Pierre to the
vicomte and from the vicomte to their hostess. In the first moment of
Pierre's outburst Anna Pavlovna, despite her social experience, was
horror-struck. But when she saw that Pierre's sacrilegious words had not
exasperated the vicomte, and had convinced herself that it was
impossible to stop him, she rallied her forces and joined the vicomte in
a vigorous attack on the orator.

"But, my dear Monsieur Pierre," said she, "how do you explain the fact
of a great man executing a duc--or even an ordinary man who--is innocent
and untried?"

"I should like," said the vicomte, "to ask how monsieur explains the
18th Brumaire; was not that an imposture? It was a swindle, and not at
all like the conduct of a great man!"

"And the prisoners he killed in Africa? That was horrible!" said the
little princess, shrugging her shoulders.

"He's a low fellow, say what you will," remarked Prince Hippolyte.

Pierre, not knowing whom to answer, looked at them all and smiled. His
smile was unlike the half-smile of other people. When he smiled, his
grave, even rather gloomy, look was instantaneously replaced by another-
-a childlike, kindly, even rather silly look, which seemed to ask
forgiveness.

The vicomte who was meeting him for the first time saw clearly that this
young Jacobin was not so terrible as his words suggested. All were
silent.

"How do you expect him to answer you all at once?" said Prince Andrew.
"Besides, in the actions of a statesman one has to distinguish between
his acts as a private person, as a general, and as an emperor. So it
seems to me."

"Yes, yes, of course!" Pierre chimed in, pleased at the arrival of this
reinforcement.

"One must admit," continued Prince Andrew, "that Napoleon as a man was
great on the bridge of Arcola, and in the hospital at Jaffa where he
gave his hand to the plague-stricken; but... but there are other acts
which it is difficult to justify."

Prince Andrew, who had evidently wished to tone down the awkwardness of
Pierre's remarks, rose and made a sign to his wife that it was time to
go.

Suddenly Prince Hippolyte started up making signs to everyone to attend,
and asking them all to be seated began:

"I was told a charming Moscow story today and must treat you to it.
Excuse me, Vicomte--I must tell it in Russian or the point will be
lost...." And Prince Hippolyte began to tell his story in such Russian
as a Frenchman would speak after spending about a year in Russia.
Everyone waited, so emphatically and eagerly did he demand their
attention to his story.

"There is in Moscow a lady, une dame, and she is very stingy. She must
have two footmen behind her carriage, and very big ones. That was her
taste. And she had a lady's maid, also big. She said..."

Here Prince Hippolyte paused, evidently collecting his ideas with
difficulty.

"She said... Oh yes! She said, 'Girl,' to the maid, 'put on a livery,
get up behind the carriage, and come with me while I make some calls.'"

Here Prince Hippolyte spluttered and burst out laughing long before his
audience, which produced an effect unfavorable to the narrator. Several
persons, among them the elderly lady and Anna Pavlovna, did however
smile.

"She went. Suddenly there was a great wind. The girl lost her hat and
her long hair came down...." Here he could contain himself no longer and
went on, between gasps of laughter: "And the whole world knew...."

And so the anecdote ended. Though it was unintelligible why he had told
it, or why it had to be told in Russian, still Anna Pavlovna and the
others appreciated Prince Hippolyte's social tact in so agreeably ending
Pierre's unpleasant and unamiable outburst. After the anecdote the
conversation broke up into insignificant small talk about the last and
next balls, about theatricals, and who would meet whom, and when and
where.




CHAPTER VI

Having thanked Anna Pavlovna for her charming soiree, the guests began
to take their leave.

Pierre was ungainly. Stout, about the average height, broad, with huge
red hands; he did not know, as the saying is, how to enter a drawing
room and still less how to leave one; that is, how to say something
particularly agreeable before going away. Besides this he was absent-
minded. When he rose to go, he took up instead of his own, the general's
three-cornered hat, and held it, pulling at the plume, till the general
asked him to restore it. All his absent-mindedness and inability to
enter a room and converse in it was, however, redeemed by his kindly,
simple, and modest expression. Anna Pavlovna turned toward him and, with
a Christian mildness that expressed forgiveness of his indiscretion,
nodded and said: "I hope to see you again, but I also hope you will
change your opinions, my dear Monsieur Pierre."

When she said this, he did not reply and only bowed, but again everybody
saw his smile, which said nothing, unless perhaps, "Opinions are
opinions, but you see what a capital, good-natured fellow I am." And
everyone, including Anna Pavlovna, felt this.

Prince Andrew had gone out into the hall, and, turning his shoulders to
the footman who was helping him on with his cloak, listened
indifferently to his wife's chatter with Prince Hippolyte who had also
come into the hall. Prince Hippolyte stood close to the pretty, pregnant
princess, and stared fixedly at her through his eyeglass.

"Go in, Annette, or you will catch cold," said the little princess,
taking leave of Anna Pavlovna. "It is settled," she added in a low
voice.

Anna Pavlovna had already managed to speak to Lise about the match she
contemplated between Anatole and the little princess' sister-in-law.

"I rely on you, my dear," said Anna Pavlovna, also in a low tone. "Write
to her and let me know how her father looks at the matter. Au revoir!"--
and she left the hall.

Prince Hippolyte approached the little princess and, bending his face
close to her, began to whisper something.

Two footmen, the princess' and his own, stood holding a shawl and a
cloak, waiting for the conversation to finish. They listened to the
French sentences which to them were meaningless, with an air of
understanding but not wishing to appear to do so. The princess as usual
spoke smilingly and listened with a laugh.

"I am very glad I did not go to the ambassador's," said Prince Hippolyte
"-so dull-. It has been a delightful evening, has it not? Delightful!"

"They say the ball will be very good," replied the princess, drawing up
her downy little lip. "All the pretty women in society will be there."

"Not all, for you will not be there; not all," said Prince Hippolyte
smiling joyfully; and snatching the shawl from the footman, whom he even
pushed aside, he began wrapping it round the princess. Either from
awkwardness or intentionally (no one could have said which) after the
shawl had been adjusted he kept his arm around her for a long time, as
though embracing her.

Still smiling, she gracefully moved away, turning and glancing at her
husband. Prince Andrew's eyes were closed, so weary and sleepy did he
seem.

"Are you ready?" he asked his wife, looking past her.

Prince Hippolyte hurriedly put on his cloak, which in the latest fashion
reached to his very heels, and, stumbling in it, ran out into the porch
following the princess, whom a footman was helping into the carriage.

"Princesse, au revoir," cried he, stumbling with his tongue as well as
with his feet.

The princess, picking up her dress, was taking her seat in the dark
carriage, her husband was adjusting his saber; Prince Hippolyte, under
pretense of helping, was in everyone's way.

"Allow me, sir," said Prince Andrew in Russian in a cold, disagreeable
tone to Prince Hippolyte who was blocking his path.

"I am expecting you, Pierre," said the same voice, but gently and
affectionately.

The postilion started, the carriage wheels rattled. Prince Hippolyte
laughed spasmodically as he stood in the porch waiting for the vicomte
whom he had promised to take home.

"Well, mon cher," said the vicomte, having seated himself beside
Hippolyte in the carriage, "your little princess is very nice, very nice
indeed, quite French," and he kissed the tips of his fingers. Hippolyte
burst out laughing.

"Do you know, you are a terrible chap for all your innocent airs,"
continued the vicomte. "I pity the poor husband, that little officer who
gives himself the airs of a monarch."

Hippolyte spluttered again, and amid his laughter said, "And you were
saying that the Russian ladies are not equal to the French? One has to
know how to deal with them."

Pierre reaching the house first went into Prince Andrew's study like one
quite at home, and from habit immediately lay down on the sofa, took
from the shelf the first book that came to his hand (it was Caesar's
Commentaries), and resting on his elbow, began reading it in the middle.

"What have you done to Mlle Scherer? She will be quite ill now," said
Prince Andrew, as he entered the study, rubbing his small white hands.

Pierre turned his whole body, making the sofa creak. He lifted his eager
face to Prince Andrew, smiled, and waved his hand.

"That abbe is very interesting but he does not see the thing in the
right light.... In my opinion perpetual peace is possible but--I do not
know how to express it... not by a balance of political power...."

It was evident that Prince Andrew was not interested in such abstract
conversation.

"One can't everywhere say all one thinks, mon cher. Well, have you at
last decided on anything? Are you going to be a guardsman or a
diplomatist?" asked Prince Andrew after a momentary silence.

Pierre sat up on the sofa, with his legs tucked under him.

"Really, I don't yet know. I don't like either the one or the other."

"But you must decide on something! Your father expects it."

Pierre at the age of ten had been sent abroad with an abbe as tutor, and
had remained away till he was twenty. When he returned to Moscow his
father dismissed the abbe and said to the young man, "Now go to
Petersburg, look round, and choose your profession. I will agree to
anything. Here is a letter to Prince Vasili, and here is money. Write to
me all about it, and I will help you in everything." Pierre had already
been choosing a career for three months, and had not decided on
anything. It was about this choice that Prince Andrew was speaking.
Pierre rubbed his forehead.

"But he must be a Freemason," said he, referring to the abbe whom he had
met that evening.

"That is all nonsense." Prince Andrew again interrupted him, "let us
talk business. Have you been to the Horse Guards?"

"No, I have not; but this is what I have been thinking and wanted to
tell you. There is a war now against Napoleon. If it were a war for
freedom I could understand it and should be the first to enter the army;
but to help England and Austria against the greatest man in the world is
not right."

Prince Andrew only shrugged his shoulders at Pierre's childish words. He
put on the air of one who finds it impossible to reply to such nonsense,
but it would in fact have been difficult to give any other answer than
the one Prince Andrew gave to this naive question.

"If no one fought except on his own conviction, there would be no wars,"
he said.

"And that would be splendid," said Pierre.

Prince Andrew smiled ironically.

"Very likely it would be splendid, but it will never come about..."

"Well, why are you going to the war?" asked Pierre.

"What for? I don't know. I must. Besides that I am going..." He paused.
"I am going because the life I am leading here does not suit me!"




CHAPTER VII

The rustle of a woman's dress was heard in the next room. Prince Andrew
shook himself as if waking up, and his face assumed the look it had had
in Anna Pavlovna's drawing room. Pierre removed his feet from the sofa.
The princess came in. She had changed her gown for a house dress as
fresh and elegant as the other. Prince Andrew rose and politely placed a
chair for her.

"How is it," she began, as usual in French, settling down briskly and
fussily in the easy chair, "how is it Annette never got married? How
stupid you men all are not to have married her! Excuse me for saying so,
but you have no sense about women. What an argumentative fellow you are,
Monsieur Pierre!"

"And I am still arguing with your husband. I can't understand why he
wants to go to the war," replied Pierre, addressing the princess with
none of the embarrassment so commonly shown by young men in their
intercourse with young women.

The princess started. Evidently Pierre's words touched her to the quick.

"Ah, that is just what I tell him!" said she. "I don't understand it; I
don't in the least understand why men can't live without wars. How is it
that we women don't want anything of the kind, don't need it? Now you
shall judge between us. I always tell him: Here he is Uncle's aide-de-
camp, a most brilliant position. He is so well known, so much
appreciated by everyone. The other day at the Apraksins' I heard a lady
asking, 'Is that the famous Prince Andrew?' I did indeed." She laughed.
"He is so well received everywhere. He might easily become aide-de-camp
to the Emperor. You know the Emperor spoke to him most graciously.
Annette and I were speaking of how to arrange it. What do you think?"

Pierre looked at his friend and, noticing that he did not like the
conversation, gave no reply.

"When are you starting?" he asked.

"Oh, don't speak of his going, don't! I won't hear it spoken of," said
the princess in the same petulantly playful tone in which she had spoken
to Hippolyte in the drawing room and which was so plainly ill-suited to
the family circle of which Pierre was almost a member. "Today when I
remembered that all these delightful associations must be broken off...
and then you know, Andre..." (she looked significantly at her husband)
"I'm afraid, I'm afraid!" she whispered, and a shudder ran down her
back.

Her husband looked at her as if surprised to notice that someone besides
Pierre and himself was in the room, and addressed her in a tone of
frigid politeness.

"What is it you are afraid of, Lise? I don't understand," said he.

"There, what egotists men all are: all, all egotists! Just for a whim of
his own, goodness only knows why, he leaves me and locks me up alone in
the country."

"With my father and sister, remember," said Prince Andrew gently.

"Alone all the same, without my friends.... And he expects me not to be
afraid."

Her tone was now querulous and her lip drawn up, giving her not a
joyful, but an animal, squirrel-like expression. She paused as if she
felt it indecorous to speak of her pregnancy before Pierre, though the
gist of the matter lay in that.

"I still can't understand what you are afraid of," said Prince Andrew
slowly, not taking his eyes off his wife.

The princess blushed, and raised her arms with a gesture of despair.

"No, Andrew, I must say you have changed. Oh, how you have..."

"Your doctor tells you to go to bed earlier," said Prince Andrew. "You
had better go."

The princess said nothing, but suddenly her short downy lip quivered.
Prince Andrew rose, shrugged his shoulders, and walked about the room.

Pierre looked over his spectacles with naive surprise, now at him and
now at her, moved as if about to rise too, but changed his mind.

"Why should I mind Monsieur Pierre being here?" exclaimed the little
princess suddenly, her pretty face all at once distorted by a tearful
grimace. "I have long wanted to ask you, Andrew, why you have changed so
to me? What have I done to you? You are going to the war and have no
pity for me. Why is it?"

"Lise!" was all Prince Andrew said. But that one word expressed an
entreaty, a threat, and above all conviction that she would herself
regret her words. But she went on hurriedly:

"You treat me like an invalid or a child. I see it all! Did you behave
like that six months ago?"

"Lise, I beg you to desist," said Prince Andrew still more emphatically.

Pierre, who had been growing more and more agitated as he listened to
all this, rose and approached the princess. He seemed unable to bear the
sight of tears and was ready to cry himself.

"Calm yourself, Princess! It seems so to you because... I assure you I
myself have experienced... and so... because... No, excuse me! An
outsider is out of place here... No, don't distress yourself... Good-
bye!"

Prince Andrew caught him by the hand.

"No, wait, Pierre! The princess is too kind to wish to deprive me of the
pleasure of spending the evening with you."

"No, he thinks only of himself," muttered the princess without
restraining her angry tears.

"Lise!" said Prince Andrew dryly, raising his voice to the pitch which
indicates that patience is exhausted.

Suddenly the angry, squirrel-like expression of the princess' pretty
face changed into a winning and piteous look of fear. Her beautiful eyes
glanced askance at her husband's face, and her own assumed the timid,
deprecating expression of a dog when it rapidly but feebly wags its
drooping tail.

"Mon Dieu, mon Dieu!" she muttered, and lifting her dress with one hand
she went up to her husband and kissed him on the forehead.

"Good night, Lise," said he, rising and courteously kissing her hand as
he would have done to a stranger.




CHAPTER VIII

The friends were silent. Neither cared to begin talking. Pierre
continually glanced at Prince Andrew; Prince Andrew rubbed his forehead
with his small hand.

"Let us go and have supper," he said with a sigh, going to the door.

They entered the elegant, newly decorated, and luxurious dining room.
Everything from the table napkins to the silver, china, and glass bore
that imprint of newness found in the households of the newly married.
Halfway through supper Prince Andrew leaned his elbows on the table and,
with a look of nervous agitation such as Pierre had never before seen on
his face, began to talk--as one who has long had something on his mind
and suddenly determines to speak out.

"Never, never marry, my dear fellow! That's my advice: never marry till
you can say to yourself that you have done all you are capable of, and
until you have ceased to love the woman of your choice and have seen her
plainly as she is, or else you will make a cruel and irrevocable
mistake. Marry when you are old and good for nothing--or all that is
good and noble in you will be lost. It will all be wasted on trifles.
Yes! Yes! Yes! Don't look at me with such surprise. If you marry
expecting anything from yourself in the future, you will feel at every
step that for you all is ended, all is closed except the drawing room,
where you will be ranged side by side with a court lackey and an
idiot!... But what's the good?..." and he waved his arm.

Pierre took off his spectacles, which made his face seem different and
the good-natured expression still more apparent, and gazed at his friend
in amazement.

"My wife," continued Prince Andrew, "is an excellent woman, one of those
rare women with whom a man's honor is safe; but, O God, what would I not
give now to be unmarried! You are the first and only one to whom I
mention this, because I like you."

As he said this Prince Andrew was less than ever like that Bolkonski who
had lolled in Anna Pavlovna's easy chairs and with half-closed eyes had
uttered French phrases between his teeth. Every muscle of his thin face
was now quivering with nervous excitement; his eyes, in which the fire
of life had seemed extinguished, now flashed with brilliant light. It
was evident that the more lifeless he seemed at ordinary times, the more
impassioned he became in these moments of almost morbid irritation.

"You don't understand why I say this," he continued, "but it is the
whole story of life. You talk of Bonaparte and his career," said he
(though Pierre had not mentioned Bonaparte), "but Bonaparte when he
worked went step by step toward his goal. He was free, he had nothing
but his aim to consider, and he reached it. But tie yourself up with a
woman and, like a chained convict, you lose all freedom! And all you
have of hope and strength merely weighs you down and torments you with
regret. Drawing rooms, gossip, balls, vanity, and triviality--these are
the enchanted circle I cannot escape from. I am now going to the war,
the greatest war there ever was, and I know nothing and am fit for
nothing. I am very amiable and have a caustic wit," continued Prince
Andrew, "and at Anna Pavlovna's they listen to me. And that stupid set
without whom my wife cannot exist, and those women... If you only knew
what those society women are, and women in general! My father is right.
Selfish, vain, stupid, trivial in everything--that's what women are when
you see them in their true colors! When you meet them in society it
seems as if there were something in them, but there's nothing, nothing,
nothing! No, don't marry, my dear fellow; don't marry!" concluded Prince
Andrew.

"It seems funny to me," said Pierre, "that you, you should consider
yourself incapable and your life a spoiled life. You have everything
before you, everything. And you..."

He did not finish his sentence, but his tone showed how highly he
thought of his friend and how much he expected of him in the future.

"How can he talk like that?" thought Pierre. He considered his friend a
model of perfection because Prince Andrew possessed in the highest
degree just the very qualities Pierre lacked, and which might be best
described as strength of will. Pierre was always astonished at Prince
Andrew's calm manner of treating everybody, his extraordinary memory,
his extensive reading (he had read everything, knew everything, and had
an opinion about everything), but above all at his capacity for work and
study. And if Pierre was often struck by Andrew's lack of capacity for
philosophical meditation (to which he himself was particularly
addicted), he regarded even this not as a defect but as a sign of
strength.

Even in the best, most friendly and simplest relations of life, praise
and commendation are essential, just as grease is necessary to wheels
that they may run smoothly.

"My part is played out," said Prince Andrew. "What's the use of talking
about me? Let us talk about you," he added after a silence, smiling at
his reassuring thoughts.

That smile was immediately reflected on Pierre's face.

"But what is there to say about me?" said Pierre, his face relaxing into
a careless, merry smile. "What am I? An illegitimate son!" He suddenly
blushed crimson, and it was plain that he had made a great effort to say
this. "Without a name and without means... And it really..." But he did
not say what "it really" was. "For the present I am free and am all
right. Only I haven't the least idea what I am to do; I wanted to
consult you seriously."

Prince Andrew looked kindly at him, yet his glance--friendly and
affectionate as it was--expressed a sense of his own superiority.

"I am fond of you, especially as you are the one live man among our
whole set. Yes, you're all right! Choose what you will; it's all the
same. You'll be all right anywhere. But look here: give up visiting
those Kuragins and leading that sort of life. It suits you so badly--all
this debauchery, dissipation, and the rest of it!"

"What would you have, my dear fellow?" answered Pierre, shrugging his
shoulders. "Women, my dear fellow; women!"

"I don't understand it," replied Prince Andrew. "Women who are comme il
faut, that's a different matter; but the Kuragins' set of women, 'women
and wine' I don't understand!"

Pierre was staying at Prince Vasili Kuragin's and sharing the dissipated
life of his son Anatole, the son whom they were planning to reform by
marrying him to Prince Andrew's sister.

"Do you know?" said Pierre, as if suddenly struck by a happy thought,
"seriously, I have long been thinking of it.... Leading such a life I
can't decide or think properly about anything. One's head aches, and one
spends all one's money. He asked me for tonight, but I won't go."

"You give me your word of honor not to go?"

"On my honor!"




CHAPTER IX

It was past one o'clock when Pierre left his friend. It was a cloudless,
northern, summer night. Pierre took an open cab intending to drive
straight home. But the nearer he drew to the house the more he felt the
impossibility of going to sleep on such a night. It was light enough to
see a long way in the deserted street and it seemed more like morning or
evening than night. On the way Pierre remembered that Anatole Kuragin
was expecting the usual set for cards that evening, after which there
was generally a drinking bout, finishing with visits of a kind Pierre
was very fond of.

"I should like to go to Kuragin's," thought he.

But he immediately recalled his promise to Prince Andrew not to go
there. Then, as happens to people of weak character, he desired so
passionately once more to enjoy that dissipation he was so accustomed to
that he decided to go. The thought immediately occurred to him that his
promise to Prince Andrew was of no account, because before he gave it he
had already promised Prince Anatole to come to his gathering; "besides,"
thought he, "all such 'words of honor' are conventional things with no
definite meaning, especially if one considers that by tomorrow one may
be dead, or something so extraordinary may happen to one that honor and
dishonor will be all the same!" Pierre often indulged in reflections of
this sort, nullifying all his decisions and intentions. He went to
Kuragin's.

Reaching the large house near the Horse Guards' barracks, in which
Anatole lived, Pierre entered the lighted porch, ascended the stairs,
and went in at the open door. There was no one in the anteroom; empty
bottles, cloaks, and overshoes were lying about; there was a smell of
alcohol, and sounds of voices and shouting in the distance.

Cards and supper were over, but the visitors had not yet dispersed.
Pierre threw off his cloak and entered the first room, in which were the
remains of supper. A footman, thinking no one saw him, was drinking on
the sly what was left in the glasses. From the third room came sounds of
laughter, the shouting of familiar voices, the growling of a bear, and
general commotion. Some eight or nine young men were crowding anxiously
round an open window. Three others were romping with a young bear, one
pulling him by the chain and trying to set him at the others.

"I bet a hundred on Stevens!" shouted one.

"Mind, no holding on!" cried another.

"I bet on Dolokhov!" cried a third. "Kuragin, you part our hands."

"There, leave Bruin alone; here's a bet on."

"At one draught, or he loses!" shouted a fourth.

"Jacob, bring a bottle!" shouted the host, a tall, handsome fellow who
stood in the midst of the group, without a coat, and with his fine linen
shirt unfastened in front. "Wait a bit, you fellows.... Here is Petya!
Good man!" cried he, addressing Pierre.

Another voice, from a man of medium height with clear blue eyes,
particularly striking among all these drunken voices by its sober ring,
cried from the window: "Come here; part the bets!" This was Dolokhov, an
officer of the Semenov regiment, a notorious gambler and duelist, who
was living with Anatole. Pierre smiled, looking about him merrily.

"I don't understand. What's it all about?"

"Wait a bit, he is not drunk yet! A bottle here," said Anatole, taking a
glass from the table he went up to Pierre.

"First of all you must drink!"

Pierre drank one glass after another, looking from under his brows at
the tipsy guests who were again crowding round the window, and listening
to their chatter. Anatole kept on refilling Pierre's glass while
explaining that Dolokhov was betting with Stevens, an English naval
officer, that he would drink a bottle of rum sitting on the outer ledge
of the third floor window with his legs hanging out.

"Go on, you must drink it all," said Anatole, giving Pierre the last
glass, "or I won't let you go!"

"No, I won't," said Pierre, pushing Anatole aside, and he went up to the
window.

Dolokhov was holding the Englishman's hand and clearly and distinctly
repeating the terms of the bet, addressing himself particularly to
Anatole and Pierre.

Dolokhov was of medium height, with curly hair and light-blue eyes. He
was about twenty-five. Like all infantry officers he wore no mustache,
so that his mouth, the most striking feature of his face, was clearly
seen. The lines of that mouth were remarkably finely curved. The middle
of the upper lip formed a sharp wedge and closed firmly on the firm
lower one, and something like two distinct smiles played continually
round the two corners of the mouth; this, together with the resolute,
insolent intelligence of his eyes, produced an effect which made it
impossible not to notice his face. Dolokhov was a man of small means and
no connections. Yet, though Anatole spent tens of thousands of rubles,
Dolokhov lived with him and had placed himself on such a footing that
all who knew them, including Anatole himself, respected him more than
they did Anatole. Dolokhov could play all games and nearly always won.
However much he drank, he never lost his clearheadedness. Both Kuragin
and Dolokhov were at that time notorious among the rakes and scapegraces
of Petersburg.

The bottle of rum was brought. The window frame which prevented anyone
from sitting on the outer sill was being forced out by two footmen, who
were evidently flurried and intimidated by the directions and shouts of
the gentlemen around.

Anatole with his swaggering air strode up to the window. He wanted to
smash something. Pushing away the footmen he tugged at the frame, but
could not move it. He smashed a pane.

"You have a try, Hercules," said he, turning to Pierre.

Pierre seized the crossbeam, tugged, and wrenched the oak frame out with
a crash.

"Take it right out, or they'll think I'm holding on," said Dolokhov.

"Is the Englishman bragging?... Eh? Is it all right?" said Anatole.

"First-rate," said Pierre, looking at Dolokhov, who with a bottle of rum
in his hand was approaching the window, from which the light of the sky,
the dawn merging with the afterglow of sunset, was visible.

Dolokhov, the bottle of rum still in his hand, jumped onto the window
sill. "Listen!" cried he, standing there and addressing those in the
room. All were silent.

"I bet fifty imperials"--he spoke French that the Englishman might
understand him, but he did not speak it very well--"I bet fifty
imperials... or do you wish to make it a hundred?" added he, addressing
the Englishman.

"No, fifty," replied the latter.

"All right. Fifty imperials... that I will drink a whole bottle of rum
without taking it from my mouth, sitting outside the window on this
spot" (he stooped and pointed to the sloping ledge outside the window)
"and without holding on to anything. Is that right?"

"Quite right," said the Englishman.

Anatole turned to the Englishman and taking him by one of the buttons of
his coat and looking down at him--the Englishman was short--began
repeating the terms of the wager to him in English.

"Wait!" cried Dolokhov, hammering with the bottle on the window sill to
attract attention. "Wait a bit, Kuragin. Listen! If anyone else does the
same, I will pay him a hundred imperials. Do you understand?"

The Englishman nodded, but gave no indication whether he intended to
accept this challenge or not. Anatole did not release him, and though he
kept nodding to show that he understood, Anatole went on translating
Dolokhov's words into English. A thin young lad, an hussar of the Life
Guards, who had been losing that evening, climbed on the window sill,
leaned over, and looked down.

"Oh! Oh! Oh!" he muttered, looking down from the window at the stones of
the pavement.

"Shut up!" cried Dolokhov, pushing him away from the window. The lad
jumped awkwardly back into the room, tripping over his spurs.

Placing the bottle on the window sill where he could reach it easily,
Dolokhov climbed carefully and slowly through the window and lowered his
legs. Pressing against both sides of the window, he adjusted himself on
his seat, lowered his hands, moved a little to the right and then to the
left, and took up the bottle. Anatole brought two candles and placed
them on the window sill, though it was already quite light. Dolokhov's
back in his white shirt, and his curly head, were lit up from both
sides. Everyone crowded to the window, the Englishman in front. Pierre
stood smiling but silent. One man, older than the others present,
suddenly pushed forward with a scared and angry look and wanted to seize
hold of Dolokhov's shirt.

"I say, this is folly! He'll be killed," said this more sensible man.

Anatole stopped him.

"Don't touch him! You'll startle him and then he'll be killed. Eh?...
What then?... Eh?"

Dolokhov turned round and, again holding on with both hands, arranged
himself on his seat.

"If anyone comes meddling again," said he, emitting the words separately
through his thin compressed lips, "I will throw him down there. Now
then!"

Saying this he again turned round, dropped his hands, took the bottle
and lifted it to his lips, threw back his head, and raised his free hand
to balance himself. One of the footmen who had stooped to pick up some
broken glass remained in that position without taking his eyes from the
window and from Dolokhov's back. Anatole stood erect with staring eyes.
The Englishman looked on sideways, pursing up his lips. The man who had
wished to stop the affair ran to a corner of the room and threw himself
on a sofa with his face to the wall. Pierre hid his face, from which a
faint smile forgot to fade though his features now expressed horror and
fear. All were still. Pierre took his hands from his eyes. Dolokhov
still sat in the same position, only his head was thrown further back
till his curly hair touched his shirt collar, and the hand holding the
bottle was lifted higher and higher and trembled with the effort. The
bottle was emptying perceptibly and rising still higher and his head
tilting yet further back. "Why is it so long?" thought Pierre. It seemed
to him that more than half an hour had elapsed. Suddenly Dolokhov made a
backward movement with his spine, and his arm trembled nervously; this
was sufficient to cause his whole body to slip as he sat on the sloping
ledge. As he began slipping down, his head and arm wavered still more
with the strain. One hand moved as if to clutch the window sill, but
refrained from touching it. Pierre again covered his eyes and thought he
would never open them again. Suddenly he was aware of a stir all around.
He looked up: Dolokhov was standing on the window sill, with a pale but
radiant face.

"It's empty."

He threw the bottle to the Englishman, who caught it neatly. Dolokhov
jumped down. He smelt strongly of rum.

"Well done!... Fine fellow!... There's a bet for you!... Devil take
you!" came from different sides.

The Englishman took out his purse and began counting out the money.
Dolokhov stood frowning and did not speak. Pierre jumped upon the window
sill.

"Gentlemen, who wishes to bet with me? I'll do the same thing!" he
suddenly cried. "Even without a bet, there! Tell them to bring me a
bottle. I'll do it.... Bring a bottle!"

"Let him do it, let him do it," said Dolokhov, smiling.

"What next? Have you gone mad?... No one would let you!... Why, you go
giddy even on a staircase," exclaimed several voices.

"I'll drink it! Let's have a bottle of rum!" shouted Pierre, banging the
table with a determined and drunken gesture and preparing to climb out
of the window.

They seized him by his arms; but he was so strong that everyone who
touched him was sent flying.

"No, you'll never manage him that way," said Anatole. "Wait a bit and
I'll get round him.... Listen! I'll take your bet tomorrow, but now we
are all going to ----'s."

"Come on then," cried Pierre. "Come on!... And we'll take Bruin with
us."

And he caught the bear, took it in his arms, lifted it from the ground,
and began dancing round the room with it.




CHAPTER X

Prince Vasili kept the promise he had given to Princess Drubetskaya who
had spoken to him on behalf of her only son Boris on the evening of Anna
Pavlovna's soiree. The matter was mentioned to the Emperor, an exception
made, and Boris transferred into the regiment of Semenov Guards with the
rank of cornet. He received, however, no appointment to Kutuzov's staff
despite all Anna Mikhaylovna's endeavors and entreaties. Soon after Anna
Pavlovna's reception Anna Mikhaylovna returned to Moscow and went
straight to her rich relations, the Rostovs, with whom she stayed when
in the town and where her darling Bory, who had only just entered a
regiment of the line and was being at once transferred to the Guards as
a cornet, had been educated from childhood and lived for years at a
time. The Guards had already left Petersburg on the tenth of August, and
her son, who had remained in Moscow for his equipment, was to join them
on the march to Radzivilov.

It was St. Natalia's day and the name day of two of the Rostovs--the
mother and the youngest daughter--both named Nataly. Ever since the
morning, carriages with six horses had been coming and going
continually, bringing visitors to the Countess Rostova's big house on
the Povarskaya, so well known to all Moscow. The countess herself and
her handsome eldest daughter were in the drawing-room with the visitors
who came to congratulate, and who constantly succeeded one another in
relays.

The countess was a woman of about forty-five, with a thin Oriental type
of face, evidently worn out with childbearing--she had had twelve. A
languor of motion and speech, resulting from weakness, gave her a
distinguished air which inspired respect. Princess Anna Mikhaylovna
Drubetskaya, who as a member of the household was also seated in the
drawing room, helped to receive and entertain the visitors. The young
people were in one of the inner rooms, not considering it necessary to
take part in receiving the visitors. The count met the guests and saw
them off, inviting them all to dinner.

"I am very, very grateful to you, mon cher," or "ma chere"--he called
everyone without exception and without the slightest variation in his
tone, "my dear," whether they were above or below him in rank--"I thank
you for myself and for our two dear ones whose name day we are keeping.
But mind you come to dinner or I shall be offended, ma chere! On behalf
of the whole family I beg you to come, mon cher!" These words he
repeated to everyone without exception or variation, and with the same
expression on his full, cheerful, clean-shaven face, the same firm
pressure of the hand and the same quick, repeated bows. As soon as he
had seen a visitor off he returned to one of those who were still in the
drawing room, drew a chair toward him or her, and jauntily spreading out
his legs and putting his hands on his knees with the air of a man who
enjoys life and knows how to live, he swayed to and fro with dignity,
offered surmises about the weather, or touched on questions of health,
sometimes in Russian and sometimes in very bad but self-confident
French; then again, like a man weary but unflinching in the fulfillment
of duty, he rose to see some visitors off and, stroking his scanty gray
hairs over his bald patch, also asked them to dinner. Sometimes on his
way back from the anteroom he would pass through the conservatory and
pantry into the large marble dining hall, where tables were being set
out for eighty people; and looking at the footmen, who were bringing in
silver and china, moving tables, and unfolding damask table linen, he
would call Dmitri Vasilevich, a man of good family and the manager of
all his affairs, and while looking with pleasure at the enormous table
would say: "Well, Dmitri, you'll see that things are all as they should
be? That's right! The great thing is the serving, that's it." And with a
complacent sigh he would return to the drawing room.

"Marya Lvovna Karagina and her daughter!" announced the countess'
gigantic footman in his bass voice, entering the drawing room. The
countess reflected a moment and took a pinch from a gold snuffbox with
her husband's portrait on it.

"I'm quite worn out by these callers. However, I'll see her and no more.
She is so affected. Ask her in," she said to the footman in a sad voice,
as if saying: "Very well, finish me off."

A tall, stout, and proud-looking woman, with a round-faced smiling
daughter, entered the drawing room, their dresses rustling.

"Dear Countess, what an age... She has been laid up, poor child... at
the Razumovski's ball... and Countess Apraksina... I was so
delighted..." came the sounds of animated feminine voices, interrupting
one another and mingling with the rustling of dresses and the scraping
of chairs. Then one of those conversations began which last out until,
at the first pause, the guests rise with a rustle of dresses and say, "I
am so delighted... Mamma's health... and Countess Apraksina..." and
then, again rustling, pass into the anteroom, put on cloaks or mantles,
and drive away. The conversation was on the chief topic of the day: the
illness of the wealthy and celebrated beau of Catherine's day, Count
Bezukhov, and about his illegitimate son Pierre, the one who had behaved
so improperly at Anna Pavlovna's reception.

"I am so sorry for the poor count," said the visitor. "He is in such bad
health, and now this vexation about his son is enough to kill him!"

"What is that?" asked the countess as if she did not know what the
visitor alluded to, though she had already heard about the cause of
Count Bezukhov's distress some fifteen times.

"That's what comes of a modern education," exclaimed the visitor. "It
seems that while he was abroad this young man was allowed to do as he
liked, now in Petersburg I hear he has been doing such terrible things
that he has been expelled by the police."

"You don't say so!" replied the countess.

"He chose his friends badly," interposed Anna Mikhaylovna. "Prince
Vasili's son, he, and a certain Dolokhov have, it is said, been up to
heaven only knows what! And they have had to suffer for it. Dolokhov has
been degraded to the ranks and Bezukhov's son sent back to Moscow.
Anatole Kuragin's father managed somehow to get his son's affair hushed
up, but even he was ordered out of Petersburg."

"But what have they been up to?" asked the countess.

"They are regular brigands, especially Dolokhov," replied the visitor.
"He is a son of Marya Ivanovna Dolokhova, such a worthy woman, but
there, just fancy! Those three got hold of a bear somewhere, put it in a
carriage, and set off with it to visit some actresses! The police tried
to interfere, and what did the young men do? They tied a policeman and
the bear back to back and put the bear into the Moyka Canal. And there
was the bear swimming about with the policeman on his back!"

"What a nice figure the policeman must have cut, my dear!" shouted the
count, dying with laughter.

"Oh, how dreadful! How can you laugh at it, Count?"

Yet the ladies themselves could not help laughing.

"It was all they could do to rescue the poor man," continued the
visitor. "And to think it is Cyril Vladimirovich Bezukhov's son who
amuses himself in this sensible manner! And he was said to be so well
educated and clever. This is all that his foreign education has done for
him! I hope that here in Moscow no one will receive him, in spite of his
money. They wanted to introduce him to me, but I quite declined: I have
my daughters to consider."

"Why do you say this young man is so rich?" asked the countess, turning
away from the girls, who at once assumed an air of inattention. "His
children are all illegitimate. I think Pierre also is illegitimate."

The visitor made a gesture with her hand.

"I should think he has a score of them."

Princess Anna Mikhaylovna intervened in the conversation, evidently
wishing to show her connections and knowledge of what went on in
society.

"The fact of the matter is," said she significantly, and also in a half
whisper, "everyone knows Count Cyril's reputation.... He has lost count
of his children, but this Pierre was his favorite."

"How handsome the old man still was only a year ago!" remarked the
countess. "I have never seen a handsomer man."

"He is very much altered now," said Anna Mikhaylovna. "Well, as I was
saying, Prince Vasili is the next heir through his wife, but the count
is very fond of Pierre, looked after his education, and wrote to the
Emperor about him; so that in the case of his death--and he is so ill
that he may die at any moment, and Dr. Lorrain has come from Petersburg-
-no one knows who will inherit his immense fortune, Pierre or Prince
Vasili. Forty thousand serfs and millions of rubles! I know it all very
well for Prince Vasili told me himself. Besides, Cyril Vladimirovich is
my mother's second cousin. He's also my Bory's godfather," she added, as
if she attached no importance at all to the fact.

"Prince Vasili arrived in Moscow yesterday. I hear he has come on some
inspection business," remarked the visitor.

"Yes, but between ourselves," said the princess, "that is a pretext. The
fact is he has come to see Count Cyril Vladimirovich, hearing how ill he
is."

"But do you know, my dear, that was a capital joke," said the count; and
seeing that the elder visitor was not listening, he turned to the young
ladies. "I can just imagine what a funny figure that policeman cut!"

And as he waved his arms to impersonate the policeman, his portly form
again shook with a deep ringing laugh, the laugh of one who always eats
well and, in particular, drinks well. "So do come and dine with us!" he
said.




CHAPTER XI

Silence ensued. The countess looked at her callers, smiling affably, but
not concealing the fact that she would not be distressed if they now
rose and took their leave. The visitor's daughter was already smoothing
down her dress with an inquiring look at her mother, when suddenly from
the next room were heard the footsteps of boys and girls running to the
door and the noise of a chair falling over, and a girl of thirteen,
hiding something in the folds of her short muslin frock, darted in and
stopped short in the middle of the room. It was evident that she had not
intended her flight to bring her so far. Behind her in the doorway
appeared a student with a crimson coat collar, an officer of the Guards,
a girl of fifteen, and a plump rosy-faced boy in a short jacket.

The count jumped up and, swaying from side to side, spread his arms wide
and threw them round the little girl who had run in.

"Ah, here she is!" he exclaimed laughing. "My pet, whose name day it is.
My dear pet!"

"Ma chere, there is a time for everything," said the countess with
feigned severity. "You spoil her, Ilya," she added, turning to her
husband.

"How do you do, my dear? I wish you many happy returns of your name
day," said the visitor. "What a charming child," she added, addressing
the mother.

This black-eyed, wide-mouthed girl, not pretty but full of life--with
childish bare shoulders which after her run heaved and shook her bodice,
with black curls tossed backward, thin bare arms, little legs in lace-
frilled drawers, and feet in low slippers--was just at that charming age
when a girl is no longer a child, though the child is not yet a young
woman. Escaping from her father she ran to hide her flushed face in the
lace of her mother's mantilla--not paying the least attention to her
severe remark--and began to laugh. She laughed, and in fragmentary
sentences tried to explain about a doll which she produced from the
folds of her frock.

"Do you see?... My doll... Mimi... You see..." was all Natasha managed
to utter (to her everything seemed funny). She leaned against her mother
and burst into such a loud, ringing fit of laughter that even the prim
visitor could not help joining in.

"Now then, go away and take your monstrosity with you," said the mother,
pushing away her daughter with pretended sternness, and turning to the
visitor she added: "She is my youngest girl."

Natasha, raising her face for a moment from her mother's mantilla,
glanced up at her through tears of laughter, and again hid her face.

The visitor, compelled to look on at this family scene, thought it
necessary to take some part in it.

"Tell me, my dear," said she to Natasha, "is Mimi a relation of yours? A
daughter, I suppose?"

Natasha did not like the visitor's tone of condescension to childish
things. She did not reply, but looked at her seriously.

Meanwhile the younger generation: Boris, the officer, Anna Mikhaylovna's
son; Nicholas, the undergraduate, the count's eldest son; Sonya, the
count's fifteen-year-old niece, and little Petya, his youngest boy, had
all settled down in the drawing room and were obviously trying to
restrain within the bounds of decorum the excitement and mirth that
shone in all their faces. Evidently in the back rooms, from which they
had dashed out so impetuously, the conversation had been more amusing
than the drawing-room talk of society scandals, the weather, and
Countess Apraksina. Now and then they glanced at one another, hardly
able to suppress their laughter.

The two young men, the student and the officer, friends from childhood,
were of the same age and both handsome fellows, though not alike. Boris
was tall and fair, and his calm and handsome face had regular, delicate
features. Nicholas was short with curly hair and an open expression.
Dark hairs were already showing on his upper lip, and his whole face
expressed impetuosity and enthusiasm. Nicholas blushed when he entered
the drawing room. He evidently tried to find something to say, but
failed. Boris on the contrary at once found his footing, and related
quietly and humorously how he had known that doll Mimi when she was
still quite a young lady, before her nose was broken; how she had aged
during the five years he had known her, and how her head had cracked
right across the skull. Having said this he glanced at Natasha. She
turned away from him and glanced at her younger brother, who was
screwing up his eyes and shaking with suppressed laughter, and unable to
control herself any longer, she jumped up and rushed from the room as
fast as her nimble little feet would carry her. Boris did not laugh.

"You were meaning to go out, weren't you, Mamma? Do you want the
carriage?" he asked his mother with a smile.

"Yes, yes, go and tell them to get it ready," she answered, returning
his smile.

Boris quietly left the room and went in search of Natasha. The plump boy
ran after them angrily, as if vexed that their program had been
disturbed.




CHAPTER XII

The only young people remaining in the drawing room, not counting the
young lady visitor and the countess' eldest daughter (who was four years
older than her sister and behaved already like a grown-up person), were
Nicholas and Sonya, the niece. Sonya was a slender little brunette with
a tender look in her eyes which were veiled by long lashes, thick black
plaits coiling twice round her head, and a tawny tint in her complexion
and especially in the color of her slender but graceful and muscular
arms and neck. By the grace of her movements, by the softness and
flexibility of her small limbs, and by a certain coyness and reserve of
manner, she reminded one of a pretty, half-grown kitten which promises
to become a beautiful little cat. She evidently considered it proper to
show an interest in the general conversation by smiling, but in spite of
herself her eyes under their thick long lashes watched her cousin who
was going to join the army, with such passionate girlish adoration that
her smile could not for a single instant impose upon anyone, and it was
clear that the kitten had settled down only to spring up with more
energy and again play with her cousin as soon as they too could, like
Natasha and Boris, escape from the drawing room.

"Ah yes, my dear," said the count, addressing the visitor and pointing
to Nicholas, "his friend Boris has become an officer, and so for
friendship's sake he is leaving the university and me, his old father,
and entering the military service, my dear. And there was a place and
everything waiting for him in the Archives Department! Isn't that
friendship?" remarked the count in an inquiring tone.

"But they say that war has been declared," replied the visitor.

"They've been saying so a long while," said the count, "and they'll say
so again and again, and that will be the end of it. My dear, there's
friendship for you," he repeated. "He's joining the hussars."

The visitor, not knowing what to say, shook her head.

"It's not at all from friendship," declared Nicholas, flaring up and
turning away as if from a shameful aspersion. "It is not from friendship
at all; I simply feel that the army is my vocation."

He glanced at his cousin and the young lady visitor; and they were both
regarding him with a smile of approbation.

"Schubert, the colonel of the Pavlograd Hussars, is dining with us
today. He has been here on leave and is taking Nicholas back with him.
It can't be helped!" said the count, shrugging his shoulders and
speaking playfully of a matter that evidently distressed him.

"I have already told you, Papa," said his son, "that if you don't wish
to let me go, I'll stay. But I know I am no use anywhere except in the
army; I am not a diplomat or a government clerk.--I don't know how to
hide what I feel." As he spoke he kept glancing with the flirtatiousness
of a handsome youth at Sonya and the young lady visitor.

The little kitten, feasting her eyes on him, seemed ready at any moment
to start her gambols again and display her kittenish nature.

"All right, all right!" said the old count. "He always flares up! This
Buonaparte has turned all their heads; they all think of how he rose
from an ensign and became Emperor. Well, well, God grant it," he added,
not noticing his visitor's sarcastic smile.

The elders began talking about Bonaparte. Julie Karagina turned to young
Rostov.

"What a pity you weren't at the Arkharovs' on Thursday. It was so dull
without you," said she, giving him a tender smile.

The young man, flattered, sat down nearer to her with a coquettish
smile, and engaged the smiling Julie in a confidential conversation
without at all noticing that his involuntary smile had stabbed the heart
of Sonya, who blushed and smiled unnaturally. In the midst of his talk
he glanced round at her. She gave him a passionately angry glance, and
hardly able to restrain her tears and maintain the artificial smile on
her lips, she got up and left the room. All Nicholas' animation
vanished. He waited for the first pause in the conversation, and then
with a distressed face left the room to find Sonya.

"How plainly all these young people wear their hearts on their sleeves!"
said Anna Mikhaylovna, pointing to Nicholas as he went out. "Cousinage--
dangereux voisinage;" * she added.


* Cousinhood is a dangerous neighborhood.

"Yes," said the countess when the brightness these young people had
brought into the room had vanished; and as if answering a question no
one had put but which was always in her mind, "and how much suffering,
how much anxiety one has had to go through that we might rejoice in them
now! And yet really the anxiety is greater now than the joy. One is
always, always anxious! Especially just at this age, so dangerous both
for girls and boys."

"It all depends on the bringing up," remarked the visitor.

"Yes, you're quite right," continued the countess. "Till now I have
always, thank God, been my children's friend and had their full
confidence," said she, repeating the mistake of so many parents who
imagine that their children have no secrets from them. "I know I shall
always be my daughters' first confidante, and that if Nicholas, with his
impulsive nature, does get into mischief (a boy can't help it), he will
all the same never be like those Petersburg young men."

"Yes, they are splendid, splendid youngsters," chimed in the count, who
always solved questions that seemed to him perplexing by deciding that
everything was splendid. "Just fancy: wants to be an hussar. What's one
to do, my dear?"

"What a charming creature your younger girl is," said the visitor; "a
little volcano!"

"Yes, a regular volcano," said the count. "Takes after me! And what a
voice she has; though she's my daughter, I tell the truth when I say
she'll be a singer, a second Salomoni! We have engaged an Italian to
give her lessons."

"Isn't she too young? I have heard that it harms the voice to train it
at that age."

"Oh no, not at all too young!" replied the count. "Why, our mothers used
to be married at twelve or thirteen."

"And she's in love with Boris already. Just fancy!" said the countess
with a gentle smile, looking at Boris and went on, evidently concerned
with a thought that always occupied her: "Now you see if I were to be
severe with her and to forbid it... goodness knows what they might be up
to on the sly" (she meant that they would be kissing), "but as it is, I
know every word she utters. She will come running to me of her own
accord in the evening and tell me everything. Perhaps I spoil her, but
really that seems the best plan. With her elder sister I was stricter."

"Yes, I was brought up quite differently," remarked the handsome elder
daughter, Countess Vera, with a smile.

But the smile did not enhance Vera's beauty as smiles generally do; on
the contrary it gave her an unnatural, and therefore unpleasant,
expression. Vera was good-looking, not at all stupid, quick at learning,
was well-brought up, and had a pleasant voice; what she said was true
and appropriate, yet, strange to say, everyone--the visitors and
countess alike--turned to look at her as if wondering why she had said
it, and they all felt awkward.

"People are always too clever with their eldest children and try to make
something exceptional of them," said the visitor.

"What's the good of denying it, my dear? Our dear countess was too
clever with Vera," said the count. "Well, what of that? She's turned out
splendidly all the same," he added, winking at Vera.

The guests got up and took their leave, promising to return to dinner.

"What manners! I thought they would never go," said the countess, when
she had seen her guests out.




CHAPTER XIII

When Natasha ran out of the drawing room she only went as far as the
conservatory. There she paused and stood listening to the conversation
in the drawing room, waiting for Boris to come out. She was already
growing impatient, and stamped her foot, ready to cry at his not coming
at once, when she heard the young man's discreet steps approaching
neither quickly nor slowly. At this Natasha dashed swiftly among the
flower tubs and hid there.

Boris paused in the middle of the room, looked round, brushed a little
dust from the sleeve of his uniform, and going up to a mirror examined
his handsome face. Natasha, very still, peered out from her ambush,
waiting to see what he would do. He stood a little while before the
glass, smiled, and walked toward the other door. Natasha was about to
call him but changed her mind. "Let him look for me," thought she.
Hardly had Boris gone than Sonya, flushed, in tears, and muttering
angrily, came in at the other door. Natasha checked her first impulse to
run out to her, and remained in her hiding place, watching--as under an
invisible cap--to see what went on in the world. She was experiencing a
new and peculiar pleasure. Sonya, muttering to herself, kept looking
round toward the drawing-room door. It opened and Nicholas came in.

"Sonya, what is the matter with you? How can you?" said he, running up
to her.

"It's nothing, nothing; leave me alone!" sobbed Sonya.

"Ah, I know what it is."

"Well, if you do, so much the better, and you can go back to her!"

"So-o-onya! Look here! How can you torture me and yourself like that,
for a mere fancy?" said Nicholas taking her hand.

Sonya did not pull it away, and left off crying. Natasha, not stirring
and scarcely breathing, watched from her ambush with sparkling eyes.
"What will happen now?" thought she.

"Sonya! What is anyone in the world to me? You alone are everything!"
said Nicholas. "And I will prove it to you."

"I don't like you to talk like that."

"Well, then, I won't; only forgive me, Sonya!" He drew her to him and
kissed her.

"Oh, how nice," thought Natasha; and when Sonya and Nicholas had gone
out of the conservatory she followed and called Boris to her.

"Boris, come here," said she with a sly and significant look. "I have
something to tell you. Here, here!" and she led him into the
conservatory to the place among the tubs where she had been hiding.

Boris followed her, smiling.

"What is the something?" asked he.

She grew confused, glanced round, and, seeing the doll she had thrown
down on one of the tubs, picked it up.

"Kiss the doll," said she.

Boris looked attentively and kindly at her eager face, but did not
reply.

"Don't you want to? Well, then, come here," said she, and went further
in among the plants and threw down the doll. "Closer, closer!" she
whispered.

She caught the young officer by his cuffs, and a look of solemnity and
fear appeared on her flushed face.

"And me? Would you like to kiss me?" she whispered almost inaudibly,
glancing up at him from under her brows, smiling, and almost crying from
excitement.

Boris blushed.

"How funny you are!" he said, bending down to her and blushing still
more, but he waited and did nothing.

Suddenly she jumped up onto a tub to be higher than he, embraced him so
that both her slender bare arms clasped him above his neck, and, tossing
back her hair, kissed him full on the lips.

Then she slipped down among the flowerpots on the other side of the tubs
and stood, hanging her head.

"Natasha," he said, "you know that I love you, but..."

"You are in love with me?" Natasha broke in.

"Yes, I am, but please don't let us do like that.... In another four
years... then I will ask for your hand."

Natasha considered.

"Thirteen, fourteen, fifteen, sixteen," she counted on her slender
little fingers. "All right! Then it's settled?"

A smile of joy and satisfaction lit up her eager face.

"Settled!" replied Boris.

"Forever?" said the little girl. "Till death itself?"

She took his arm and with a happy face went with him into the adjoining
sitting room.




CHAPTER XIV

After receiving her visitors, the countess was so tired that she gave
orders to admit no more, but the porter was told to be sure to invite to
dinner all who came "to congratulate." The countess wished to have a
tête-à-tête talk with the friend of her childhood, Princess Anna
Mikhaylovna, whom she had not seen properly since she returned from
Petersburg. Anna Mikhaylovna, with her tear-worn but pleasant face, drew
her chair nearer to that of the countess.

"With you I will be quite frank," said Anna Mikhaylovna. "There are not
many left of us old friends! That's why I so value your friendship."

Anna Mikhaylovna looked at Vera and paused. The countess pressed her
friend's hand.

"Vera," she said to her eldest daughter who was evidently not a
favorite, "how is it you have so little tact? Don't you see you are not
wanted here? Go to the other girls, or..."

The handsome Vera smiled contemptuously but did not seem at all hurt.

"If you had told me sooner, Mamma, I would have gone," she replied as
she rose to go to her own room.

But as she passed the sitting room she noticed two couples sitting, one
pair at each window. She stopped and smiled scornfully. Sonya was
sitting close to Nicholas who was copying out some verses for her, the
first he had ever written. Boris and Natasha were at the other window
and ceased talking when Vera entered. Sonya and Natasha looked at Vera
with guilty, happy faces.

It was pleasant and touching to see these little girls in love; but
apparently the sight of them roused no pleasant feeling in Vera.

"How often have I asked you not to take my things?" she said. "You have
a room of your own," and she took the inkstand from Nicholas.

"In a minute, in a minute," he said, dipping his pen.

"You always manage to do things at the wrong time," continued Vera. "You
came rushing into the drawing room so that everyone felt ashamed of
you."

Though what she said was quite just, perhaps for that very reason no one
replied, and the four simply looked at one another. She lingered in the
room with the inkstand in her hand.

"And at your age what secrets can there be between Natasha and Boris, or
between you two? It's all nonsense!"

"Now, Vera, what does it matter to you?" said Natasha in defense,
speaking very gently.

She seemed that day to be more than ever kind and affectionate to
everyone.

"Very silly," said Vera. "I am ashamed of you. Secrets indeed!"

"All have secrets of their own," answered Natasha, getting warmer. "We
don't interfere with you and Berg."

"I should think not," said Vera, "because there can never be anything
wrong in my behavior. But I'll just tell Mamma how you are behaving with
Boris."

"Natalya Ilynichna behaves very well to me," remarked Boris. "I have
nothing to complain of."

"Don't, Boris! You are such a diplomat that it is really tiresome," said
Natasha in a mortified voice that trembled slightly. (She used the word
"diplomat," which was just then much in vogue among the children, in the
special sense they attached to it.) "Why does she bother me?" And she
added, turning to Vera, "You'll never understand it, because you've
never loved anyone. You have no heart! You are a Madame de Genlis and
nothing more" (this nickname, bestowed on Vera by Nicholas, was
considered very stinging), "and your greatest pleasure is to be
unpleasant to people! Go and flirt with Berg as much as you please," she
finished quickly.

"I shall at any rate not run after a young man before visitors..."

"Well, now you've done what you wanted," put in Nicholas--"said
unpleasant things to everyone and upset them. Let's go to the nursery."

All four, like a flock of scared birds, got up and left the room.

"The unpleasant things were said to me," remarked Vera, "I said none to
anyone."

"Madame de Genlis! Madame de Genlis!" shouted laughing voices through
the door.

The handsome Vera, who produced such an irritating and unpleasant effect
on everyone, smiled and, evidently unmoved by what had been said to her,
went to the looking glass and arranged her hair and scarf. Looking at
her own handsome face she seemed to become still colder and calmer.

In the drawing room the conversation was still going on.

"Ah, my dear," said the countess, "my life is not all roses either.
Don't I know that at the rate we are living our means won't last long?
It's all the Club and his easygoing nature. Even in the country do we
get any rest? Theatricals, hunting, and heaven knows what besides! But
don't let's talk about me; tell me how you managed everything. I often
wonder at you, Annette--how at your age you can rush off alone in a
carriage to Moscow, to Petersburg, to those ministers and great people,
and know how to deal with them all! It's quite astonishing. How did you
get things settled? I couldn't possibly do it."

"Ah, my love," answered Anna Mikhaylovna, "God grant you never know what
it is to be left a widow without means and with a son you love to
distraction! One learns many things then," she added with a certain
pride. "That lawsuit taught me much. When I want to see one of those big
people I write a note: 'Princess So-and-So desires an interview with So
and-So,' and then I take a cab and go myself two, three, or four times--
till I get what I want. I don't mind what they think of me."

"Well, and to whom did you apply about Bory?" asked the countess. "You
see yours is already an officer in the Guards, while my Nicholas is
going as a cadet. There's no one to interest himself for him. To whom
did you apply?"

"To Prince Vasili. He was so kind. He at once agreed to everything, and
put the matter before the Emperor," said Princess Anna Mikhaylovna
enthusiastically, quite forgetting all the humiliation she had endured
to gain her end.

"Has Prince Vasili aged much?" asked the countess. "I have not seen him
since we acted together at the Rumyantsovs' theatricals. I expect he has
forgotten me. He paid me attentions in those days," said the countess,
with a smile.

"He is just the same as ever," replied Anna Mikhaylovna, "overflowing
with amiability. His position has not turned his head at all. He said to
me, 'I am sorry I can do so little for you, dear Princess. I am at your
command.' Yes, he is a fine fellow and a very kind relation. But,
Nataly, you know my love for my son: I would do anything for his
happiness! And my affairs are in such a bad way that my position is now
a terrible one," continued Anna Mikhaylovna, sadly, dropping her voice.
"My wretched lawsuit takes all I have and makes no progress. Would you
believe it, I have literally not a penny and don't know how to equip
Boris." She took out her handkerchief and began to cry. "I need five
hundred rubles, and have only one twenty-five-ruble note. I am in such a
state.... My only hope now is in Count Cyril Vladimirovich Bezukhov. If
he will not assist his godson--you know he is Bory's godfather--and
allow him something for his maintenance, all my trouble will have been
thrown away.... I shall not be able to equip him."

The countess' eyes filled with tears and she pondered in silence.

"I often think, though, perhaps it's a sin," said the princess, "that
here lives Count Cyril Vladimirovich Bezukhov so rich, all alone... that
tremendous fortune... and what is his life worth? It's a burden to him,
and Bory's life is only just beginning...."

"Surely he will leave something to Boris," said the countess.

"Heaven only knows, my dear! These rich grandees are so selfish. Still,
I will take Boris and go to see him at once, and I shall speak to him
straight out. Let people think what they will of me, it's really all the
same to me when my son's fate is at stake." The princess rose. "It's now
two o'clock and you dine at four. There will just be time."

And like a practical Petersburg lady who knows how to make the most of
time, Anna Mikhaylovna sent someone to call her son, and went into the
anteroom with him.

"Good-bye, my dear," said she to the countess who saw her to the door,
and added in a whisper so that her son should not hear, "Wish me good
luck."

"Are you going to Count Cyril Vladimirovich, my dear?" said the count
coming out from the dining hall into the anteroom, and he added: "If he
is better, ask Pierre to dine with us. He has been to the house, you
know, and danced with the children. Be sure to invite him, my dear. We
will see how Taras distinguishes himself today. He says Count Orlov
never gave such a dinner as ours will be!"




CHAPTER XV

"My dear Boris," said Princess Anna Mikhaylovna to her son as Countess
Rostova's carriage in which they were seated drove over the straw
covered street and turned into the wide courtyard of Count Cyril
Vladimirovich Bezukhov's house. "My dear Boris," said the mother,
drawing her hand from beneath her old mantle and laying it timidly and
tenderly on her son's arm, "be affectionate and attentive to him. Count
Cyril Vladimirovich is your godfather after all, your future depends on
him. Remember that, my dear, and be nice to him, as you so well know how
to be."

"If only I knew that anything besides humiliation would come of it..."
answered her son coldly. "But I have promised and will do it for your
sake."

Although the hall porter saw someone's carriage standing at the
entrance, after scrutinizing the mother and son (who without asking to
be announced had passed straight through the glass porch between the
rows of statues in niches) and looking significantly at the lady's old
cloak, he asked whether they wanted the count or the princesses, and,
hearing that they wished to see the count, said his excellency was worse
today, and that his excellency was not receiving anyone.

"We may as well go back," said the son in French.

"My dear!" exclaimed his mother imploringly, again laying her hand on
his arm as if that touch might soothe or rouse him.

Boris said no more, but looked inquiringly at his mother without taking
off his cloak.

"My friend," said Anna Mikhaylovna in gentle tones, addressing the hall
porter, "I know Count Cyril Vladimirovich is very ill... that's why I
have come... I am a relation. I shall not disturb him, my friend... I
only need see Prince Vasili Sergeevich: he is staying here, is he not?
Please announce me."

The hall porter sullenly pulled a bell that rang upstairs, and turned
away.

"Princess Drubetskaya to see Prince Vasili Sergeevich," he called to a
footman dressed in knee breeches, shoes, and a swallow-tail coat, who
ran downstairs and looked over from the halfway landing.

The mother smoothed the folds of her dyed silk dress before a large
Venetian mirror in the wall, and in her trodden-down shoes briskly
ascended the carpeted stairs.

"My dear," she said to her son, once more stimulating him by a touch,
"you promised me!"

The son, lowering his eyes, followed her quietly.

They entered the large hall, from which one of the doors led to the
apartments assigned to Prince Vasili.

Just as the mother and son, having reached the middle of the hall, were
about to ask their way of an elderly footman who had sprung up as they
entered, the bronze handle of one of the doors turned and Prince Vasili
came out--wearing a velvet coat with a single star on his breast, as was
his custom when at home--taking leave of a good-looking, dark-haired
man. This was the celebrated Petersburg doctor, Lorrain.

"Then it is certain?" said the prince.

"Prince, humanum est errare, * but..." replied the doctor, swallowing
his r's, and pronouncing the Latin words with a French accent.


* To err is human.

"Very well, very well..."

Seeing Anna Mikhaylovna and her son, Prince Vasili dismissed the doctor
with a bow and approached them silently and with a look of inquiry. The
son noticed that an expression of profound sorrow suddenly clouded his
mother's face, and he smiled slightly.

"Ah, Prince! In what sad circumstances we meet again! And how is our
dear invalid?" said she, as though unaware of the cold offensive look
fixed on her.

Prince Vasili stared at her and at Boris questioningly and perplexed.
Boris bowed politely. Prince Vasili without acknowledging the bow turned
to Anna Mikhaylovna, answering her query by a movement of the head and
lips indicating very little hope for the patient.

"Is it possible?" exclaimed Anna Mikhaylovna. "Oh, how awful! It is
terrible to think.... This is my son," she added, indicating Boris. "He
wanted to thank you himself."

Boris bowed again politely.

"Believe me, Prince, a mother's heart will never forget what you have
done for us."

"I am glad I was able to do you a service, my dear Anna Mikhaylovna,"
said Prince Vasili, arranging his lace frill, and in tone and manner,
here in Moscow to Anna Mikhaylovna whom he had placed under an
obligation, assuming an air of much greater importance than he had done
in Petersburg at Anna Scherer's reception.

"Try to serve well and show yourself worthy," added he, addressing Boris
with severity. "I am glad.... Are you here on leave?" he went on in his
usual tone of indifference.

"I am awaiting orders to join my new regiment, your excellency," replied
Boris, betraying neither annoyance at the prince's brusque manner nor a
desire to enter into conversation, but speaking so quietly and
respectfully that the prince gave him a searching glance.

"Are you living with your mother?"

"I am living at Countess Rostova's," replied Boris, again adding, "your
excellency."

"That is, with Ilya Rostov who married Nataly Shinshina," said Anna
Mikhaylovna.

"I know, I know," answered Prince Vasili in his monotonous voice. "I
never could understand how Nataly made up her mind to marry that
unlicked bear! A perfectly absurd and stupid fellow, and a gambler too,
I am told."

"But a very kind man, Prince," said Anna Mikhaylovna with a pathetic
smile, as though she too knew that Count Rostov deserved this censure,
but asked him not to be too hard on the poor old man. "What do the
doctors say?" asked the princess after a pause, her worn face again
expressing deep sorrow.

"They give little hope," replied the prince.

"And I should so like to thank Uncle once for all his kindness to me and
Boris. He is his godson," she added, her tone suggesting that this fact
ought to give Prince Vasili much satisfaction.

Prince Vasili became thoughtful and frowned. Anna Mikhaylovna saw that
he was afraid of finding in her a rival for Count Bezukhov's fortune,
and hastened to reassure him.

"If it were not for my sincere affection and devotion to Uncle," said
she, uttering the word with peculiar assurance and unconcern, "I know
his character: noble, upright... but you see he has no one with him
except the young princesses.... They are still young...." She bent her
head and continued in a whisper: "Has he performed his final duty,
Prince? How priceless are those last moments! It can make things no
worse, and it is absolutely necessary to prepare him if he is so ill. We
women, Prince," and she smiled tenderly, "always know how to say these
things. I absolutely must see him, however painful it may be for me. I
am used to suffering."

Evidently the prince understood her, and also understood, as he had done
at Anna Pavlovna's, that it would be difficult to get rid of Anna
Mikhaylovna.

"Would not such a meeting be too trying for him, dear Anna Mikhaylovna?"
said he. "Let us wait until evening. The doctors are expecting a
crisis."

"But one cannot delay, Prince, at such a moment! Consider that the
welfare of his soul is at stake. Ah, it is awful: the duties of a
Christian..."

A door of one of the inner rooms opened and one of the princesses, the
count's niece, entered with a cold, stern face. The length of her body
was strikingly out of proportion to her short legs. Prince Vasili turned
to her.

"Well, how is he?"

"Still the same; but what can you expect, this noise..." said the
princess, looking at Anna Mikhaylovna as at a stranger.

"Ah, my dear, I hardly knew you," said Anna Mikhaylovna with a happy
smile, ambling lightly up to the count's niece. "I have come, and am at
your service to help you nurse my uncle. I imagine what you have gone
through," and she sympathetically turned up her eyes.

The princess gave no reply and did not even smile, but left the room as
Anna Mikhaylovna took off her gloves and, occupying the position she had
conquered, settled down in an armchair, inviting Prince Vasili to take a
seat beside her.

"Boris," she said to her son with a smile, "I shall go in to see the
count, my uncle; but you, my dear, had better go to Pierre meanwhile and
don't forget to give him the Rostovs' invitation. They ask him to
dinner. I suppose he won't go?" she continued, turning to the prince.

"On the contrary," replied the prince, who had plainly become depressed,
"I shall be only too glad if you relieve me of that young man.... Here
he is, and the count has not once asked for him."

He shrugged his shoulders. A footman conducted Boris down one flight of
stairs and up another, to Pierre's rooms.




CHAPTER XVI

Pierre, after all, had not managed to choose a career for himself in
Petersburg, and had been expelled from there for riotous conduct and
sent to Moscow. The story told about him at Count Rostov's was true.
Pierre had taken part in tying a policeman to a bear. He had now been
for some days in Moscow and was staying as usual at his father's house.
Though he expected that the story of his escapade would be already known
in Moscow and that the ladies about his father--who were never favorably
disposed toward him--would have used it to turn the count against him,
he nevertheless on the day of his arrival went to his father's part of
the house. Entering the drawing room, where the princesses spent most of
their time, he greeted the ladies, two of whom were sitting at
embroidery frames while a third read aloud. It was the eldest who was
reading--the one who had met Anna Mikhaylovna. The two younger ones were
embroidering: both were rosy and pretty and they differed only in that
one had a little mole on her lip which made her much prettier. Pierre
was received as if he were a corpse or a leper. The eldest princess
paused in her reading and silently stared at him with frightened eyes;
the second assumed precisely the same expression; while the youngest,
the one with the mole, who was of a cheerful and lively disposition,
bent over her frame to hide a smile probably evoked by the amusing scene
she foresaw. She drew her wool down through the canvas and, scarcely
able to refrain from laughing, stooped as if trying to make out the
pattern.

"How do you do, cousin?" said Pierre. "You don't recognize me?"

"I recognize you only too well, too well."

"How is the count? Can I see him?" asked Pierre, awkwardly as usual, but
unabashed.

"The count is suffering physically and mentally, and apparently you have
done your best to increase his mental sufferings."

"Can I see the count?" Pierre again asked.

"Hm.... If you wish to kill him, to kill him outright, you can see
him... Olga, go and see whether Uncle's beef tea is ready--it is almost
time," she added, giving Pierre to understand that they were busy, and
busy making his father comfortable, while evidently he, Pierre, was only
busy causing him annoyance.

Olga went out. Pierre stood looking at the sisters; then he bowed and
said: "Then I will go to my rooms. You will let me know when I can see
him."

And he left the room, followed by the low but ringing laughter of the
sister with the mole.

Next day Prince Vasili had arrived and settled in the count's house. He
sent for Pierre and said to him: "My dear fellow, if you are going to
behave here as you did in Petersburg, you will end very badly; that is
all I have to say to you. The count is very, very ill, and you must not
see him at all."

Since then Pierre had not been disturbed and had spent the whole time in
his rooms upstairs.

When Boris appeared at his door Pierre was pacing up and down his room,
stopping occasionally at a corner to make menacing gestures at the wall,
as if running a sword through an invisible foe, and glaring savagely
over his spectacles, and then again resuming his walk, muttering
indistinct words, shrugging his shoulders and gesticulating.

"England is done for," said he, scowling and pointing his finger at
someone unseen. "Mr. Pitt, as a traitor to the nation and to the rights
of man, is sentenced to..." But before Pierre--who at that moment
imagined himself to be Napoleon in person and to have just effected the
dangerous crossing of the Straits of Dover and captured London--could
pronounce Pitt's sentence, he saw a well-built and handsome young
officer entering his room. Pierre paused. He had left Moscow when Boris
was a boy of fourteen, and had quite forgotten him, but in his usual
impulsive and hearty way he took Boris by the hand with a friendly
smile.

"Do you remember me?" asked Boris quietly with a pleasant smile. "I have
come with my mother to see the count, but it seems he is not well."

"Yes, it seems he is ill. People are always disturbing him," answered
Pierre, trying to remember who this young man was.

Boris felt that Pierre did not recognize him but did not consider it
necessary to introduce himself, and without experiencing the least
embarrassment looked Pierre straight in the face.

"Count Rostov asks you to come to dinner today," said he, after a
considerable pause which made Pierre feel uncomfortable.

"Ah, Count Rostov!" exclaimed Pierre joyfully. "Then you are his son,
Ilya? Only fancy, I didn't know you at first. Do you remember how we
went to the Sparrow Hills with Madame Jacquot?... It's such an age..."

"You are mistaken," said Boris deliberately, with a bold and slightly
sarcastic smile. "I am Boris, son of Princess Anna Mikhaylovna
Drubetskaya. Rostov, the father, is Ilya, and his son is Nicholas. I
never knew any Madame Jacquot."

Pierre shook his head and arms as if attacked by mosquitoes or bees.

"Oh dear, what am I thinking about? I've mixed everything up. One has so
many relatives in Moscow! So you are Boris? Of course. Well, now we know
where we are. And what do you think of the Boulogne expedition? The
English will come off badly, you know, if Napoleon gets across the
Channel. I think the expedition is quite feasible. If only Villeneuve
doesn't make a mess of things!"

Boris knew nothing about the Boulogne expedition; he did not read the
papers and it was the first time he had heard Villeneuve's name.

"We here in Moscow are more occupied with dinner parties and scandal
than with politics," said he in his quiet ironical tone. "I know nothing
about it and have not thought about it. Moscow is chiefly busy with
gossip," he continued. "Just now they are talking about you and your
father."

Pierre smiled in his good-natured way as if afraid for his companion's
sake that the latter might say something he would afterwards regret. But
Boris spoke distinctly, clearly, and dryly, looking straight into
Pierre's eyes.

"Moscow has nothing else to do but gossip," Boris went on. "Everybody is
wondering to whom the count will leave his fortune, though he may
perhaps outlive us all, as I sincerely hope he will..."

"Yes, it is all very horrid," interrupted Pierre, "very horrid."

Pierre was still afraid that this officer might inadvertently say
something disconcerting to himself.

"And it must seem to you," said Boris flushing slightly, but not
changing his tone or attitude, "it must seem to you that everyone is
trying to get something out of the rich man?"

"So it does," thought Pierre.

"But I just wish to say, to avoid misunderstandings, that you are quite
mistaken if you reckon me or my mother among such people. We are very
poor, but for my own part at any rate, for the very reason that your
father is rich, I don't regard myself as a relation of his, and neither
I nor my mother would ever ask or take anything from him."

For a long time Pierre could not understand, but when he did, he jumped
up from the sofa, seized Boris under the elbow in his quick, clumsy way,
and, blushing far more than Boris, began to speak with a feeling of
mingled shame and vexation.

"Well, this is strange! Do you suppose I... who could think?... I know
very well..."

But Boris again interrupted him.

"I am glad I have spoken out fully. Perhaps you did not like it? You
must excuse me," said he, putting Pierre at ease instead of being put at
ease by him, "but I hope I have not offended you. I always make it a
rule to speak out... Well, what answer am I to take? Will you come to
dinner at the Rostovs'?"

And Boris, having apparently relieved himself of an onerous duty and
extricated himself from an awkward situation and placed another in it,
became quite pleasant again.

"No, but I say," said Pierre, calming down, "you are a wonderful fellow!
What you have just said is good, very good. Of course you don't know me.
We have not met for such a long time... not since we were children. You
might think that I... I understand, quite understand. I could not have
done it myself, I should not have had the courage, but it's splendid. I
am very glad to have made your acquaintance. It's queer," he added after
a pause, "that you should have suspected me!" He began to laugh. "Well,
what of it! I hope we'll get better acquainted," and he pressed Boris'
hand. "Do you know, I have not once been in to see the count. He has not
sent for me.... I am sorry for him as a man, but what can one do?"

"And so you think Napoleon will manage to get an army across?" asked
Boris with a smile.

Pierre saw that Boris wished to change the subject, and being of the
same mind he began explaining the advantages and disadvantages of the
Boulogne expedition.

A footman came in to summon Boris--the princess was going. Pierre, in
order to make Boris' better acquaintance, promised to come to dinner,
and warmly pressing his hand looked affectionately over his spectacles
into Boris' eyes. After he had gone Pierre continued pacing up and down
the room for a long time, no longer piercing an imaginary foe with his
imaginary sword, but smiling at the remembrance of that pleasant,
intelligent, and resolute young man.

As often happens in early youth, especially to one who leads a lonely
life, he felt an unaccountable tenderness for this young man and made up
his mind that they would be friends.

Prince Vasili saw the princess off. She held a handkerchief to her eyes
and her face was tearful.

"It is dreadful, dreadful!" she was saying, "but cost me what it may I
shall do my duty. I will come and spend the night. He must not be left
like this. Every moment is precious. I can't think why his nieces put it
off. Perhaps God will help me to find a way to prepare him!... Adieu,
Prince! May God support you..."

"Adieu, ma bonne," answered Prince Vasili turning away from her.

"Oh, he is in a dreadful state," said the mother to her son when they
were in the carriage. "He hardly recognizes anybody."

"I don't understand, Mamma--what is his attitude to Pierre?" asked the
son.

"The will will show that, my dear; our fate also depends on it."

"But why do you expect that he will leave us anything?"

"Ah, my dear! He is so rich, and we are so poor!"

"Well, that is hardly a sufficient reason, Mamma..."

"Oh, Heaven! How ill he is!" exclaimed the mother.




CHAPTER XVII

After Anna Mikhaylovna had driven off with her son to visit Count Cyril
Vladimirovich Bezukhov, Countess Rostova sat for a long time all alone
applying her handkerchief to her eyes. At last she rang.

"What is the matter with you, my dear?" she said crossly to the maid who
kept her waiting some minutes. "Don't you wish to serve me? Then I'll
find you another place."

The countess was upset by her friend's sorrow and humiliating poverty,
and was therefore out of sorts, a state of mind which with her always
found expression in calling her maid "my dear" and speaking to her with
exaggerated politeness.

"I am very sorry, ma'am," answered the maid.

"Ask the count to come to me."

The count came waddling in to see his wife with a rather guilty look as
usual.

"Well, little countess? What a saute of game au madere we are to have,
my dear! I tasted it. The thousand rubles I paid for Taras were not ill-
spent. He is worth it!"

He sat down by his wife, his elbows on his knees and his hands ruffling
his gray hair.

"What are your commands, little countess?"

"You see, my dear... What's that mess?" she said, pointing to his
waistcoat. "It's the saute, most likely," she added with a smile. "Well,
you see, Count, I want some money."

Her face became sad.

"Oh, little countess!"... and the count began bustling to get out his
pocketbook.

"I want a great deal, Count! I want five hundred rubles," and taking out
her cambric handkerchief she began wiping her husband's waistcoat.

"Yes, immediately, immediately! Hey, who's there?" he called out in a
tone only used by persons who are certain that those they call will rush
to obey the summons. "Send Dmitri to me!"

Dmitri, a man of good family who had been brought up in the count's
house and now managed all his affairs, stepped softly into the room.

"This is what I want, my dear fellow," said the count to the deferential
young man who had entered. "Bring me..." he reflected a moment, "yes,
bring me seven hundred rubles, yes! But mind, don't bring me such
tattered and dirty notes as last time, but nice clean ones for the
countess."

"Yes, Dmitri, clean ones, please," said the countess, sighing deeply.

"When would you like them, your excellency?" asked Dmitri. "Allow me to
inform you... But, don't be uneasy," he added, noticing that the count
was beginning to breathe heavily and quickly which was always a sign of
approaching anger. "I was forgetting... Do you wish it brought at once?"

"Yes, yes; just so! Bring it. Give it to the countess."

"What a treasure that Dmitri is," added the count with a smile when the
young man had departed. "There is never any 'impossible' with him.
That's a thing I hate! Everything is possible."

"Ah, money, Count, money! How much sorrow it causes in the world," said
the countess. "But I am in great need of this sum."

"You, my little countess, are a notorious spendthrift," said the count,
and having kissed his wife's hand he went back to his study.

When Anna Mikhaylovna returned from Count Bezukhov's the money, all in
clean notes, was lying ready under a handkerchief on the countess'
little table, and Anna Mikhaylovna noticed that something was agitating
her.

"Well, my dear?" asked the countess.

"Oh, what a terrible state he is in! One would not know him, he is so
ill! I was only there a few moments and hardly said a word..."

"Annette, for heaven's sake don't refuse me," the countess began, with a
blush that looked very strange on her thin, dignified, elderly face, and
she took the money from under the handkerchief.

Anna Mikhaylovna instantly guessed her intention and stooped to be ready
to embrace the countess at the appropriate moment.

"This is for Boris from me, for his outfit."

Anna Mikhaylovna was already embracing her and weeping. The countess
wept too. They wept because they were friends, and because they were
kindhearted, and because they--friends from childhood--had to think
about such a base thing as money, and because their youth was over....
But those tears were pleasant to them both.




CHAPTER XVIII

Countess Rostova, with her daughters and a large number of guests, was
already seated in the drawing room. The count took the gentlemen into
his study and showed them his choice collection of Turkish pipes. From
time to time he went out to ask: "Hasn't she come yet?" They were
expecting Marya Dmitrievna Akhrosimova, known in society as le terrible
dragon, a lady distinguished not for wealth or rank, but for common
sense and frank plainness of speech. Marya Dmitrievna was known to the
Imperial family as well as to all Moscow and Petersburg, and both cities
wondered at her, laughed privately at her rudenesses, and told good
stories about her, while none the less all without exception respected
and feared her.

In the count's room, which was full of tobacco smoke, they talked of war
that had been announced in a manifesto, and about the recruiting. None
of them had yet seen the manifesto, but they all knew it had appeared.
The count sat on the sofa between two guests who were smoking and
talking. He neither smoked nor talked, but bending his head first to one
side and then to the other watched the smokers with evident pleasure and
listened to the conversation of his two neighbors, whom he egged on
against each other.

One of them was a sallow, clean-shaven civilian with a thin and wrinkled
face, already growing old, though he was dressed like a most fashionable
young man. He sat with his legs up on the sofa as if quite at home and,
having stuck an amber mouthpiece far into his mouth, was inhaling the
smoke spasmodically and screwing up his eyes. This was an old bachelor,
Shinshin, a cousin of the countess', a man with "a sharp tongue" as they
said in Moscow society. He seemed to be condescending to his companion.
The latter, a fresh, rosy officer of the Guards, irreproachably washed,
brushed, and buttoned, held his pipe in the middle of his mouth and with
red lips gently inhaled the smoke, letting it escape from his handsome
mouth in rings. This was Lieutenant Berg, an officer in the Semenov
regiment with whom Boris was to travel to join the army, and about whom
Natasha had teased her elder sister Vera, speaking of Berg as her
"intended." The count sat between them and listened attentively. His
favorite occupation when not playing boston, a card game he was very
fond of, was that of listener, especially when he succeeded in setting
two loquacious talkers at one another.

"Well, then, old chap, mon tres honorable Alphonse Karlovich," said
Shinshin, laughing ironically and mixing the most ordinary Russian
expressions with the choicest French phrases--which was a peculiarity of
his speech. "Vous comptez vous faire des rentes sur l'etat; * you want
to make something out of your company?"


* You expect to make an income out of the government.

"No, Peter Nikolaevich; I only want to show that in the cavalry the
advantages are far less than in the infantry. Just consider my own
position now, Peter Nikolaevich..."

Berg always spoke quietly, politely, and with great precision. His
conversation always related entirely to himself; he would remain calm
and silent when the talk related to any topic that had no direct bearing
on himself. He could remain silent for hours without being at all put
out of countenance himself or making others uncomfortable, but as soon
as the conversation concerned himself he would begin to talk
circumstantially and with evident satisfaction.

"Consider my position, Peter Nikolaevich. Were I in the cavalry I should
get not more than two hundred rubles every four months, even with the
rank of lieutenant; but as it is I receive two hundred and thirty," said
he, looking at Shinshin and the count with a joyful, pleasant smile, as
if it were obvious to him that his success must always be the chief
desire of everyone else.

"Besides that, Peter Nikolaevich, by exchanging into the Guards I shall
be in a more prominent position," continued Berg, "and vacancies occur
much more frequently in the Foot Guards. Then just think what can be
done with two hundred and thirty rubles! I even manage to put a little
aside and to send something to my father," he went on, emitting a smoke
ring.

"La balance y est... * A German knows how to skin a flint, as the
proverb says," remarked Shinshin, moving his pipe to the other side of
his mouth and winking at the count.


* So that squares matters.

The count burst out laughing. The other guests seeing that Shinshin was
talking came up to listen. Berg, oblivious of irony or indifference,
continued to explain how by exchanging into the Guards he had already
gained a step on his old comrades of the Cadet Corps; how in wartime the
company commander might get killed and he, as senior in the company,
might easily succeed to the post; how popular he was with everyone in
the regiment, and how satisfied his father was with him. Berg evidently
enjoyed narrating all this, and did not seem to suspect that others,
too, might have their own interests. But all he said was so prettily
sedate, and the naivete of his youthful egotism was so obvious, that he
disarmed his hearers.

"Well, my boy, you'll get along wherever you go--foot or horse--that
I'll warrant," said Shinshin, patting him on the shoulder and taking his
feet off the sofa.

Berg smiled joyously. The count, by his guests, went into the drawing
room.

It was just the moment before a big dinner when the assembled guests,
expecting the summons to zakuska, * avoid engaging in any long
conversation but think it necessary to move about and talk, in order to
show that they are not at all impatient for their food. The host and
hostess look toward the door, and now and then glance at one another,
and the visitors try to guess from these glances who, or what, they are
waiting for--some important relation who has not yet arrived, or a dish
that is not yet ready.


* Hors d'oeuvres.

Pierre had come just at dinnertime and was sitting awkwardly in the
middle of the drawing room on the first chair he had come across,
blocking the way for everyone. The countess tried to make him talk, but
he went on naively looking around through his spectacles as if in search
of somebody and answered all her questions in monosyllables. He was in
the way and was the only one who did not notice the fact. Most of the
guests, knowing of the affair with the bear, looked with curiosity at
this big, stout, quiet man, wondering how such a clumsy, modest fellow
could have played such a prank on a policeman.

"You have only lately arrived?" the countess asked him.

"Oui, madame," replied he, looking around him.

"You have not yet seen my husband?"

"Non, madame." He smiled quite inappropriately.

"You have been in Paris recently, I believe? I suppose it's very
interesting."

"Very interesting."

The countess exchanged glances with Anna Mikhaylovna. The latter
understood that she was being asked to entertain this young man, and
sitting down beside him she began to speak about his father; but he
answered her, as he had the countess, only in monosyllables. The other
guests were all conversing with one another. "The Razumovskis... It was
charming... You are very kind... Countess Apraksina..." was heard on all
sides. The countess rose and went into the ballroom.

"Marya Dmitrievna?" came her voice from there.

"Herself," came the answer in a rough voice, and Marya Dmitrievna
entered the room.

All the unmarried ladies and even the married ones except the very
oldest rose. Marya Dmitrievna paused at the door. Tall and stout,
holding high her fifty-year-old head with its gray curls, she stood
surveying the guests, and leisurely arranged her wide sleeves as if
rolling them up. Marya Dmitrievna always spoke in Russian.

"Health and happiness to her whose name day we are keeping and to her
children," she said, in her loud, full-toned voice which drowned all
others. "Well, you old sinner," she went on, turning to the count who
was kissing her hand, "you're feeling dull in Moscow, I daresay? Nowhere
to hunt with your dogs? But what is to be done, old man? Just see how
these nestlings are growing up," and she pointed to the girls. "You must
look for husbands for them whether you like it or not...."

"Well," said she, "how's my Cossack?" (Marya Dmitrievna always called
Natasha a Cossack) and she stroked the child's arm as she came up
fearless and gay to kiss her hand. "I know she's a scamp of a girl, but
I like her."

She took a pair of pear-shaped ruby earrings from her huge reticule and,
having given them to the rosy Natasha, who beamed with the pleasure of
her saint's-day fete, turned away at once and addressed herself to
Pierre.

"Eh, eh, friend! Come here a bit," said she, assuming a soft high tone
of voice. "Come here, my friend..." and she ominously tucked up her
sleeves still higher. Pierre approached, looking at her in a childlike
way through his spectacles.

"Come nearer, come nearer, friend! I used to be the only one to tell
your father the truth when he was in favor, and in your case it's my
evident duty." She paused. All were silent, expectant of what was to
follow, for this was clearly only a prelude.

"A fine lad! My word! A fine lad!... His father lies on his deathbed and
he amuses himself setting a policeman astride a bear! For shame, sir,
for shame! It would be better if you went to the war."

She turned away and gave her hand to the count, who could hardly keep
from laughing.

"Well, I suppose it is time we were at table?" said Marya Dmitrievna.

The count went in first with Marya Dmitrievna, the countess followed on
the arm of a colonel of hussars, a man of importance to them because
Nicholas was to go with him to the regiment; then came Anna Mikhaylovna
with Shinshin. Berg gave his arm to Vera. The smiling Julie Karagina
went in with Nicholas. After them other couples followed, filling the
whole dining hall, and last of all the children, tutors, and governesses
followed singly. The footmen began moving about, chairs scraped, the
band struck up in the gallery, and the guests settled down in their
places. Then the strains of the count's household band were replaced by
the clatter of knives and forks, the voices of visitors, and the soft
steps of the footmen. At one end of the table sat the countess with
Marya Dmitrievna on her right and Anna Mikhaylovna on her left, the
other lady visitors were farther down. At the other end sat the count,
with the hussar colonel on his left and Shinshin and the other male
visitors on his right. Midway down the long table on one side sat the
grownup young people: Vera beside Berg, and Pierre beside Boris; and on
the other side, the children, tutors, and governesses. From behind the
crystal decanters and fruit vases, the count kept glancing at his wife
and her tall cap with its light-blue ribbons, and busily filled his
neighbors' glasses, not neglecting his own. The countess in turn,
without omitting her duties as hostess, threw significant glances from
behind the pineapples at her husband whose face and bald head seemed by
their redness to contrast more than usual with his gray hair. At the
ladies' end an even chatter of voices was heard all the time, at the
men's end the voices sounded louder and louder, especially that of the
colonel of hussars who, growing more and more flushed, ate and drank so
much that the count held him up as a pattern to the other guests. Berg
with tender smiles was saying to Vera that love is not an earthly but a
heavenly feeling. Boris was telling his new friend Pierre who the guests
were and exchanging glances with Natasha, who was sitting opposite.
Pierre spoke little but examined the new faces, and ate a great deal. Of
the two soups he chose turtle with savory patties and went on to the
game without omitting a single dish or one of the wines. These latter
the butler thrust mysteriously forward, wrapped in a napkin, from behind
the next man's shoulders and whispered: "Dry Madeira"... "Hungarian"...
or "Rhine wine" as the case might be. Of the four crystal glasses
engraved with the count's monogram that stood before his plate, Pierre
held out one at random and drank with enjoyment, gazing with ever-
increasing amiability at the other guests. Natasha, who sat opposite,
was looking at Boris as girls of thirteen look at the boy they are in
love with and have just kissed for the first time. Sometimes that same
look fell on Pierre, and that funny lively little girl's look made him
inclined to laugh without knowing why.

Nicholas sat at some distance from Sonya, beside Julie Karagina, to whom
he was again talking with the same involuntary smile. Sonya wore a
company smile but was evidently tormented by jealousy; now she turned
pale, now blushed and strained every nerve to overhear what Nicholas and
Julie were saying to one another. The governess kept looking round
uneasily as if preparing to resent any slight that might be put upon the
children. The German tutor was trying to remember all the dishes, wines,
and kinds of dessert, in order to send a full description of the dinner
to his people in Germany; and he felt greatly offended when the butler
with a bottle wrapped in a napkin passed him by. He frowned, trying to
appear as if he did not want any of that wine, but was mortified because
no one would understand that it was not to quench his thirst or from
greediness that he wanted it, but simply from a conscientious desire for
knowledge.




CHAPTER XIX

At the men's end of the table the talk grew more and more animated. The
colonel told them that the declaration of war had already appeared in
Petersburg and that a copy, which he had himself seen, had that day been
forwarded by courier to the commander-in-chief.

"And why the deuce are we going to fight Bonaparte?" remarked Shinshin.
"He has stopped Austria's cackle and I fear it will be our turn next."

The colonel was a stout, tall, plethoric German, evidently devoted to
the service and patriotically Russian. He resented Shinshin's remark.

"It is for the reasson, my goot sir," said he, speaking with a German
accent, "for the reasson zat ze Emperor knows zat. He declares in ze
manifessto zat he cannot fiew wiz indifference ze danger vreatening
Russia and zat ze safety and dignity of ze Empire as vell as ze sanctity
of its alliances..." he spoke this last word with particular emphasis as
if in it lay the gist of the matter.

Then with the unerring official memory that characterized him he
repeated from the opening words of the manifesto:

... and the wish, which constitutes the Emperor's sole and absolute aim-
-to establish peace in Europe on firm foundations--has now decided him
to despatch part of the army abroad and to create a new condition for
the attainment of that purpose.

"Zat, my dear sir, is vy..." he concluded, drinking a tumbler of wine
with dignity and looking to the count for approval.

"Connaissez-vous le Proverbe: * 'Jerome, Jerome, do not roam, but turn
spindles at home!'?" said Shinshin, puckering his brows and smiling.
"Cela nous convient a merveille.*(2) Suvorov now--he knew what he was
about; yet they beat him a plate couture,*(3) and where are we to find
Suvorovs now? Je vous demande un peu,"*(4) said he, continually changing
from French to Russian.


*Do you know the proverb?

*(2) That suits us down to the ground.

*(3) Hollow.

*(4) I just ask you that.

"Ve must vight to the last tr-r-op of our plood!" said the colonel,
thumping the table; "and ve must tie for our Emperor, and zen all vill
pe vell. And ve must discuss it as little as po-o-ossible"... he dwelt
particularly on the word possible... "as po-o-ossible," he ended, again
turning to the count. "Zat is how ve old hussars look at it, and zere's
an end of it! And how do you, a young man and a young hussar, how do you
judge of it?" he added, addressing Nicholas, who when he heard that the
war was being discussed had turned from his partner with eyes and ears
intent on the colonel.

"I am quite of your opinion," replied Nicholas, flaming up, turning his
plate round and moving his wineglasses about with as much decision and
desperation as though he were at that moment facing some great danger.
"I am convinced that we Russians must die or conquer," he concluded,
conscious--as were others--after the words were uttered that his remarks
were too enthusiastic and emphatic for the occasion and were therefore
awkward.

"What you said just now was splendid!" said his partner Julie.

Sonya trembled all over and blushed to her ears and behind them and down
to her neck and shoulders while Nicholas was speaking.

Pierre listened to the colonel's speech and nodded approvingly.

"That's fine," said he.

"The young man's a real hussar!" shouted the colonel, again thumping the
table.

"What are you making such a noise about over there?" Marya Dmitrievna's
deep voice suddenly inquired from the other end of the table. "What are
you thumping the table for?" she demanded of the hussar, "and why are
you exciting yourself? Do you think the French are here?"

"I am speaking ze truce," replied the hussar with a smile.

"It's all about the war," the count shouted down the table. "You know my
son's going, Marya Dmitrievna? My son is going."

"I have four sons in the army but still I don't fret. It is all in God's
hands. You may die in your bed or God may spare you in a battle,"
replied Marya Dmitrievna's deep voice, which easily carried the whole
length of the table.

"That's true!"

Once more the conversations concentrated, the ladies' at the one end and
the men's at the other.

"You won't ask," Natasha's little brother was saying; "I know you won't
ask!"

"I will," replied Natasha.

Her face suddenly flushed with reckless and joyous resolution. She half
rose, by a glance inviting Pierre, who sat opposite, to listen to what
was coming, and turning to her mother:

"Mamma!" rang out the clear contralto notes of her childish voice,
audible the whole length of the table.

"What is it?" asked the countess, startled; but seeing by her daughter's
face that it was only mischief, she shook a finger at her sternly with a
threatening and forbidding movement of her head.

The conversation was hushed.

"Mamma! What sweets are we going to have?" and Natasha's voice sounded
still more firm and resolute.

The countess tried to frown, but could not. Marya Dmitrievna shook her
fat finger.

"Cossack!" she said threateningly.

Most of the guests, uncertain how to regard this sally, looked at the
elders.

"You had better take care!" said the countess.

"Mamma! What sweets are we going to have?" Natasha again cried boldly,
with saucy gaiety, confident that her prank would be taken in good part.

Sonya and fat little Petya doubled up with laughter.

"You see! I have asked," whispered Natasha to her little brother and to
Pierre, glancing at him again.

"Ice pudding, but you won't get any," said Marya Dmitrievna.

Natasha saw there was nothing to be afraid of and so she braved even
Marya Dmitrievna.

"Marya Dmitrievna! What kind of ice pudding? I don't like ice cream."

"Carrot ices."

"No! What kind, Marya Dmitrievna? What kind?" she almost screamed; "I
want to know!"

Marya Dmitrievna and the countess burst out laughing, and all the guests
joined in. Everyone laughed, not at Marya Dmitrievna's answer but at the
incredible boldness and smartness of this little girl who had dared to
treat Marya Dmitrievna in this fashion.

Natasha only desisted when she had been told that there would be
pineapple ice. Before the ices, champagne was served round. The band
again struck up, the count and countess kissed, and the guests, leaving
their seats, went up to "congratulate" the countess, and reached across
the table to clink glasses with the count, with the children, and with
one another. Again the footmen rushed about, chairs scraped, and in the
same order in which they had entered but with redder faces, the guests
returned to the drawing room and to the count's study.




CHAPTER XX

The card tables were drawn out, sets made up for boston, and the count's
visitors settled themselves, some in the two drawing rooms, some in the
sitting room, some in the library.

The count, holding his cards fanwise, kept himself with difficulty from
dropping into his usual after-dinner nap, and laughed at everything. The
young people, at the countess' instigation, gathered round the
clavichord and harp. Julie by general request played first. After she
had played a little air with variations on the harp, she joined the
other young ladies in begging Natasha and Nicholas, who were noted for
their musical talent, to sing something. Natasha, who was treated as
though she were grown up, was evidently very proud of this but at the
same time felt shy.

"What shall we sing?" she said.

"'The Brook,'" suggested Nicholas.

"Well, then, let's be quick. Boris, come here," said Natasha. "But where
is Sonya?"

She looked round and seeing that her friend was not in the room ran to
look for her.

Running into Sonya's room and not finding her there, Natasha ran to the
nursery, but Sonya was not there either. Natasha concluded that she must
be on the chest in the passage. The chest in the passage was the place
of mourning for the younger female generation in the Rostov household.
And there in fact was Sonya lying face downward on Nurse's dirty feather
bed on the top of the chest, crumpling her gauzy pink dress under her,
hiding her face with her slender fingers, and sobbing so convulsively
that her bare little shoulders shook. Natasha's face, which had been so
radiantly happy all that saint's day, suddenly changed: her eyes became
fixed, and then a shiver passed down her broad neck and the corners of
her mouth drooped.

"Sonya! What is it? What is the matter?... Oo... Oo... Oo...!" And
Natasha's large mouth widened, making her look quite ugly, and she began
to wail like a baby without knowing why, except that Sonya was crying.
Sonya tried to lift her head to answer but could not, and hid her face
still deeper in the bed. Natasha wept, sitting on the blue-striped
feather bed and hugging her friend. With an effort Sonya sat up and
began wiping her eyes and explaining.

"Nicholas is going away in a week's time, his... papers... have come...
he told me himself... but still I should not cry," and she showed a
paper she held in her hand--with the verses Nicholas had written,
"still, I should not cry, but you can't... no one can understand... what
a soul he has!"

And she began to cry again because he had such a noble soul.

"It's all very well for you... I am not envious... I love you and Boris
also," she went on, gaining a little strength; "he is nice... there are
no difficulties in your way.... But Nicholas is my cousin... one would
have to... the Metropolitan himself... and even then it can't be done.
And besides, if she tells Mamma" (Sonya looked upon the countess as her
mother and called her so) "that I am spoiling Nicholas' career and am
heartless and ungrateful, while truly... God is my witness," and she
made the sign of the cross, "I love her so much, and all of you, only
Vera... And what for? What have I done to her? I am so grateful to you
that I would willingly sacrifice everything, only I have nothing...."

Sonya could not continue, and again hid her face in her hands and in the
feather bed. Natasha began consoling her, but her face showed that she
understood all the gravity of her friend's trouble.

"Sonya," she suddenly exclaimed, as if she had guessed the true reason
of her friend's sorrow, "I'm sure Vera has said something to you since
dinner? Hasn't she?"

"Yes, these verses Nicholas wrote himself and I copied some others, and
she found them on my table and said she'd show them to Mamma, and that I
was ungrateful, and that Mamma would never allow him to marry me, but
that he'll marry Julie. You see how he's been with her all day...
Natasha, what have I done to deserve it?..."

And again she began to sob, more bitterly than before. Natasha lifted
her up, hugged her, and, smiling through her tears, began comforting
her.

"Sonya, don't believe her, darling! Don't believe her! Do you remember
how we and Nicholas, all three of us, talked in the sitting room after
supper? Why, we settled how everything was to be. I don't quite remember
how, but don't you remember that it could all be arranged and how nice
it all was? There's Uncle Shinshin's brother has married his first
cousin. And we are only second cousins, you know. And Boris says it is
quite possible. You know I have told him all about it. And he is so
clever and so good!" said Natasha. "Don't you cry, Sonya, dear love,
darling Sonya!" and she kissed her and laughed. "Vera's spiteful; never
mind her! And all will come right and she won't say anything to Mamma.
Nicholas will tell her himself, and he doesn't care at all for Julie."

Natasha kissed her on the hair.

Sonya sat up. The little kitten brightened, its eyes shone, and it
seemed ready to lift its tail, jump down on its soft paws, and begin
playing with the ball of worsted as a kitten should.

"Do you think so?... Really? Truly?" she said, quickly smoothing her
frock and hair.

"Really, truly!" answered Natasha, pushing in a crisp lock that had
strayed from under her friend's plaits.

Both laughed.

"Well, let's go and sing 'The Brook.'"

"Come along!"

"Do you know, that fat Pierre who sat opposite me is so funny!" said
Natasha, stopping suddenly. "I feel so happy!"

And she set off at a run along the passage.

Sonya, shaking off some down which clung to her and tucking away the
verses in the bosom of her dress close to her bony little chest, ran
after Natasha down the passage into the sitting room with flushed face
and light, joyous steps. At the visitors' request the young people sang
the quartette, "The Brook," with which everyone was delighted. Then
Nicholas sang a song he had just learned:


At nighttime in the moon's fair glow How sweet, as fancies wander free,
To feel that in this world there's one Who still is thinking but of
thee!

That while her fingers touch the harp Wafting sweet music o'er the lea,
It is for thee thus swells her heart, Sighing its message out to thee...

A day or two, then bliss unspoilt, But oh! till then I cannot live!...

He had not finished the last verse before the young people began to get
ready to dance in the large hall, and the sound of the feet and the
coughing of the musicians were heard from the gallery.

Pierre was sitting in the drawing-room where Shinshin had engaged him,
as a man recently returned from abroad, in a political conversation in
which several others joined but which bored Pierre. When the music began
Natasha came in and walking straight up to Pierre said, laughing and
blushing:

"Mamma told me to ask you to join the dancers."

"I am afraid of mixing the figures," Pierre replied; "but if you will be
my teacher..." And lowering his big arm he offered it to the slender
little girl.

While the couples were arranging themselves and the musicians tuning up,
Pierre sat down with his little partner. Natasha was perfectly happy;
she was dancing with a grown-up man, who had been abroad. She was
sitting in a conspicuous place and talking to him like a grown-up lady.
She had a fan in her hand that one of the ladies had given her to hold.
Assuming quite the pose of a society woman (heaven knows when and where
she had learned it) she talked with her partner, fanning herself and
smiling over the fan.

"Dear, dear! Just look at her!" exclaimed the countess as she crossed
the ballroom, pointing to Natasha.

Natasha blushed and laughed.

"Well, really, Mamma! Why should you? What is there to be surprised at?"

In the midst of the third ecossaise there was a clatter of chairs being
pushed back in the sitting room where the count and Marya Dmitrievna had
been playing cards with the majority of the more distinguished and older
visitors. They now, stretching themselves after sitting so long, and
replacing their purses and pocketbooks, entered the ballroom. First came
Marya Dmitrievna and the count, both with merry countenances. The count,
with playful ceremony somewhat in ballet style, offered his bent arm to
Marya Dmitrievna. He drew himself up, a smile of debonair gallantry lit
up his face and as soon as the last figure of the ecossaise was ended,
he clapped his hands to the musicians and shouted up to their gallery,
addressing the first violin:

"Semen! Do you know the Daniel Cooper?"

This was the count's favorite dance, which he had danced in his youth.
(Strictly speaking, Daniel Cooper was one figure of the anglaise.)

"Look at Papa!" shouted Natasha to the whole company, and quite
forgetting that she was dancing with a grown-up partner she bent her
curly head to her knees and made the whole room ring with her laughter.

And indeed everybody in the room looked with a smile of pleasure at the
jovial old gentleman, who standing beside his tall and stout partner,
Marya Dmitrievna, curved his arms, beat time, straightened his
shoulders, turned out his toes, tapped gently with his foot, and, by a
smile that broadened his round face more and more, prepared the
onlookers for what was to follow. As soon as the provocatively gay
strains of Daniel Cooper (somewhat resembling those of a merry peasant
dance) began to sound, all the doorways of the ballroom were suddenly
filled by the domestic serfs--the men on one side and the women on the
other--who with beaming faces had come to see their master making merry.

"Just look at the master! A regular eagle he is!" loudly remarked the
nurse, as she stood in one of the doorways.

The count danced well and knew it. But his partner could not and did not
want to dance well. Her enormous figure stood erect, her powerful arms
hanging down (she had handed her reticule to the countess), and only her
stern but handsome face really joined in the dance. What was expressed
by the whole of the count's plump figure, in Marya Dmitrievna found
expression only in her more and more beaming face and quivering nose.
But if the count, getting more and more into the swing of it, charmed
the spectators by the unexpectedness of his adroit maneuvers and the
agility with which he capered about on his light feet, Marya Dmitrievna
produced no less impression by slight exertions--the least effort to
move her shoulders or bend her arms when turning, or stamp her foot--
which everyone appreciated in view of her size and habitual severity.
The dance grew livelier and livelier. The other couples could not
attract a moment's attention to their own evolutions and did not even
try to do so. All were watching the count and Marya Dmitrievna. Natasha
kept pulling everyone by sleeve or dress, urging them to "look at Papa!"
though as it was they never took their eyes off the couple. In the
intervals of the dance the count, breathing deeply, waved and shouted to
the musicians to play faster. Faster, faster, and faster; lightly, more
lightly, and yet more lightly whirled the count, flying round Marya
Dmitrievna, now on his toes, now on his heels; until, turning his
partner round to her seat, he executed the final pas, raising his soft
foot backwards, bowing his perspiring head, smiling and making a wide
sweep with his arm, amid a thunder of applause and laughter led by
Natasha. Both partners stood still, breathing heavily and wiping their
faces with their cambric handkerchiefs.

"That's how we used to dance in our time, ma chere," said the count.

"That was a Daniel Cooper!" exclaimed Marya Dmitrievna, tucking up her
sleeves and puffing heavily.




CHAPTER XXI

While in the Rostovs' ballroom the sixth anglaise was being danced, to a
tune in which the weary musicians blundered, and while tired footmen and
cooks were getting the supper, Count Bezukhov had a sixth stroke. The
doctors pronounced recovery impossible. After a mute confession,
communion was administered to the dying man, preparations made for the
sacrament of unction, and in his house there was the bustle and thrill
of suspense usual at such moments. Outside the house, beyond the gates,
a group of undertakers, who hid whenever a carriage drove up, waited in
expectation of an important order for an expensive funeral. The Military
Governor of Moscow, who had been assiduous in sending aides-de-camp to
inquire after the count's health, came himself that evening to bid a
last farewell to the celebrated grandee of Catherine's court, Count
Bezukhov.

The magnificent reception room was crowded. Everyone stood up
respectfully when the Military Governor, having stayed about half an
hour alone with the dying man, passed out, slightly acknowledging their
bows and trying to escape as quickly as possible from the glances fixed
on him by the doctors, clergy, and relatives of the family. Prince
Vasili, who had grown thinner and paler during the last few days,
escorted him to the door, repeating something to him several times in
low tones.

When the Military Governor had gone, Prince Vasili sat down all alone on
a chair in the ballroom, crossing one leg high over the other, leaning
his elbow on his knee and covering his face with his hand. After sitting
so for a while he rose, and, looking about him with frightened eyes,
went with unusually hurried steps down the long corridor leading to the
back of the house, to the room of the eldest princess.

Those who were in the dimly lit reception room spoke in nervous
whispers, and, whenever anyone went into or came from the dying man's
room, grew silent and gazed with eyes full of curiosity or expectancy at
his door, which creaked slightly when opened.

"The limits of human life... are fixed and may not be o'erpassed," said
an old priest to a lady who had taken a seat beside him and was
listening naively to his words.

"I wonder, is it not too late to administer unction?" asked the lady,
adding the priest's clerical title, as if she had no opinion of her own
on the subject.

"Ah, madam, it is a great sacrament," replied the priest, passing his
hand over the thin grizzled strands of hair combed back across his bald
head.

"Who was that? The Military Governor himself?" was being asked at the
other side of the room. "How young-looking he is!"

"Yes, and he is over sixty. I hear the count no longer recognizes
anyone. They wished to administer the sacrament of unction."

"I knew someone who received that sacrament seven times."

The second princess had just come from the sickroom with her eyes red
from weeping and sat down beside Dr. Lorrain, who was sitting in a
graceful pose under a portrait of Catherine, leaning his elbow on a
table.

"Beautiful," said the doctor in answer to a remark about the weather.
"The weather is beautiful, Princess; and besides, in Moscow one feels as
if one were in the country."

"Yes, indeed," replied the princess with a sigh. "So he may have
something to drink?"

Lorrain considered.

"Has he taken his medicine?"

"Yes."

The doctor glanced at his watch.

"Take a glass of boiled water and put a pinch of cream of tartar," and
he indicated with his delicate fingers what he meant by a pinch.

"Dere has neffer been a gase," a German doctor was saying to an aide-de-
camp, "dat one liffs after de sird stroke."

"And what a well-preserved man he was!" remarked the aide-de-camp. "And
who will inherit his wealth?" he added in a whisper.

"It von't go begging," replied the German with a smile.

Everyone again looked toward the door, which creaked as the second
princess went in with the drink she had prepared according to Lorrain's
instructions. The German doctor went up to Lorrain.

"Do you think he can last till morning?" asked the German, addressing
Lorrain in French which he pronounced badly.

Lorrain, pursing up his lips, waved a severely negative finger before
his nose.

"Tonight, not later," said he in a low voice, and he moved away with a
decorous smile of self-satisfaction at being able clearly to understand
and state the patient's condition.

Meanwhile Prince Vasili had opened the door into the princess' room.

In this room it was almost dark; only two tiny lamps were burning before
the icons and there was a pleasant scent of flowers and burnt pastilles.
The room was crowded with small pieces of furniture, whatnots,
cupboards, and little tables. The quilt of a high, white feather bed was
just visible behind a screen. A small dog began to bark.

"Ah, is it you, cousin?"

She rose and smoothed her hair, which was as usual so extremely smooth
that it seemed to be made of one piece with her head and covered with
varnish.

"Has anything happened?" she asked. "I am so terrified."

"No, there is no change. I only came to have a talk about business,
Catiche," * muttered the prince, seating himself wearily on the chair
she had just vacated. "You have made the place warm, I must say," he
remarked. "Well, sit down: let's have a talk."


*Catherine.

"I thought perhaps something had happened," she said with her unchanging
stonily severe expression; and, sitting down opposite the prince, she
prepared to listen.

"I wished to get a nap, mon cousin, but I can't."

"Well, my dear?" said Prince Vasili, taking her hand and bending it
downwards as was his habit.

It was plain that this "well?" referred to much that they both
understood without naming.

The princess, who had a straight, rigid body, abnormally long for her
legs, looked directly at Prince Vasili with no sign of emotion in her
prominent gray eyes. Then she shook her head and glanced up at the icons
with a sigh. This might have been taken as an expression of sorrow and
devotion, or of weariness and hope of resting before long. Prince Vasili
understood it as an expression of weariness.

"And I?" he said; "do you think it is easier for me? I am as worn out as
a post horse, but still I must have a talk with you, Catiche, a very
serious talk."

Prince Vasili said no more and his cheeks began to twitch nervously, now
on one side, now on the other, giving his face an unpleasant expression
which was never to be seen on it in a drawing room. His eyes too seemed
strange; at one moment they looked impudently sly and at the next
glanced round in alarm.

The princess, holding her little dog on her lap with her thin bony
hands, looked attentively into Prince Vasili's eyes evidently resolved
not to be the first to break silence, if she had to wait till morning.

"Well, you see, my dear princess and cousin, Catherine Semenovna,"
continued Prince Vasili, returning to his theme, apparently not without
an inner struggle; "at such a moment as this one must think of
everything. One must think of the future, of all of you... I love you
all, like children of my own, as you know."

The princess continued to look at him without moving, and with the same
dull expression.

"And then of course my family has also to be considered," Prince Vasili
went on, testily pushing away a little table without looking at her.
"You know, Catiche, that we--you three sisters, Mamontov, and my wife--
are the count's only direct heirs. I know, I know how hard it is for you
to talk or think of such matters. It is no easier for me; but, my dear,
I am getting on for sixty and must be prepared for anything. Do you know
I have sent for Pierre? The count," pointing to his portrait,
"definitely demanded that he should be called."

Prince Vasili looked questioningly at the princess, but could not make
out whether she was considering what he had just said or whether she was
simply looking at him.

"There is one thing I constantly pray God to grant, mon cousin," she
replied, "and it is that He would be merciful to him and would allow his
noble soul peacefully to leave this..."

"Yes, yes, of course," interrupted Prince Vasili impatiently, rubbing
his bald head and angrily pulling back toward him the little table that
he had pushed away. "But... in short, the fact is... you know yourself
that last winter the count made a will by which he left all his
property, not to us his direct heirs, but to Pierre."

"He has made wills enough!" quietly remarked the princess. "But he
cannot leave the estate to Pierre. Pierre is illegitimate."

"But, my dear," said Prince Vasili suddenly, clutching the little table
and becoming more animated and talking more rapidly: "what if a letter
has been written to the Emperor in which the count asks for Pierre's
legitimation? Do you understand that in consideration of the count's
services, his request would be granted?..."

The princess smiled as people do who think they know more about the
subject under discussion than those they are talking with.

"I can tell you more," continued Prince Vasili, seizing her hand, "that
letter was written, though it was not sent, and the Emperor knew of it.
The only question is, has it been destroyed or not? If not, then as soon
as all is over," and Prince Vasili sighed to intimate what he meant by
the words all is over, "and the count's papers are opened, the will and
letter will be delivered to the Emperor, and the petition will certainly
be granted. Pierre will get everything as the legitimate son."

"And our share?" asked the princess smiling ironically, as if anything
might happen, only not that.

"But, my poor Catiche, it is as clear as daylight! He will then be the
legal heir to everything and you won't get anything. You must know, my
dear, whether the will and letter were written, and whether they have
been destroyed or not. And if they have somehow been overlooked, you
ought to know where they are, and must find them, because..."

"What next?" the princess interrupted, smiling sardonically and not
changing the expression of her eyes. "I am a woman, and you think we are
all stupid; but I know this: an illegitimate son cannot inherit... un
batard!" * she added, as if supposing that this translation of the word
would effectively prove to Prince Vasili the invalidity of his
contention.


* A bastard.

"Well, really, Catiche! Can't you understand! You are so intelligent,
how is it you don't see that if the count has written a letter to the
Emperor begging him to recognize Pierre as legitimate, it follows that
Pierre will not be Pierre but will become Count Bezukhov, and will then
inherit everything under the will? And if the will and letter are not
destroyed, then you will have nothing but the consolation of having been
dutiful et tout ce qui s'ensuit! * That's certain."


* And all that follows therefrom.

"I know the will was made, but I also know that it is invalid; and you,
mon cousin, seem to consider me a perfect fool," said the princess with
the expression women assume when they suppose they are saying something
witty and stinging.

"My dear Princess Catherine Semenovna," began Prince Vasili impatiently,
"I came here not to wrangle with you, but to talk about your interests
as with a kinswoman, a good, kind, true relation. And I tell you for the
tenth time that if the letter to the Emperor and the will in Pierre's
favor are among the count's papers, then, my dear girl, you and your
sisters are not heiresses! If you don't believe me, then believe an
expert. I have just been talking to Dmitri Onufrich" (the family
solicitor) "and he says the same."

At this a sudden change evidently took place in the princess' ideas; her
thin lips grew white, though her eyes did not change, and her voice when
she began to speak passed through such transitions as she herself
evidently did not expect.

"That would be a fine thing!" said she. "I never wanted anything and I
don't now."

She pushed the little dog off her lap and smoothed her dress.

"And this is gratitude--this is recognition for those who have
sacrificed everything for his sake!" she cried. "It's splendid! Fine! I
don't want anything, Prince."

"Yes, but you are not the only one. There are your sisters..." replied
Prince Vasili.

But the princess did not listen to him.

"Yes, I knew it long ago but had forgotten. I knew that I could expect
nothing but meanness, deceit, envy, intrigue, and ingratitude--the
blackest ingratitude--in this house..."

"Do you or do you not know where that will is?" insisted Prince Vasili,
his cheeks twitching more than ever.

"Yes, I was a fool! I still believed in people, loved them, and
sacrificed myself. But only the base, the vile succeed! I know who has
been intriguing!"

The princess wished to rise, but the prince held her by the hand. She
had the air of one who has suddenly lost faith in the whole human race.
She gave her companion an angry glance.

"There is still time, my dear. You must remember, Catiche, that it was
all done casually in a moment of anger, of illness, and was afterwards
forgotten. Our duty, my dear, is to rectify his mistake, to ease his
last moments by not letting him commit this injustice, and not to let
him die feeling that he is rendering unhappy those who..."

"Who sacrificed everything for him," chimed in the princess, who would
again have risen had not the prince still held her fast, "though he
never could appreciate it. No, mon cousin," she added with a sigh, "I
shall always remember that in this world one must expect no reward, that
in this world there is neither honor nor justice. In this world one has
to be cunning and cruel."

"Now come, come! Be reasonable. I know your excellent heart."

"No, I have a wicked heart."

"I know your heart," repeated the prince. "I value your friendship and
wish you to have as good an opinion of me. Don't upset yourself, and let
us talk sensibly while there is still time, be it a day or be it but an
hour.... Tell me all you know about the will, and above all where it is.
You must know. We will take it at once and show it to the count. He has,
no doubt, forgotten it and will wish to destroy it. You understand that
my sole desire is conscientiously to carry out his wishes; that is my
only reason for being here. I came simply to help him and you."

"Now I see it all! I know who has been intriguing--I know!" cried the
princess.

"That's not the point, my dear."

"It's that protege of yours, that sweet Princess Drubetskaya, that Anna
Mikhaylovna whom I would not take for a housemaid... the infamous, vile
woman!"

"Do not let us lose any time..."

"Ah, don't talk to me! Last winter she wheedled herself in here and told
the count such vile, disgraceful things about us, especially about
Sophie--I can't repeat them--that it made the count quite ill and he
would not see us for a whole fortnight. I know it was then he wrote this
vile, infamous paper, but I thought the thing was invalid."

"We've got to it at last--why did you not tell me about it sooner?"

"It's in the inlaid portfolio that he keeps under his pillow," said the
princess, ignoring his question. "Now I know! Yes; if I have a sin, a
great sin, it is hatred of that vile woman!" almost shrieked the
princess, now quite changed. "And what does she come worming herself in
here for? But I will give her a piece of my mind. The time will come!"




CHAPTER XXII

While these conversations were going on in the reception room and the
princess' room, a carriage containing Pierre (who had been sent for) and
Anna Mikhaylovna (who found it necessary to accompany him) was driving
into the court of Count Bezukhov's house. As the wheels rolled softly
over the straw beneath the windows, Anna Mikhaylovna, having turned with
words of comfort to her companion, realized that he was asleep in his
corner and woke him up. Rousing himself, Pierre followed Anna
Mikhaylovna out of the carriage, and only then began to think of the
interview with his dying father which awaited him. He noticed that they
had not come to the front entrance but to the back door. While he was
getting down from the carriage steps two men, who looked like
tradespeople, ran hurriedly from the entrance and hid in the shadow of
the wall. Pausing for a moment, Pierre noticed several other men of the
same kind hiding in the shadow of the house on both sides. But neither
Anna Mikhaylovna nor the footman nor the coachman, who could not help
seeing these people, took any notice of them. "It seems to be all
right," Pierre concluded, and followed Anna Mikhaylovna. She hurriedly
ascended the narrow dimly lit stone staircase, calling to Pierre, who
was lagging behind, to follow. Though he did not see why it was
necessary for him to go to the count at all, still less why he had to go
by the back stairs, yet judging by Anna Mikhaylovna's air of assurance
and haste, Pierre concluded that it was all absolutely necessary.
Halfway up the stairs they were almost knocked over by some men who,
carrying pails, came running downstairs, their boots clattering. These
men pressed close to the wall to let Pierre and Anna Mikhaylovna pass
and did not evince the least surprise at seeing them there.

"Is this the way to the princesses' apartments?" asked Anna Mikhaylovna
of one of them.

"Yes," replied a footman in a bold loud voice, as if anything were now
permissible; "the door to the left, ma'am."

"Perhaps the count did not ask for me," said Pierre when he reached the
landing. "I'd better go to my own room."

Anna Mikhaylovna paused and waited for him to come up.

"Ah, my friend!" she said, touching his arm as she had done her son's
when speaking to him that afternoon, "believe me I suffer no less than
you do, but be a man!"

"But really, hadn't I better go away?" he asked, looking kindly at her
over his spectacles.

"Ah, my dear friend! Forget the wrongs that may have been done you.
Think that he is your father... perhaps in the agony of death." She
sighed. "I have loved you like a son from the first. Trust yourself to
me, Pierre. I shall not forget your interests."

Pierre did not understand a word, but the conviction that all this had
to be grew stronger, and he meekly followed Anna Mikhaylovna who was
already opening a door.

This door led into a back anteroom. An old man, a servant of the
princesses, sat in a corner knitting a stocking. Pierre had never been
in this part of the house and did not even know of the existence of
these rooms. Anna Mikhaylovna, addressing a maid who was hurrying past
with a decanter on a tray as "my dear" and "my sweet," asked about the
princess' health and then led Pierre along a stone passage. The first
door on the left led into the princesses' apartments. The maid with the
decanter in her haste had not closed the door (everything in the house
was done in haste at that time), and Pierre and Anna Mikhaylovna in
passing instinctively glanced into the room, where Prince Vasili and the
eldest princess were sitting close together talking. Seeing them pass,
Prince Vasili drew back with obvious impatience, while the princess
jumped up and with a gesture of desperation slammed the door with all
her might.

This action was so unlike her usual composure and the fear depicted on
Prince Vasili's face so out of keeping with his dignity that Pierre
stopped and glanced inquiringly over his spectacles at his guide. Anna
Mikhaylovna evinced no surprise, she only smiled faintly and sighed, as
if to say that this was no more than she had expected.

"Be a man, my friend. I will look after your interests," said she in
reply to his look, and went still faster along the passage.

Pierre could not make out what it was all about, and still less what
"watching over his interests" meant, but he decided that all these
things had to be. From the passage they went into a large, dimly lit
room adjoining the count's reception room. It was one of those sumptuous
but cold apartments known to Pierre only from the front approach, but
even in this room there now stood an empty bath, and water had been
spilled on the carpet. They were met by a deacon with a censer and by a
servant who passed out on tiptoe without heeding them. They went into
the reception room familiar to Pierre, with two Italian windows opening
into the conservatory, with its large bust and full length portrait of
Catherine the Great. The same people were still sitting here in almost
the same positions as before, whispering to one another. All became
silent and turned to look at the pale tear-worn Anna Mikhaylovna as she
entered, and at the big stout figure of Pierre who, hanging his head,
meekly followed her.

Anna Mikhaylovna's face expressed a consciousness that the decisive
moment had arrived. With the air of a practical Petersburg lady she now,
keeping Pierre close beside her, entered the room even more boldly than
that afternoon. She felt that as she brought with her the person the
dying man wished to see, her own admission was assured. Casting a rapid
glance at all those in the room and noticing the count's confessor
there, she glided up to him with a sort of amble, not exactly bowing yet
seeming to grow suddenly smaller, and respectfully received the blessing
first of one and then of another priest.

"God be thanked that you are in time," said she to one of the priests;
"all we relatives have been in such anxiety. This young man is the
count's son," she added more softly. "What a terrible moment!"

Having said this she went up to the doctor.

"Dear doctor," said she, "this young man is the count's son. Is there
any hope?"

The doctor cast a rapid glance upwards and silently shrugged his
shoulders. Anna Mikhaylovna with just the same movement raised her
shoulders and eyes, almost closing the latter, sighed, and moved away
from the doctor to Pierre. To him, in a particularly respectful and
tenderly sad voice, she said:

"Trust in His mercy!" and pointing out a small sofa for him to sit and
wait for her, she went silently toward the door that everyone was
watching and it creaked very slightly as she disappeared behind it.

Pierre, having made up his mind to obey his monitress implicitly, moved
toward the sofa she had indicated. As soon as Anna Mikhaylovna had
disappeared he noticed that the eyes of all in the room turned to him
with something more than curiosity and sympathy. He noticed that they
whispered to one another, casting significant looks at him with a kind
of awe and even servility. A deference such as he had never before
received was shown him. A strange lady, the one who had been talking to
the priests, rose and offered him her seat; an aide-de-camp picked up
and returned a glove Pierre had dropped; the doctors became respectfully
silent as he passed by, and moved to make way for him. At first Pierre
wished to take another seat so as not to trouble the lady, and also to
pick up the glove himself and to pass round the doctors who were not
even in his way; but all at once he felt that this would not do, and
that tonight he was a person obliged to perform some sort of awful rite
which everyone expected of him, and that he was therefore bound to
accept their services. He took the glove in silence from the aide-de-
camp, and sat down in the lady's chair, placing his huge hands
symmetrically on his knees in the naive attitude of an Egyptian statue,
and decided in his own mind that all was as it should be, and that in
order not to lose his head and do foolish things he must not act on his
own ideas tonight, but must yield himself up entirely to the will of
those who were guiding him.

Not two minutes had passed before Prince Vasili with head erect
majestically entered the room. He was wearing his long coat with three
stars on his breast. He seemed to have grown thinner since the morning;
his eyes seemed larger than usual when he glanced round and noticed
Pierre. He went up to him, took his hand (a thing he never used to do),
and drew it downwards as if wishing to ascertain whether it was firmly
fixed on.

"Courage, courage, my friend! He has asked to see you. That is well!"
and he turned to go.

But Pierre thought it necessary to ask: "How is..." and hesitated, not
knowing whether it would be proper to call the dying man "the count,"
yet ashamed to call him "father."

"He had another stroke about half an hour ago. Courage, my friend..."

Pierre's mind was in such a confused state that the word "stroke"
suggested to him a blow from something. He looked at Prince Vasili in
perplexity, and only later grasped that a stroke was an attack of
illness. Prince Vasili said something to Lorrain in passing and went
through the door on tiptoe. He could not walk well on tiptoe and his
whole body jerked at each step. The eldest princess followed him, and
the priests and deacons and some servants also went in at the door.
Through that door was heard a noise of things being moved about, and at
last Anna Mikhaylovna, still with the same expression, pale but resolute
in the discharge of duty, ran out and touching Pierre lightly on the arm
said:

"The divine mercy is inexhaustible! Unction is about to be administered.
Come."

Pierre went in at the door, stepping on the soft carpet, and noticed
that the strange lady, the aide-de-camp, and some of the servants, all
followed him in, as if there were now no further need for permission to
enter that room.




CHAPTER XXIII

Pierre well knew this large room divided by columns and an arch, its
walls hung round with Persian carpets. The part of the room behind the
columns, with a high silk-curtained mahogany bedstead on one side and on
the other an immense case containing icons, was brightly illuminated
with red light like a Russian church during evening service. Under the
gleaming icons stood a long invalid chair, and in that chair on snowy-
white smooth pillows, evidently freshly changed, Pierre saw--covered to
the waist by a bright green quilt--the familiar, majestic figure of his
father, Count Bezukhov, with that gray mane of hair above his broad
forehead which reminded one of a lion, and the deep characteristically
noble wrinkles of his handsome, ruddy face. He lay just under the icons;
his large thick hands outside the quilt. Into the right hand, which was
lying palm downwards, a wax taper had been thrust between forefinger and
thumb, and an old servant, bending over from behind the chair, held it
in position. By the chair stood the priests, their long hair falling
over their magnificent glittering vestments, with lighted tapers in
their hands, slowly and solemnly conducting the service. A little behind
them stood the two younger princesses holding handkerchiefs to their
eyes, and just in front of them their eldest sister, Catiche, with a
vicious and determined look steadily fixed on the icons, as though
declaring to all that she could not answer for herself should she glance
round. Anna Mikhaylovna, with a meek, sorrowful, and all-forgiving
expression on her face, stood by the door near the strange lady. Prince
Vasili in front of the door, near the invalid chair, a wax taper in his
left hand, was leaning his left arm on the carved back of a velvet chair
he had turned round for the purpose, and was crossing himself with his
right hand, turning his eyes upward each time he touched his forehead.
His face wore a calm look of piety and resignation to the will of God.
"If you do not understand these sentiments," he seemed to be saying, "so
much the worse for you!"

Behind him stood the aide-de-camp, the doctors, and the menservants; the
men and women had separated as in church. All were silently crossing
themselves, and the reading of the church service, the subdued chanting
of deep bass voices, and in the intervals sighs and the shuffling of
feet were the only sounds that could be heard. Anna Mikhaylovna, with an
air of importance that showed that she felt she quite knew what she was
about, went across the room to where Pierre was standing and gave him a
taper. He lit it and, distracted by observing those around him, began
crossing himself with the hand that held the taper.

Sophie, the rosy, laughter-loving, youngest princess with the mole,
watched him. She smiled, hid her face in her handkerchief, and remained
with it hidden for awhile; then looking up and seeing Pierre she again
began to laugh. She evidently felt unable to look at him without
laughing, but could not resist looking at him: so to be out of
temptation she slipped quietly behind one of the columns. In the midst
of the service the voices of the priests suddenly ceased, they whispered
to one another, and the old servant who was holding the count's hand got
up and said something to the ladies. Anna Mikhaylovna stepped forward
and, stooping over the dying man, beckoned to Lorrain from behind her
back. The French doctor held no taper; he was leaning against one of the
columns in a respectful attitude implying that he, a foreigner, in spite
of all differences of faith, understood the full importance of the rite
now being performed and even approved of it. He now approached the sick
man with the noiseless step of one in full vigor of life, with his
delicate white fingers raised from the green quilt the hand that was
free, and turning sideways felt the pulse and reflected a moment. The
sick man was given something to drink, there was a stir around him, then
the people resumed their places and the service continued. During this
interval Pierre noticed that Prince Vasili left the chair on which he
had been leaning, and--with an air which intimated that he knew what he
was about and if others did not understand him it was so much the worse
for them--did not go up to the dying man, but passed by him, joined the
eldest princess, and moved with her to the side of the room where stood
the high bedstead with its silken hangings. On leaving the bed both
Prince Vasili and the princess passed out by a back door, but returned
to their places one after the other before the service was concluded.
Pierre paid no more attention to this occurrence than to the rest of
what went on, having made up his mind once for all that what he saw
happening around him that evening was in some way essential.

The chanting of the service ceased, and the voice of the priest was
heard respectfully congratulating the dying man on having received the
sacrament. The dying man lay as lifeless and immovable as before. Around
him everyone began to stir: steps were audible and whispers, among which
Anna Mikhaylovna's was the most distinct.

Pierre heard her say:

"Certainly he must be moved onto the bed; here it will be impossible..."

The sick man was so surrounded by doctors, princesses, and servants that
Pierre could no longer see the reddish-yellow face with its gray mane--
which, though he saw other faces as well, he had not lost sight of for a
single moment during the whole service. He judged by the cautious
movements of those who crowded round the invalid chair that they had
lifted the dying man and were moving him.

"Catch hold of my arm or you'll drop him!" he heard one of the servants
say in a frightened whisper. "Catch hold from underneath. Here!"
exclaimed different voices; and the heavy breathing of the bearers and
the shuffling of their feet grew more hurried, as if the weight they
were carrying were too much for them.

As the bearers, among whom was Anna Mikhaylovna, passed the young man he
caught a momentary glimpse between their heads and backs of the dying
man's high, stout, uncovered chest and powerful shoulders, raised by
those who were holding him under the armpits, and of his gray, curly,
leonine head. This head, with its remarkably broad brow and cheekbones,
its handsome, sensual mouth, and its cold, majestic expression, was not
disfigured by the approach of death. It was the same as Pierre
remembered it three months before, when the count had sent him to
Petersburg. But now this head was swaying helplessly with the uneven
movements of the bearers, and the cold listless gaze fixed itself upon
nothing.

After a few minutes' bustle beside the high bedstead, those who had
carried the sick man dispersed. Anna Mikhaylovna touched Pierre's hand
and said, "Come." Pierre went with her to the bed on which the sick man
had been laid in a stately pose in keeping with the ceremony just
completed. He lay with his head propped high on the pillows. His hands
were symmetrically placed on the green silk quilt, the palms downward.
When Pierre came up the count was gazing straight at him, but with a
look the significance of which could not be understood by mortal man.
Either this look meant nothing but that as long as one has eyes they
must look somewhere, or it meant too much. Pierre hesitated, not knowing
what to do, and glanced inquiringly at his guide. Anna Mikhaylovna made
a hurried sign with her eyes, glancing at the sick man's hand and moving
her lips as if to send it a kiss. Pierre, carefully stretching his neck
so as not to touch the quilt, followed her suggestion and pressed his
lips to the large boned, fleshy hand. Neither the hand nor a single
muscle of the count's face stirred. Once more Pierre looked
questioningly at Anna Mikhaylovna to see what he was to do next. Anna
Mikhaylovna with her eyes indicated a chair that stood beside the bed.
Pierre obediently sat down, his eyes asking if he were doing right. Anna
Mikhaylovna nodded approvingly. Again Pierre fell into the naively
symmetrical pose of an Egyptian statue, evidently distressed that his
stout and clumsy body took up so much room and doing his utmost to look
as small as possible. He looked at the count, who still gazed at the
spot where Pierre's face had been before he sat down. Anna Mikhaylovna
indicated by her attitude her consciousness of the pathetic importance
of these last moments of meeting between the father and son. This lasted
about two minutes, which to Pierre seemed an hour. Suddenly the broad
muscles and lines of the count's face began to twitch. The twitching
increased, the handsome mouth was drawn to one side (only now did Pierre
realize how near death his father was), and from that distorted mouth
issued an indistinct, hoarse sound. Anna Mikhaylovna looked attentively
at the sick man's eyes, trying to guess what he wanted; she pointed
first to Pierre, then to some drink, then named Prince Vasili in an
inquiring whisper, then pointed to the quilt. The eyes and face of the
sick man showed impatience. He made an effort to look at the servant who
stood constantly at the head of the bed.

"Wants to turn on the other side," whispered the servant, and got up to
turn the count's heavy body toward the wall.

Pierre rose to help him.

While the count was being turned over, one of his arms fell back
helplessly and he made a fruitless effort to pull it forward. Whether he
noticed the look of terror with which Pierre regarded that lifeless arm,
or whether some other thought flitted across his dying brain, at any
rate he glanced at the refractory arm, at Pierre's terror-stricken face,
and again at the arm, and on his face a feeble, piteous smile appeared,
quite out of keeping with his features, that seemed to deride his own
helplessness. At sight of this smile Pierre felt an unexpected quivering
in his breast and a tickling in his nose, and tears dimmed his eyes. The
sick man was turned on to his side with his face to the wall. He sighed.

"He is dozing," said Anna Mikhaylovna, observing that one of the
princesses was coming to take her turn at watching. "Let us go."

Pierre went out.




CHAPTER XXIV

There was now no one in the reception room except Prince Vasili and the
eldest princess, who were sitting under the portrait of Catherine the
Great and talking eagerly. As soon as they saw Pierre and his companion
they became silent, and Pierre thought he saw the princess hide
something as she whispered:

"I can't bear the sight of that woman."

"Catiche has had tea served in the small drawing room," said Prince
Vasili to Anna Mikhaylovna. "Go and take something, my poor Anna
Mikhaylovna, or you will not hold out."

To Pierre he said nothing, merely giving his arm a sympathetic squeeze
below the shoulder. Pierre went with Anna Mikhaylovna into the small
drawing room.

"There is nothing so refreshing after a sleepless night as a cup of this
delicious Russian tea," Lorrain was saying with an air of restrained
animation as he stood sipping tea from a delicate Chinese handleless cup
before a table on which tea and a cold supper were laid in the small
circular room. Around the table all who were at Count Bezukhov's house
that night had gathered to fortify themselves. Pierre well remembered
this small circular drawing room with its mirrors and little tables.
During balls given at the house Pierre, who did not know how to dance,
had liked sitting in this room to watch the ladies who, as they passed
through in their ball dresses with diamonds and pearls on their bare
shoulders, looked at themselves in the brilliantly lighted mirrors which
repeated their reflections several times. Now this same room was dimly
lighted by two candles. On one small table tea things and supper dishes
stood in disorder, and in the middle of the night a motley throng of
people sat there, not merrymaking, but somberly whispering, and
betraying by every word and movement that they none of them forgot what
was happening and what was about to happen in the bedroom. Pierre did
not eat anything though he would very much have liked to. He looked
inquiringly at his monitress and saw that she was again going on tiptoe
to the reception room where they had left Prince Vasili and the eldest
princess. Pierre concluded that this also was essential, and after a
short interval followed her. Anna Mikhaylovna was standing beside the
princess, and they were both speaking in excited whispers.

"Permit me, Princess, to know what is necessary and what is not
necessary," said the younger of the two speakers, evidently in the same
state of excitement as when she had slammed the door of her room.

"But, my dear princess," answered Anna Mikhaylovna blandly but
impressively, blocking the way to the bedroom and preventing the other
from passing, "won't this be too much for poor Uncle at a moment when he
needs repose? Worldly conversation at a moment when his soul is already
prepared..."

Prince Vasili was seated in an easy chair in his familiar attitude, with
one leg crossed high above the other. His cheeks, which were so flabby
that they looked heavier below, were twitching violently; but he wore
the air of a man little concerned in what the two ladies were saying.

"Come, my dear Anna Mikhaylovna, let Catiche do as she pleases. You know
how fond the count is of her."

"I don't even know what is in this paper," said the younger of the two
ladies, addressing Prince Vasili and pointing to an inlaid portfolio she
held in her hand. "All I know is that his real will is in his writing
table, and this is a paper he has forgotten...."

She tried to pass Anna Mikhaylovna, but the latter sprang so as to bar
her path.

"I know, my dear, kind princess," said Anna Mikhaylovna, seizing the
portfolio so firmly that it was plain she would not let go easily. "Dear
princess, I beg and implore you, have some pity on him! Je vous en
conjure..."

The princess did not reply. Their efforts in the struggle for the
portfolio were the only sounds audible, but it was evident that if the
princess did speak, her words would not be flattering to Anna
Mikhaylovna. Though the latter held on tenaciously, her voice lost none
of its honeyed firmness and softness.

"Pierre, my dear, come here. I think he will not be out of place in a
family consultation; is it not so, Prince?"

"Why don't you speak, cousin?" suddenly shrieked the princess so loud
that those in the drawing room heard her and were startled. "Why do you
remain silent when heaven knows who permits herself to interfere, making
a scene on the very threshold of a dying man's room? Intriguer!" she
hissed viciously, and tugged with all her might at the portfolio.

But Anna Mikhaylovna went forward a step or two to keep her hold on the
portfolio, and changed her grip.

Prince Vasili rose. "Oh!" said he with reproach and surprise, "this is
absurd! Come, let go I tell you."

The princess let go.

"And you too!"

But Anna Mikhaylovna did not obey him.

"Let go, I tell you! I will take the responsibility. I myself will go
and ask him, I!... does that satisfy you?"

"But, Prince," said Anna Mikhaylovna, "after such a solemn sacrament,
allow him a moment's peace! Here, Pierre, tell them your opinion," said
she, turning to the young man who, having come quite close, was gazing
with astonishment at the angry face of the princess which had lost all
dignity, and at the twitching cheeks of Prince Vasili.

"Remember that you will answer for the consequences," said Prince Vasili
severely. "You don't know what you are doing."

"Vile woman!" shouted the princess, darting unexpectedly at Anna
Mikhaylovna and snatching the portfolio from her.

Prince Vasili bent his head and spread out his hands.

At this moment that terrible door, which Pierre had watched so long and
which had always opened so quietly, burst noisily open and banged
against the wall, and the second of the three sisters rushed out
wringing her hands.

"What are you doing!" she cried vehemently. "He is dying and you leave
me alone with him!"

Her sister dropped the portfolio. Anna Mikhaylovna, stooping, quickly
caught up the object of contention and ran into the bedroom. The eldest
princess and Prince Vasili, recovering themselves, followed her. A few
minutes later the eldest sister came out with a pale hard face, again
biting her underlip. At sight of Pierre her expression showed an
irrepressible hatred.

"Yes, now you may be glad!" said she; "this is what you have been
waiting for." And bursting into tears she hid her face in her
handkerchief and rushed from the room.

Prince Vasili came next. He staggered to the sofa on which Pierre was
sitting and dropped onto it, covering his face with his hand. Pierre
noticed that he was pale and that his jaw quivered and shook as if in an
ague.

"Ah, my friend!" said he, taking Pierre by the elbow; and there was in
his voice a sincerity and weakness Pierre had never observed in it
before. "How often we sin, how much we deceive, and all for what? I am
near sixty, dear friend... I too... All will end in death, all! Death is
awful..." and he burst into tears.

Anna Mikhaylovna came out last. She approached Pierre with slow, quiet
steps.

"Pierre!" she said.

Pierre gave her an inquiring look. She kissed the young man on his
forehead, wetting him with her tears. Then after a pause she said:

"He is no more...."

Pierre looked at her over his spectacles.

"Come, I will go with you. Try to weep, nothing gives such relief as
tears."

She led him into the dark drawing room and Pierre was glad no one could
see his face. Anna Mikhaylovna left him, and when she returned he was
fast asleep with his head on his arm.

In the morning Anna Mikhaylovna said to Pierre:

"Yes, my dear, this is a great loss for us all, not to speak of you. But
God will support you: you are young, and are now, I hope, in command of
an immense fortune. The will has not yet been opened. I know you well
enough to be sure that this will not turn your head, but it imposes
duties on you, and you must be a man."

Pierre was silent.

"Perhaps later on I may tell you, my dear boy, that if I had not been
there, God only knows what would have happened! You know, Uncle promised
me only the day before yesterday not to forget Boris. But he had no
time. I hope, my dear friend, you will carry out your father's wish?"

Pierre understood nothing of all this and coloring shyly looked in
silence at Princess Anna Mikhaylovna. After her talk with Pierre, Anna
Mikhaylovna returned to the Rostovs' and went to bed. On waking in the
morning she told the Rostovs and all her acquaintances the details of
Count Bezukhov's death. She said the count had died as she would herself
wish to die, that his end was not only touching but edifying. As to the
last meeting between father and son, it was so touching that she could
not think of it without tears, and did not know which had behaved better
during those awful moments--the father who so remembered everything and
everybody at last and had spoken such pathetic words to the son, or
Pierre, whom it had been pitiful to see, so stricken was he with grief,
though he tried hard to hide it in order not to sadden his dying father.
"It is painful, but it does one good. It uplifts the soul to see such
men as the old count and his worthy son," said she. Of the behavior of
the eldest princess and Prince Vasili she spoke disapprovingly, but in
whispers and as a great secret.




CHAPTER XXV

At Bald Hills, Prince Nicholas Andreevich Bolkonski's estate, the
arrival of young Prince Andrew and his wife was daily expected, but this
expectation did not upset the regular routine of life in the old
prince's household. General in Chief Prince Nicholas Andreevich
(nicknamed in society, "the King of Prussia") ever since the Emperor
Paul had exiled him to his country estate had lived there continuously
with his daughter, Princess Mary, and her companion, Mademoiselle
Bourienne. Though in the new reign he was free to return to the
capitals, he still continued to live in the country, remarking that
anyone who wanted to see him could come the hundred miles from Moscow to
Bald Hills, while he himself needed no one and nothing. He used to say
that there are only two sources of human vice--idleness and
superstition, and only two virtues--activity and intelligence. He
himself undertook his daughter's education, and to develop these two
cardinal virtues in her gave her lessons in algebra and geometry till
she was twenty, and arranged her life so that her whole time was
occupied. He was himself always occupied: writing his memoirs, solving
problems in higher mathematics, turning snuffboxes on a lathe, working
in the garden, or superintending the building that was always going on
at his estate. As regularity is a prime condition facilitating activity,
regularity in his household was carried to the highest point of
exactitude. He always came to table under precisely the same conditions,
and not only at the same hour but at the same minute. With those about
him, from his daughter to his serfs, the prince was sharp and invariably
exacting, so that without being a hardhearted man he inspired such fear
and respect as few hardhearted men would have aroused. Although he was
in retirement and had now no influence in political affairs, every high
official appointed to the province in which the prince's estate lay
considered it his duty to visit him and waited in the lofty antechamber
just as the architect, gardener, or Princess Mary did, till the prince
appeared punctually to the appointed hour. Everyone sitting in this
antechamber experienced the same feeling of respect and even fear when
the enormously high study door opened and showed the figure of a rather
small old man, with powdered wig, small withered hands, and bushy gray
eyebrows which, when he frowned, sometimes hid the gleam of his shrewd,
youthfully glittering eyes.

On the morning of the day that the young couple were to arrive, Princess
Mary entered the antechamber as usual at the time appointed for the
morning greeting, crossing herself with trepidation and repeating a
silent prayer. Every morning she came in like that, and every morning
prayed that the daily interview might pass off well.

An old powdered manservant who was sitting in the antechamber rose
quietly and said in a whisper: "Please walk in."

Through the door came the regular hum of a lathe. The princess timidly
opened the door which moved noiselessly and easily. She paused at the
entrance. The prince was working at the lathe and after glancing round
continued his work.

The enormous study was full of things evidently in constant use. The
large table covered with books and plans, the tall glass-fronted
bookcases with keys in the locks, the high desk for writing while
standing up, on which lay an open exercise book, and the lathe with
tools laid ready to hand and shavings scattered around--all indicated
continuous, varied, and orderly activity. The motion of the small foot
shod in a Tartar boot embroidered with silver, and the firm pressure of
the lean sinewy hand, showed that the prince still possessed the
tenacious endurance and vigor of hardy old age. After a few more turns
of the lathe he removed his foot from the pedal, wiped his chisel,
dropped it into a leather pouch attached to the lathe, and, approaching
the table, summoned his daughter. He never gave his children a blessing,
so he simply held out his bristly cheek (as yet unshaven) and, regarding
her tenderly and attentively, said severely:

"Quite well? All right then, sit down." He took the exercise book
containing lessons in geometry written by himself and drew up a chair
with his foot.

"For tomorrow!" said he, quickly finding the page and making a scratch
from one paragraph to another with his hard nail.

The princess bent over the exercise book on the table.

"Wait a bit, here's a letter for you," said the old man suddenly, taking
a letter addressed in a woman's hand from a bag hanging above the table,
onto which he threw it.

At the sight of the letter red patches showed themselves on the
princess' face. She took it quickly and bent her head over it.

"From Heloise?" asked the prince with a cold smile that showed his still
sound, yellowish teeth.

"Yes, it's from Julie," replied the princess with a timid glance and a
timid smile.

"I'll let two more letters pass, but the third I'll read," said the
prince sternly; "I'm afraid you write much nonsense. I'll read the
third!"

"Read this if you like, Father," said the princess, blushing still more
and holding out the letter.

"The third, I said the third!" cried the prince abruptly, pushing the
letter away, and leaning his elbows on the table he drew toward him the
exercise book containing geometrical figures.

"Well, madam," he began, stooping over the book close to his daughter
and placing an arm on the back of the chair on which she sat, so that
she felt herself surrounded on all sides by the acrid scent of old age
and tobacco, which she had known so long. "Now, madam, these triangles
are equal; please note that the angle ABC..."

The princess looked in a scared way at her father's eyes glittering
close to her; the red patches on her face came and went, and it was
plain that she understood nothing and was so frightened that her fear
would prevent her understanding any of her father's further
explanations, however clear they might be. Whether it was the teacher's
fault or the pupil's, this same thing happened every day: the princess'
eyes grew dim, she could not see and could not hear anything, but was
only conscious of her stern father's withered face close to her, of his
breath and the smell of him, and could think only of how to get away
quickly to her own room to make out the problem in peace. The old man
was beside himself: moved the chair on which he was sitting noisily
backward and forward, made efforts to control himself and not become
vehement, but almost always did become vehement, scolded, and sometimes
flung the exercise book away.

The princess gave a wrong answer.

"Well now, isn't she a fool!" shouted the prince, pushing the book aside
and turning sharply away; but rising immediately, he paced up and down,
lightly touched his daughter's hair and sat down again.

He drew up his chair, and continued to explain.

"This won't do, Princess; it won't do," said he, when Princess Mary,
having taken and closed the exercise book with the next day's lesson,
was about to leave: "Mathematics are most important, madam! I don't want
to have you like our silly ladies. Get used to it and you'll like it,"
and he patted her cheek. "It will drive all the nonsense out of your
head."

She turned to go, but he stopped her with a gesture and took an uncut
book from the high desk.

"Here is some sort of Key to the Mysteries that your Heloise has sent
you. Religious! I don't interfere with anyone's belief... I have looked
at it. Take it. Well, now go. Go."

He patted her on the shoulder and himself closed the door after her.

Princess Mary went back to her room with the sad, scared expression that
rarely left her and which made her plain, sickly face yet plainer. She
sat down at her writing table, on which stood miniature portraits and
which was littered with books and papers. The princess was as untidy as
her father was tidy. She put down the geometry book and eagerly broke
the seal of her letter. It was from her most intimate friend from
childhood; that same Julie Karagina who had been at the Rostovs' name-
day party.

Julie wrote in French:

Dear and precious Friend, How terrible and frightful a thing is
separation! Though I tell myself that half my life and half my happiness
are wrapped up in you, and that in spite of the distance separating us
our hearts are united by indissoluble bonds, my heart rebels against
fate and in spite of the pleasures and distractions around me I cannot
overcome a certain secret sorrow that has been in my heart ever since we
parted. Why are we not together as we were last summer, in your big
study, on the blue sofa, the confidential sofa? Why cannot I now, as
three months ago, draw fresh moral strength from your look, so gentle,
calm, and penetrating, a look I loved so well and seem to see before me
as I write?

Having read thus far, Princess Mary sighed and glanced into the mirror
which stood on her right. It reflected a weak, ungraceful figure and
thin face. Her eyes, always sad, now looked with particular hopelessness
at her reflection in the glass. "She flatters me," thought the princess,
turning away and continuing to read. But Julie did not flatter her
friend, the princess' eyes--large, deep and luminous (it seemed as if at
times there radiated from them shafts of warm light)--were so beautiful
that very often in spite of the plainness of her face they gave her an
attraction more powerful than that of beauty. But the princess never saw
the beautiful expression of her own eyes--the look they had when she was
not thinking of herself. As with everyone, her face assumed a forced
unnatural expression as soon as she looked in a glass. She went on
reading:

All Moscow talks of nothing but war. One of my two brothers is already
abroad, the other is with the Guards, who are starting on their march to
the frontier. Our dear Emperor has left Petersburg and it is thought
intends to expose his precious person to the chances of war. God grant
that the Corsican monster who is destroying the peace of Europe may be
overthrown by the angel whom it has pleased the Almighty, in His
goodness, to give us as sovereign! To say nothing of my brothers, this
war has deprived me of one of the associations nearest my heart. I mean
young Nicholas Rostov, who with his enthusiasm could not bear to remain
inactive and has left the university to join the army. I will confess to
you, dear Mary, that in spite of his extreme youth his departure for the
army was a great grief to me. This young man, of whom I spoke to you
last summer, is so noble-minded and full of that real youthfulness which
one seldom finds nowadays among our old men of twenty and, particularly,
he is so frank and has so much heart. He is so pure and poetic that my
relations with him, transient as they were, have been one of the
sweetest comforts to my poor heart, which has already suffered so much.
Someday I will tell you about our parting and all that was said then.
That is still too fresh. Ah, dear friend, you are happy not to know
these poignant joys and sorrows. You are fortunate, for the latter are
generally the stronger! I know very well that Count Nicholas is too
young ever to be more to me than a friend, but this sweet friendship,
this poetic and pure intimacy, were what my heart needed. But enough of
this! The chief news, about which all Moscow gossips, is the death of
old Count Bezukhov, and his inheritance. Fancy! The three princesses
have received very little, Prince Vasili nothing, and it is Monsieur
Pierre who has inherited all the property and has besides been
recognized as legitimate; so that he is now Count Bezukhov and possessor
of the finest fortune in Russia. It is rumored that Prince Vasili played
a very despicable part in this affair and that he returned to Petersburg
quite crestfallen.

I confess I understand very little about all these matters of wills and
inheritance; but I do know that since this young man, whom we all used
to know as plain Monsieur Pierre, has become Count Bezukhov and the
owner of one of the largest fortunes in Russia, I am much amused to
watch the change in the tone and manners of the mammas burdened by
marriageable daughters, and of the young ladies themselves, toward him,
though, between you and me, he always seemed to me a poor sort of
fellow. As for the past two years people have amused themselves by
finding husbands for me (most of whom I don't even know), the
matchmaking chronicles of Moscow now speak of me as the future Countess
Bezukhova. But you will understand that I have no desire for the post. A
propos of marriages: do you know that a while ago that universal auntie
Anna Mikhaylovna told me, under the seal of strict secrecy, of a plan of
marriage for you. It is neither more nor less than with Prince Vasili's
son Anatole, whom they wish to reform by marrying him to someone rich
and distinguee, and it is on you that his relations' choice has fallen.
I don't know what you will think of it, but I consider it my duty to let
you know of it. He is said to be very handsome and a terrible
scapegrace. That is all I have been able to find out about him.

But enough of gossip. I am at the end of my second sheet of paper, and
Mamma has sent for me to go and dine at the Apraksins'. Read the
mystical book I am sending you; it has an enormous success here. Though
there are things in it difficult for the feeble human mind to grasp, it
is an admirable book which calms and elevates the soul. Adieu! Give my
respects to monsieur your father and my compliments to Mademoiselle
Bourienne. I embrace you as I love you.

JULIE

P.S. Let me have news of your brother and his charming little wife.

The princess pondered awhile with a thoughtful smile and her luminous
eyes lit up so that her face was entirely transformed. Then she suddenly
rose and with her heavy tread went up to the table. She took a sheet of
paper and her hand moved rapidly over it. This is the reply she wrote,
also in French:

Dear and precious Friend, Your letter of the 13th has given me great
delight. So you still love me, my romantic Julie? Separation, of which
you say so much that is bad, does not seem to have had its usual effect
on you. You complain of our separation. What then should I say, if I
dared complain, I who am deprived of all who are dear to me? Ah, if we
had not religion to console us life would be very sad. Why do you
suppose that I should look severely on your affection for that young
man? On such matters I am only severe with myself. I understand such
feelings in others, and if never having felt them I cannot approve of
them, neither do I condemn them. Only it seems to me that Christian
love, love of one's neighbor, love of one's enemy, is worthier, sweeter,
and better than the feelings which the beautiful eyes of a young man can
inspire in a romantic and loving young girl like yourself.

The news of Count Bezukhov's death reached us before your letter and my
father was much affected by it. He says the count was the last
representative but one of the great century, and that it is his own turn
now, but that he will do all he can to let his turn come as late as
possible. God preserve us from that terrible misfortune!

I cannot agree with you about Pierre, whom I knew as a child. He always
seemed to me to have an excellent heart, and that is the quality I value
most in people. As to his inheritance and the part played by Prince
Vasili, it is very sad for both. Ah, my dear friend, our divine
Saviour's words, that it is easier for a camel to go through the eye of
a needle than for a rich man to enter the Kingdom of God, are terribly
true. I pity Prince Vasili but am still more sorry for Pierre. So young,
and burdened with such riches--to what temptations he will be exposed!
If I were asked what I desire most on earth, it would be to be poorer
than the poorest beggar. A thousand thanks, dear friend, for the volume
you have sent me and which has such success in Moscow. Yet since you
tell me that among some good things it contains others which our weak
human understanding cannot grasp, it seems to me rather useless to spend
time in reading what is unintelligible and can therefore bear no fruit.
I never could understand the fondness some people have for confusing
their minds by dwelling on mystical books that merely awaken their
doubts and excite their imagination, giving them a bent for exaggeration
quite contrary to Christian simplicity. Let us rather read the Epistles
and Gospels. Let us not seek to penetrate what mysteries they contain;
for how can we, miserable sinners that we are, know the terrible and
holy secrets of Providence while we remain in this flesh which forms an
impenetrable veil between us and the Eternal? Let us rather confine
ourselves to studying those sublime rules which our divine Saviour has
left for our guidance here below. Let us try to conform to them and
follow them, and let us be persuaded that the less we let our feeble
human minds roam, the better we shall please God, who rejects all
knowledge that does not come from Him; and the less we seek to fathom
what He has been pleased to conceal from us, the sooner will He
vouchsafe its revelation to us through His divine Spirit.

My father has not spoken to me of a suitor, but has only told me that he
has received a letter and is expecting a visit from Prince Vasili. In
regard to this project of marriage for me, I will tell you, dear sweet
friend, that I look on marriage as a divine institution to which we must
conform. However painful it may be to me, should the Almighty lay the
duties of wife and mother upon me I shall try to perform them as
faithfully as I can, without disquieting myself by examining my feelings
toward him whom He may give me for husband.

I have had a letter from my brother, who announces his speedy arrival at
Bald Hills with his wife. This pleasure will be but a brief one,
however, for he will leave us again to take part in this unhappy war
into which we have been drawn, God knows how or why. Not only where you
are--at the heart of affairs and of the world--is the talk all of war,
even here amid fieldwork and the calm of nature--which townsfolk
consider characteristic of the country--rumors of war are heard and
painfully felt. My father talks of nothing but marches and
countermarches, things of which I understand nothing; and the day before
yesterday during my daily walk through the village I witnessed a
heartrending scene.... It was a convoy of conscripts enrolled from our
people and starting to join the army. You should have seen the state of
the mothers, wives, and children of the men who were going and should
have heard the sobs. It seems as though mankind has forgotten the laws
of its divine Saviour, Who preached love and forgiveness of injuries--
and that men attribute the greatest merit to skill in killing one
another.

Adieu, dear and kind friend; may our divine Saviour and His most Holy
Mother keep you in their holy and all-powerful care!

MARY

"Ah, you are sending off a letter, Princess? I have already dispatched
mine. I have written to my poor mother," said the smiling Mademoiselle
Bourienne rapidly, in her pleasant mellow tones and with guttural r's.
She brought into Princess Mary's strenuous, mournful, and gloomy world a
quite different atmosphere, careless, lighthearted, and self-satisfied.

"Princess, I must warn you," she added, lowering her voice and evidently
listening to herself with pleasure, and speaking with exaggerated
grasseyement, "the prince has been scolding Michael Ivanovich. He is in
a very bad humor, very morose. Be prepared."

"Ah, dear friend," replied Princess Mary, "I have asked you never to
warn me of the humor my father is in. I do not allow myself to judge him
and would not have others do so."

The princess glanced at her watch and, seeing that she was five minutes
late in starting her practice on the clavichord, went into the sitting
room with a look of alarm. Between twelve and two o'clock, as the day
was mapped out, the prince rested and the princess played the
clavichord.




CHAPTER XXVI

The gray-haired valet was sitting drowsily listening to the snoring of
the prince, who was in his large study. From the far side of the house
through the closed doors came the sound of difficult passages--twenty
times repeated--of a sonata by Dussek.

Just then a closed carriage and another with a hood drove up to the
porch. Prince Andrew got out of the carriage, helped his little wife to
alight, and let her pass into the house before him. Old Tikhon, wearing
a wig, put his head out of the door of the antechamber, reported in a
whisper that the prince was sleeping, and hastily closed the door.
Tikhon knew that neither the son's arrival nor any other unusual event
must be allowed to disturb the appointed order of the day. Prince Andrew
apparently knew this as well as Tikhon; he looked at his watch as if to
ascertain whether his father's habits had changed since he was at home
last, and, having assured himself that they had not, he turned to his
wife.

"He will get up in twenty minutes. Let us go across to Mary's room," he
said.

The little princess had grown stouter during this time, but her eyes and
her short, downy, smiling lip lifted when she began to speak just as
merrily and prettily as ever.

"Why, this is a palace!" she said to her husband, looking around with
the expression with which people compliment their host at a ball. "Let's
come, quick, quick!" And with a glance round, she smiled at Tikhon, at
her husband, and at the footman who accompanied them.

"Is that Mary practicing? Let's go quietly and take her by surprise."

Prince Andrew followed her with a courteous but sad expression.

"You've grown older, Tikhon," he said in passing to the old man, who
kissed his hand.

Before they reached the room from which the sounds of the clavichord
came, the pretty, fair haired Frenchwoman, Mademoiselle Bourienne,
rushed out apparently beside herself with delight.

"Ah! what joy for the princess!" exclaimed she: "At last! I must let her
know."

"No, no, please not... You are Mademoiselle Bourienne," said the little
princess, kissing her. "I know you already through my sister-in-law's
friendship for you. She was not expecting us?"

They went up to the door of the sitting room from which came the sound
of the oft-repeated passage of the sonata. Prince Andrew stopped and
made a grimace, as if expecting something unpleasant.

The little princess entered the room. The passage broke off in the
middle, a cry was heard, then Princess Mary's heavy tread and the sound
of kissing. When Prince Andrew went in the two princesses, who had only
met once before for a short time at his wedding, were in each other's
arms warmly pressing their lips to whatever place they happened to
touch. Mademoiselle Bourienne stood near them pressing her hand to her
heart, with a beatific smile and obviously equally ready to cry or to
laugh. Prince Andrew shrugged his shoulders and frowned, as lovers of
music do when they hear a false note. The two women let go of one
another, and then, as if afraid of being too late, seized each other's
hands, kissing them and pulling them away, and again began kissing each
other on the face, and then to Prince Andrew's surprise both began to
cry and kissed again. Mademoiselle Bourienne also began to cry. Prince
Andrew evidently felt ill at ease, but to the two women it seemed quite
natural that they should cry, and apparently it never entered their
heads that it could have been otherwise at this meeting.

"Ah! my dear!... Ah! Mary!" they suddenly exclaimed, and then laughed.
"I dreamed last night..."--"You were not expecting us?..." "Ah! Mary,
you have got thinner?..." "And you have grown stouter!..."

"I knew the princess at once," put in Mademoiselle Bourienne.

"And I had no idea!..." exclaimed Princess Mary. "Ah, Andrew, I did not
see you."

Prince Andrew and his sister, hand in hand, kissed one another, and he
told her she was still the same crybaby as ever. Princess Mary had
turned toward her brother, and through her tears the loving, warm,
gentle look of her large luminous eyes, very beautiful at that moment,
rested on Prince Andrew's face.

The little princess talked incessantly, her short, downy upper lip
continually and rapidly touching her rosy nether lip when necessary and
drawing up again next moment when her face broke into a smile of
glittering teeth and sparkling eyes. She told of an accident they had
had on the Spasski Hill which might have been serious for her in her
condition, and immediately after that informed them that she had left
all her clothes in Petersburg and that heaven knew what she would have
to dress in here; and that Andrew had quite changed, and that Kitty
Odyntsova had married an old man, and that there was a suitor for Mary,
a real one, but that they would talk of that later. Princess Mary was
still looking silently at her brother and her beautiful eyes were full
of love and sadness. It was plain that she was following a train of
thought independent of her sister-in-law's words. In the midst of a
description of the last Petersburg fete she addressed her brother:

"So you are really going to the war, Andrew?" she said sighing.

Lise sighed too.

"Yes, and even tomorrow," replied her brother.

"He is leaving me here, God knows why, when he might have had
promotion..."

Princess Mary did not listen to the end, but continuing her train of
thought turned to her sister-in-law with a tender glance at her figure.

"Is it certain?" she said.

The face of the little princess changed. She sighed and said: "Yes,
quite certain. Ah! it is very dreadful..."

Her lip descended. She brought her face close to her sister-in-law's and
unexpectedly again began to cry.

"She needs rest," said Prince Andrew with a frown. "Don't you, Lise?
Take her to your room and I'll go to Father. How is he? Just the same?"

"Yes, just the same. Though I don't know what your opinion will be,"
answered the princess joyfully.

"And are the hours the same? And the walks in the avenues? And the
lathe?" asked Prince Andrew with a scarcely perceptible smile which
showed that, in spite of all his love and respect for his father, he was
aware of his weaknesses.

"The hours are the same, and the lathe, and also the mathematics and my
geometry lessons," said Princess Mary gleefully, as if her lessons in
geometry were among the greatest delights of her life.

When the twenty minutes had elapsed and the time had come for the old
prince to get up, Tikhon came to call the young prince to his father.
The old man made a departure from his usual routine in honor of his
son's arrival: he gave orders to admit him to his apartments while he
dressed for dinner. The old prince always dressed in old-fashioned
style, wearing an antique coat and powdered hair; and when Prince Andrew
entered his father's dressing room (not with the contemptuous look and
manner he wore in drawing rooms, but with the animated face with which
he talked to Pierre), the old man was sitting on a large leather-covered
chair, wrapped in a powdering mantle, entrusting his head to Tikhon.

"Ah! here's the warrior! Wants to vanquish Buonaparte?" said the old
man, shaking his powdered head as much as the tail, which Tikhon was
holding fast to plait, would allow.

"You at least must tackle him properly, or else if he goes on like this
he'll soon have us, too, for his subjects! How are you?" And he held out
his cheek.

The old man was in a good temper after his nap before dinner. (He used
to say that a nap "after dinner was silver--before dinner, golden.") He
cast happy, sidelong glances at his son from under his thick, bushy
eyebrows. Prince Andrew went up and kissed his father on the spot
indicated to him. He made no reply on his father's favorite topic--
making fun of the military men of the day, and more particularly of
Bonaparte.

"Yes, Father, I have come to you and brought my wife who is pregnant,"
said Prince Andrew, following every movement of his father's face with
an eager and respectful look. "How is your health?"

"Only fools and rakes fall ill, my boy. You know me: I am busy from
morning till night and abstemious, so of course I am well."

"Thank God," said his son smiling.

"God has nothing to do with it! Well, go on," he continued, returning to
his hobby; "tell me how the Germans have taught you to fight Bonaparte
by this new science you call 'strategy.'"

Prince Andrew smiled.

"Give me time to collect my wits, Father," said he, with a smile that
showed that his father's foibles did not prevent his son from loving and
honoring him. "Why, I have not yet had time to settle down!"

"Nonsense, nonsense!" cried the old man, shaking his pigtail to see
whether it was firmly plaited, and grasping his by the hand. "The house
for your wife is ready. Princess Mary will take her there and show her
over, and they'll talk nineteen to the dozen. That's their woman's way!
I am glad to have her. Sit down and talk. About Mikhelson's army I
understand--Tolstoy's too... a simultaneous expedition.... But what's
the southern army to do? Prussia is neutral... I know that. What about
Austria?" said he, rising from his chair and pacing up and down the room
followed by Tikhon, who ran after him, handing him different articles of
clothing. "What of Sweden? How will they cross Pomerania?"

Prince Andrew, seeing that his father insisted, began--at first
reluctantly, but gradually with more and more animation, and from habit
changing unconsciously from Russian to French as he went on--to explain
the plan of operation for the coming campaign. He explained how an army,
ninety thousand strong, was to threaten Prussia so as to bring her out
of her neutrality and draw her into the war; how part of that army was
to join some Swedish forces at Stralsund; how two hundred and twenty
thousand Austrians, with a hundred thousand Russians, were to operate in
Italy and on the Rhine; how fifty thousand Russians and as many English
were to land at Naples, and how a total force of five hundred thousand
men was to attack the French from different sides. The old prince did
not evince the least interest during this explanation, but as if he were
not listening to it continued to dress while walking about, and three
times unexpectedly interrupted. Once he stopped it by shouting: "The
white one, the white one!"

This meant that Tikhon was not handing him the waistcoat he wanted.
Another time he interrupted, saying:

"And will she soon be confined?" and shaking his head reproachfully
said: "That's bad! Go on, go on."

The third interruption came when Prince Andrew was finishing his
description. The old man began to sing, in the cracked voice of old age:
"Malbrook s'en va-t-en guerre. Dieu sait quand reviendra." *


* "Marlborough is going to the wars; God knows when he'll return."

His son only smiled.

"I don't say it's a plan I approve of," said the son; "I am only telling
you what it is. Napoleon has also formed his plan by now, not worse than
this one."

"Well, you've told me nothing new," and the old man repeated,
meditatively and rapidly:

"Dieu sait quand reviendra. Go to the dining room."




CHAPTER XXVII

At the appointed hour the prince, powdered and shaven, entered the
dining room where his daughter-in-law, Princess Mary, and Mademoiselle
Bourienne were already awaiting him together with his architect, who by
a strange caprice of his employer's was admitted to table though the
position of that insignificant individual was such as could certainly
not have caused him to expect that honor. The prince, who generally kept
very strictly to social distinctions and rarely admitted even important
government officials to his table, had unexpectedly selected Michael
Ivanovich (who always went into a corner to blow his nose on his checked
handkerchief) to illustrate the theory that all men are equals, and had
more than once impressed on his daughter that Michael Ivanovich was "not
a whit worse than you or I." At dinner the prince usually spoke to the
taciturn Michael Ivanovich more often than to anyone else.

In the dining room, which like all the rooms in the house was
exceedingly lofty, the members of the household and the footmen--one
behind each chair--stood waiting for the prince to enter. The head
butler, napkin on arm, was scanning the setting of the table, making
signs to the footmen, and anxiously glancing from the clock to the door
by which the prince was to enter. Prince Andrew was looking at a large
gilt frame, new to him, containing the genealogical tree of the Princes
Bolkonski, opposite which hung another such frame with a badly painted
portrait (evidently by the hand of the artist belonging to the estate)
of a ruling prince, in a crown--an alleged descendant of Rurik and
ancestor of the Bolkonskis. Prince Andrew, looking again at that
genealogical tree, shook his head, laughing as a man laughs who looks at
a portrait so characteristic of the original as to be amusing.

"How thoroughly like him that is!" he said to Princess Mary, who had
come up to him.

Princess Mary looked at her brother in surprise. She did not understand
what he was laughing at. Everything her father did inspired her with
reverence and was beyond question.

"Everyone has his Achilles' heel," continued Prince Andrew. "Fancy, with
his powerful mind, indulging in such nonsense!"

Princess Mary could not understand the boldness of her brother's
criticism and was about to reply, when the expected footsteps were heard
coming from the study. The prince walked in quickly and jauntily as was
his wont, as if intentionally contrasting the briskness of his manners
with the strict formality of his house. At that moment the great clock
struck two and another with a shrill tone joined in from the drawing
room. The prince stood still; his lively glittering eyes from under
their thick, bushy eyebrows sternly scanned all present and rested on
the little princess. She felt, as courtiers do when the Tsar enters, the
sensation of fear and respect which the old man inspired in all around
him. He stroked her hair and then patted her awkwardly on the back of
her neck.

"I'm glad, glad, to see you," he said, looking attentively into her
eyes, and then quickly went to his place and sat down. "Sit down, sit
down! Sit down, Michael Ianovich!"

He indicated a place beside him to his daughter-in-law. A footman moved
the chair for her.

"Ho, ho!" said the old man, casting his eyes on her rounded figure.
"You've been in a hurry. That's bad!"

He laughed in his usual dry, cold, unpleasant way, with his lips only
and not with his eyes.

"You must walk, walk as much as possible, as much as possible," he said.

The little princess did not, or did not wish to, hear his words. She was
silent and seemed confused. The prince asked her about her father, and
she began to smile and talk. He asked about mutual acquaintances, and
she became still more animated and chattered away giving him greetings
from various people and retelling the town gossip.

"Countess Apraksina, poor thing, has lost her husband and she has cried
her eyes out," she said, growing more and more lively.

As she became animated the prince looked at her more and more sternly,
and suddenly, as if he had studied her sufficiently and had formed a
definite idea of her, he turned away and addressed Michael Ivanovich.

"Well, Michael Ivanovich, our Bonaparte will be having a bad time of it.
Prince Andrew" (he always spoke thus of his son) "has been telling me
what forces are being collected against him! While you and I never
thought much of him."

Michael Ivanovich did not at all know when "you and I" had said such
things about Bonaparte, but understanding that he was wanted as a peg on
which to hang the prince's favorite topic, he looked inquiringly at the
young prince, wondering what would follow.

"He is a great tactician!" said the prince to his son, pointing to the
architect.

And the conversation again turned on the war, on Bonaparte, and the
generals and statesmen of the day. The old prince seemed convinced not
only that all the men of the day were mere babies who did not know the A
B C of war or of politics, and that Bonaparte was an insignificant
little Frenchy, successful only because there were no longer any
Potemkins or Suvorovs left to oppose him; but he was also convinced that
there were no political difficulties in Europe and no real war, but only
a sort of puppet show at which the men of the day were playing,
pretending to do something real. Prince Andrew gaily bore with his
father's ridicule of the new men, and drew him on and listened to him
with evident pleasure.

"The past always seems good," said he, "but did not Suvorov himself fall
into a trap Moreau set him, and from which he did not know how to
escape?"

"Who told you that? Who?" cried the prince. "Suvorov!" And he jerked
away his plate, which Tikhon briskly caught. "Suvorov!... Consider,
Prince Andrew. Two... Frederick and Suvorov; Moreau!... Moreau would
have been a prisoner if Suvorov had had a free hand; but he had the
Hofs-kriegs-wurst-schnapps-Rath on his hands. It would have puzzled the
devil himself! When you get there you'll find out what those Hofs-
kriegs-wurst-Raths are! Suvorov couldn't manage them so what chance has
Michael Kutuzov? No, my dear boy," he continued, "you and your generals
won't get on against Buonaparte; you'll have to call in the French, so
that birds of a feather may fight together. The German, Pahlen, has been
sent to New York in America, to fetch the Frenchman, Moreau," he said,
alluding to the invitation made that year to Moreau to enter the Russian
service.... "Wonderful!... Were the Potemkins, Suvorovs, and Orlovs
Germans? No, lad, either you fellows have all lost your wits, or I have
outlived mine. May God help you, but we'll see what will happen.
Buonaparte has become a great commander among them! Hm!..."

"I don't at all say that all the plans are good," said Prince Andrew, "I
am only surprised at your opinion of Bonaparte. You may laugh as much as
you like, but all the same Bonaparte is a great general!"

"Michael Ivanovich!" cried the old prince to the architect who, busy
with his roast meat, hoped he had been forgotten: "Didn't I tell you
Buonaparte was a great tactician? Here, he says the same thing."

"To be sure, your excellency," replied the architect.

The prince again laughed his frigid laugh.

"Buonaparte was born with a silver spoon in his mouth. He has got
splendid soldiers. Besides he began by attacking Germans. And only
idlers have failed to beat the Germans. Since the world began everybody
has beaten the Germans. They beat no one--except one another. He made
his reputation fighting them."

And the prince began explaining all the blunders which, according to
him, Bonaparte had made in his campaigns and even in politics. His son
made no rejoinder, but it was evident that whatever arguments were
presented he was as little able as his father to change his opinion. He
listened, refraining from a reply, and involuntarily wondered how this
old man, living alone in the country for so many years, could know and
discuss so minutely and acutely all the recent European military and
political events.

"You think I'm an old man and don't understand the present state of
affairs?" concluded his father. "But it troubles me. I don't sleep at
night. Come now, where has this great commander of yours shown his
skill?" he concluded.

"That would take too long to tell," answered the son.

"Well, then go to your Buonaparte! Mademoiselle Bourienne, here's
another admirer of that powder-monkey emperor of yours," he exclaimed in
excellent French.

"You know, Prince, I am not a Bonapartist!"

"Dieu sait quand reviendra..." hummed the prince out of tune and, with a
laugh still more so, he quitted the table.

The little princess during the whole discussion and the rest of the
dinner sat silent, glancing with a frightened look now at her father-in-
law and now at Princess Mary. When they left the table she took her
sister-in-law's arm and drew her into another room.

"What a clever man your father is," said she; "perhaps that is why I am
afraid of him."

"Oh, he is so kind!" answered Princess Mary.




CHAPTER XXVIII

Prince Andrew was to leave next evening. The old prince, not altering
his routine, retired as usual after dinner. The little princess was in
her sister-in-law's room. Prince Andrew in a traveling coat without
epaulettes had been packing with his valet in the rooms assigned to him.
After inspecting the carriage himself and seeing the trunks put in, he
ordered the horses to be harnessed. Only those things he always kept
with him remained in his room; a small box, a large canteen fitted with
silver plate, two Turkish pistols and a saber--a present from his father
who had brought it from the siege of Ochakov. All these traveling
effects of Prince Andrew's were in very good order: new, clean, and in
cloth covers carefully tied with tapes.

When starting on a journey or changing their mode of life, men capable
of reflection are generally in a serious frame of mind. At such moments
one reviews the past and plans for the future. Prince Andrew's face
looked very thoughtful and tender. With his hands behind him he paced
briskly from corner to corner of the room, looking straight before him
and thoughtfully shaking his head. Did he fear going to the war, or was
he sad at leaving his wife?--perhaps both, but evidently he did not wish
to be seen in that mood, for hearing footsteps in the passage he
hurriedly unclasped his hands, stopped at a table as if tying the cover
of the small box, and assumed his usual tranquil and impenetrable
expression. It was the heavy tread of Princess Mary that he heard.

"I hear you have given orders to harness," she cried, panting (she had
apparently been running), "and I did so wish to have another talk with
you alone! God knows how long we may again be parted. You are not angry
with me for coming? You have changed so, Andrusha," she added, as if to
explain such a question.

She smiled as she uttered his pet name, "Andrusha." It was obviously
strange to her to think that this stern handsome man should be Andrusha-
-the slender mischievous boy who had been her playfellow in childhood.

"And where is Lise?" he asked, answering her question only by a smile.

"She was so tired that she has fallen asleep on the sofa in my room. Oh,
Andrew! What a treasure of a wife you have," said she, sitting down on
the sofa, facing her brother. "She is quite a child: such a dear, merry
child. I have grown so fond of her."

Prince Andrew was silent, but the princess noticed the ironical and
contemptuous look that showed itself on his face.

"One must be indulgent to little weaknesses; who is free from them,
Andrew? Don't forget that she has grown up and been educated in society,
and so her position now is not a rosy one. We should enter into
everyone's situation. Tout comprendre, c'est tout pardonner. * Think
what it must be for her, poor thing, after what she has been used to, to
be parted from her husband and be left alone in the country, in her
condition! It's very hard."


* To understand all is to forgive all.

Prince Andrew smiled as he looked at his sister, as we smile at those we
think we thoroughly understand.

"You live in the country and don't think the life terrible," he replied.

"I... that's different. Why speak of me? I don't want any other life,
and can't, for I know no other. But think, Andrew: for a young society
woman to be buried in the country during the best years of her life, all
alone--for Papa is always busy, and I... well, you know what poor
resources I have for entertaining a woman used to the best society.
There is only Mademoiselle Bourienne...."

"I don't like your Mademoiselle Bourienne at all," said Prince Andrew.

"No? She is very nice and kind and, above all, she's much to be pitied.
She has no one, no one. To tell the truth, I don't need her, and she's
even in my way. You know I always was a savage, and now am even more so.
I like being alone.... Father likes her very much. She and Michael
Ivanovich are the two people to whom he is always gentle and kind,
because he has been a benefactor to them both. As Sterne says: 'We don't
love people so much for the good they have done us, as for the good we
have done them.' Father took her when she was homeless after losing her
own father. She is very good-natured, and my father likes her way of
reading. She reads to him in the evenings and reads splendidly."

"To be quite frank, Mary, I expect Father's character sometimes makes
things trying for you, doesn't it?" Prince Andrew asked suddenly.

Princess Mary was first surprised and then aghast at this question.

"For me? For me?... Trying for me!..." said she.

"He always was rather harsh; and now I should think he's getting very
trying," said Prince Andrew, apparently speaking lightly of their father
in order to puzzle or test his sister.

"You are good in every way, Andrew, but you have a kind of intellectual
pride," said the princess, following the train of her own thoughts
rather than the trend of the conversation--"and that's a great sin. How
can one judge Father? But even if one might, what feeling except
veneration could such a man as my father evoke? And I am so contented
and happy with him. I only wish you were all as happy as I am."

Her brother shook his head incredulously.

"The only thing that is hard for me... I will tell you the truth,
Andrew... is Father's way of treating religious subjects. I don't
understand how a man of his immense intellect can fail to see what is as
clear as day, and can go so far astray. That is the only thing that
makes me unhappy. But even in this I can see lately a shade of
improvement. His satire has been less bitter of late, and there was a
monk he received and had a long talk with."

"Ah! my dear, I am afraid you and your monk are wasting your powder,"
said Prince Andrew banteringly yet tenderly.

"Ah! mon ami, I only pray, and hope that God will hear me. Andrew..."
she said timidly after a moment's silence, "I have a great favor to ask
of you."

"What is it, dear?"

"No--promise that you will not refuse! It will give you no trouble and
is nothing unworthy of you, but it will comfort me. Promise,
Andrusha!..." said she, putting her hand in her reticule but not yet
taking out what she was holding inside it, as if what she held were the
subject of her request and must not be shown before the request was
granted.

She looked timidly at her brother.

"Even if it were a great deal of trouble..." answered Prince Andrew, as
if guessing what it was about.

"Think what you please! I know you are just like Father. Think as you
please, but do this for my sake! Please do! Father's father, our
grandfather, wore it in all his wars." (She still did not take out what
she was holding in her reticule.) "So you promise?"

"Of course. What is it?"

"Andrew, I bless you with this icon and you must promise me you will
never take it off. Do you promise?"

"If it does not weigh a hundredweight and won't break my neck... To
please you..." said Prince Andrew. But immediately, noticing the pained
expression his joke had brought to his sister's face, he repented and
added: "I am glad; really, dear, I am very glad."

"Against your will He will save and have mercy on you and bring you to
Himself, for in Him alone is truth and peace," said she in a voice
trembling with emotion, solemnly holding up in both hands before her
brother a small, oval, antique, dark-faced icon of the Saviour in a gold
setting, on a finely wrought silver chain.

She crossed herself, kissed the icon, and handed it to Andrew.

"Please, Andrew, for my sake!..."

Rays of gentle light shone from her large, timid eyes. Those eyes lit up
the whole of her thin, sickly face and made it beautiful. Her brother
would have taken the icon, but she stopped him. Andrew understood,
crossed himself and kissed the icon. There was a look of tenderness, for
he was touched, but also a gleam of irony on his face.

"Thank you, my dear." She kissed him on the forehead and sat down again
on the sofa. They were silent for a while.

"As I was saying to you, Andrew, be kind and generous as you always used
to be. Don't judge Lise harshly," she began. "She is so sweet, so good-
natured, and her position now is a very hard one."

"I do not think I have complained of my wife to you, Masha, or blamed
her. Why do you say all this to me?"

Red patches appeared on Princess Mary's face and she was silent as if
she felt guilty.

"I have said nothing to you, but you have already been talked to. And I
am sorry for that," he went on.

The patches grew deeper on her forehead, neck, and cheeks. She tried to
say something but could not. Her brother had guessed right: the little
princess had been crying after dinner and had spoken of her forebodings
about her confinement, and how she dreaded it, and had complained of her
fate, her father-in-law, and her husband. After crying she had fallen
asleep. Prince Andrew felt sorry for his sister.

"Know this, Masha: I can't reproach, have not reproached, and never
shall reproach my wife with anything, and I cannot reproach myself with
anything in regard to her; and that always will be so in whatever
circumstances I may be placed. But if you want to know the truth... if
you want to know whether I am happy? No! Is she happy? No! But why this
is so I don't know..."

As he said this he rose, went to his sister, and, stooping, kissed her
forehead. His fine eyes lit up with a thoughtful, kindly, and
unaccustomed brightness, but he was looking not at his sister but over
her head toward the darkness of the open doorway.

"Let us go to her, I must say good-by. Or--go and wake and I'll come in
a moment. Petrushka!" he called to his valet: "Come here, take these
away. Put this on the seat and this to the right."

Princess Mary rose and moved to the door, then stopped and said:
"Andrew, if you had faith you would have turned to God and asked Him to
give you the love you do not feel, and your prayer would have been
answered."

"Well, may be!" said Prince Andrew. "Go, Masha; I'll come immediately."

On the way to his sister's room, in the passage which connected one wing
with the other, Prince Andrew met Mademoiselle Bourienne smiling
sweetly. It was the third time that day that, with an ecstatic and
artless smile, she had met him in secluded passages.

"Oh! I thought you were in your room," she said, for some reason
blushing and dropping her eyes.

Prince Andrew looked sternly at her and an expression of anger suddenly
came over his face. He said nothing to her but looked at her forehead
and hair, without looking at her eyes, with such contempt that the
Frenchwoman blushed and went away without a word. When he reached his
sister's room his wife was already awake and her merry voice, hurrying
one word after another, came through the open door. She was speaking as
usual in French, and as if after long self-restraint she wished to make
up for lost time.

"No, but imagine the old Countess Zubova, with false curls and her mouth
full of false teeth, as if she were trying to cheat old age.... Ha, ha,
ha! Mary!"

This very sentence about Countess Zubova and this same laugh Prince
Andrew had already heard from his wife in the presence of others some
five times. He entered the room softly. The little princess, plump and
rosy, was sitting in an easy chair with her work in her hands, talking
incessantly, repeating Petersburg reminiscences and even phrases. Prince
Andrew came up, stroked her hair, and asked if she felt rested after
their journey. She answered him and continued her chatter.

The coach with six horses was waiting at the porch. It was an autumn
night, so dark that the coachman could not see the carriage pole.
Servants with lanterns were bustling about in the porch. The immense
house was brilliant with lights shining through its lofty windows. The
domestic serfs were crowding in the hall, waiting to bid good-by to the
young prince. The members of the household were all gathered in the
reception hall: Michael Ivanovich, Mademoiselle Bourienne, Princess
Mary, and the little princess. Prince Andrew had been called to his
father's study as the latter wished to say good-by to him alone. All
were waiting for them to come out.

When Prince Andrew entered the study the old man in his old-age
spectacles and white dressing gown, in which he received no one but his
son, sat at the table writing. He glanced round.

"Going?" And he went on writing.

"I've come to say good-by."

"Kiss me here," and he touched his cheek: "Thanks, thanks!"

"What do you thank me for?"

"For not dilly-dallying and not hanging to a woman's apron strings. The
Service before everything. Thanks, thanks!" And he went on writing, so
that his quill spluttered and squeaked. "If you have anything to say,
say it. These two things can be done together," he added.

"About my wife... I am ashamed as it is to leave her on your hands..."

"Why talk nonsense? Say what you want."

"When her confinement is due, send to Moscow for an accoucheur.... Let
him be here...."

The old prince stopped writing and, as if not understanding, fixed his
stern eyes on his son.

"I know that no one can help if nature does not do her work," said
Prince Andrew, evidently confused. "I know that out of a million cases
only one goes wrong, but it is her fancy and mine. They have been
telling her things. She has had a dream and is frightened."

"Hm... Hm..." muttered the old prince to himself, finishing what he was
writing. "I'll do it."

He signed with a flourish and suddenly turning to his son began to
laugh.

"It's a bad business, eh?"

"What is bad, Father?"

"The wife!" said the old prince, briefly and significantly.

"I don't understand!" said Prince Andrew.

"No, it can't be helped, lad," said the prince. "They're all like that;
one can't unmarry. Don't be afraid; I won't tell anyone, but you know it
yourself."

He seized his son by the hand with small bony fingers, shook it, looked
straight into his son's face with keen eyes which seemed to see through
him, and again laughed his frigid laugh.

The son sighed, thus admitting that his father had understood him. The
old man continued to fold and seal his letter, snatching up and throwing
down the wax, the seal, and the paper, with his accustomed rapidity.

"What's to be done? She's pretty! I will do everything. Make your mind
easy," said he in abrupt sentences while sealing his letter.

Andrew did not speak; he was both pleased and displeased that his father
understood him. The old man got up and gave the letter to his son.

"Listen!" said he; "don't worry about your wife: what can be done shall
be. Now listen! Give this letter to Michael Ilarionovich. * I have
written that he should make use of you in proper places and not keep you
long as an adjutant: a bad position! Tell him I remember and like him.
Write and tell me how he receives you. If he is all right--serve him.
Nicholas Bolkonski's son need not serve under anyone if he is in
disfavor. Now come here."


*Kutuzov.

He spoke so rapidly that he did not finish half his words, but his son
was accustomed to understand him. He led him to the desk, raised the
lid, drew out a drawer, and took out an exercise book filled with his
bold, tall, close handwriting.

"I shall probably die before you. So remember, these are my memoirs;
hand them to the Emperor after my death. Now here is a Lombard bond and
a letter; it is a premium for the man who writes a history of Suvorov's
wars. Send it to the Academy. Here are some jottings for you to read
when I am gone. You will find them useful."

Andrew did not tell his father that he would no doubt live a long time
yet. He felt that he must not say it.

"I will do it all, Father," he said.

"Well, now, good-by!" He gave his son his hand to kiss, and embraced
him. "Remember this, Prince Andrew, if they kill you it will hurt me,
your old father..." he paused unexpectedly, and then in a querulous
voice suddenly shrieked: "but if I hear that you have not behaved like a
son of Nicholas Bolkonski, I shall be ashamed!"

"You need not have said that to me, Father," said the son with a smile.

The old man was silent.

"I also wanted to ask you," continued Prince Andrew, "if I'm killed and
if I have a son, do not let him be taken away from you--as I said
yesterday... let him grow up with you.... Please."

"Not let the wife have him?" said the old man, and laughed.

They stood silent, facing one another. The old man's sharp eyes were
fixed straight on his son's. Something twitched in the lower part of the
old prince's face.

"We've said good-by. Go!" he suddenly shouted in a loud, angry voice,
opening his door.

"What is it? What?" asked both princesses when they saw for a moment at
the door Prince Andrew and the figure of the old man in a white dressing
gown, spectacled and wigless, shouting in an angry voice.

Prince Andrew sighed and made no reply.

"Well!" he said, turning to his wife.

And this "Well!" sounded coldly ironic, as if he were saying,: "Now go
through your performance."

"Andrew, already!" said the little princess, turning pale and looking
with dismay at her husband.

He embraced her. She screamed and fell unconscious on his shoulder.

He cautiously released the shoulder she leaned on, looked into her face,
and carefully placed her in an easy chair.

"Adieu, Mary," said he gently to his sister, taking her by the hand and
kissing her, and then he left the room with rapid steps.

The little princess lay in the armchair, Mademoiselle Bourienne chafing
her temples. Princess Mary, supporting her sister-in-law, still looked
with her beautiful eyes full of tears at the door through which Prince
Andrew had gone and made the sign of the cross in his direction. From
the study, like pistol shots, came the frequent sound of the old man
angrily blowing his nose. Hardly had Prince Andrew gone when the study
door opened quickly and the stern figure of the old man in the white
dressing gown looked out.

"Gone? That's all right!" said he; and looking angrily at the
unconscious little princess, he shook his head reprovingly and slammed
the door.

BOOK TWO: 1805




CHAPTER I

In October, 1805, a Russian army was occupying the villages and towns of
the Archduchy of Austria, and yet other regiments freshly arriving from
Russia were settling near the fortress of Braunau and burdening the
inhabitants on whom they were quartered. Braunau was the headquarters of
the commander-in-chief, Kutuzov.

On October 11, 1805, one of the infantry regiments that had just reached
Braunau had halted half a mile from the town, waiting to be inspected by
the commander-in-chief. Despite the un-Russian appearance of the
locality and surroundings--fruit gardens, stone fences, tiled roofs, and
hills in the distance--and despite the fact that the inhabitants (who
gazed with curiosity at the soldiers) were not Russians, the regiment
had just the appearance of any Russian regiment preparing for an
inspection anywhere in the heart of Russia.

On the evening of the last day's march an order had been received that
the commander-in-chief would inspect the regiment on the march. Though
the words of the order were not clear to the regimental commander, and
the question arose whether the troops were to be in marching order or
not, it was decided at a consultation between the battalion commanders
to present the regiment in parade order, on the principle that it is
always better to "bow too low than not bow low enough." So the soldiers,
after a twenty-mile march, were kept mending and cleaning all night long
without closing their eyes, while the adjutants and company commanders
calculated and reckoned, and by morning the regiment--instead of the
straggling, disorderly crowd it had been on its last march the day
before--presented a well-ordered array of two thousand men each of whom
knew his place and his duty, had every button and every strap in place,
and shone with cleanliness. And not only externally was all in order,
but had it pleased the commander-in-chief to look under the uniforms he
would have found on every man a clean shirt, and in every knapsack the
appointed number of articles, "awl, soap, and all," as the soldiers say.
There was only one circumstance concerning which no one could be at
ease. It was the state of the soldiers' boots. More than half the men's
boots were in holes. But this defect was not due to any fault of the
regimental commander, for in spite of repeated demands boots had not
been issued by the Austrian commissariat, and the regiment had marched
some seven hundred miles.

The commander of the regiment was an elderly, choleric, stout, and
thick-set general with grizzled eyebrows and whiskers, and wider from
chest to back than across the shoulders. He had on a brand-new uniform
showing the creases where it had been folded and thick gold epaulettes
which seemed to stand rather than lie down on his massive shoulders. He
had the air of a man happily performing one of the most solemn duties of
his life. He walked about in front of the line and at every step pulled
himself up, slightly arching his back. It was plain that the commander
admired his regiment, rejoiced in it, and that his whole mind was
engrossed by it, yet his strut seemed to indicate that, besides military
matters, social interests and the fair sex occupied no small part of his
thoughts.

"Well, Michael Mitrich, sir?" he said, addressing one of the battalion
commanders who smilingly pressed forward (it was plain that they both
felt happy). "We had our hands full last night. However, I think the
regiment is not a bad one, eh?"

The battalion commander perceived the jovial irony and laughed.

"It would not be turned off the field even on the Tsaritsin Meadow."

"What?" asked the commander.

At that moment, on the road from the town on which signalers had been
posted, two men appeared on horse back. They were an aide-de-camp
followed by a Cossack.

The aide-de-camp was sent to confirm the order which had not been
clearly worded the day before, namely, that the commander-in-chief
wished to see the regiment just in the state in which it had been on the
march: in their greatcoats, and packs, and without any preparation
whatever.

A member of the Hofkriegsrath from Vienna had come to Kutuzov the day
before with proposals and demands for him to join up with the army of
the Archduke Ferdinand and Mack, and Kutuzov, not considering this
junction advisable, meant, among other arguments in support of his view,
to show the Austrian general the wretched state in which the troops
arrived from Russia. With this object he intended to meet the regiment;
so the worse the condition it was in, the better pleased the commander-
in-chief would be. Though the aide-de-camp did not know these
circumstances, he nevertheless delivered the definite order that the men
should be in their greatcoats and in marching order, and that the
commander-in-chief would otherwise be dissatisfied. On hearing this the
regimental commander hung his head, silently shrugged his shoulders, and
spread out his arms with a choleric gesture.

"A fine mess we've made of it!" he remarked.

"There now! Didn't I tell you, Michael Mitrich, that if it was said 'on
the march' it meant in greatcoats?" said he reproachfully to the
battalion commander. "Oh, my God!" he added, stepping resolutely
forward. "Company commanders!" he shouted in a voice accustomed to
command. "Sergeants major!... How soon will he be here?" he asked the
aide-de-camp with a respectful politeness evidently relating to the
personage he was referring to.

"In an hour's time, I should say."

"Shall we have time to change clothes?"

"I don't know, General...."

The regimental commander, going up to the line himself, ordered the
soldiers to change into their greatcoats. The company commanders ran off
to their companies, the sergeants major began bustling (the greatcoats
were not in very good condition), and instantly the squares that had up
to then been in regular order and silent began to sway and stretch and
hum with voices. On all sides soldiers were running to and fro, throwing
up their knapsacks with a jerk of their shoulders and pulling the straps
over their heads, unstrapping their overcoats and drawing the sleeves on
with upraised arms.

In half an hour all was again in order, only the squares had become gray
instead of black. The regimental commander walked with his jerky steps
to the front of the regiment and examined it from a distance.

"Whatever is this? This!" he shouted and stood still. "Commander of the
third company!"

"Commander of the third company wanted by the general!... commander to
the general... third company to the commander." The words passed along
the lines and an adjutant ran to look for the missing officer.

When the eager but misrepeated words had reached their destination in a
cry of: "The general to the third company," the missing officer appeared
from behind his company and, though he was a middle-aged man and not in
the habit of running, trotted awkwardly stumbling on his toes toward the
general. The captain's face showed the uneasiness of a schoolboy who is
told to repeat a lesson he has not learned. Spots appeared on his nose,
the redness of which was evidently due to intemperance, and his mouth
twitched nervously. The general looked the captain up and down as he
came up panting, slackening his pace as he approached.

"You will soon be dressing your men in petticoats! What is this?"
shouted the regimental commander, thrusting forward his jaw and pointing
at a soldier in the ranks of the third company in a greatcoat of bluish
cloth, which contrasted with the others. "What have you been after? The
commander in chief is expected and you leave your place? Eh? I'll teach
you to dress the men in fancy coats for a parade.... Eh...?"

The commander of the company, with his eyes fixed on his superior,
pressed two fingers more and more rigidly to his cap, as if in this
pressure lay his only hope of salvation.

"Well, why don't you speak? Whom have you got there dressed up as a
Hungarian?" said the commander with an austere gibe.

"Your excellency..."

"Well, your excellency, what? Your excellency! But what about your
excellency?... nobody knows."

"Your excellency, it's the officer Dolokhov, who has been reduced to the
ranks," said the captain softly.

"Well? Has he been degraded into a field marshal, or into a soldier? If
a soldier, he should be dressed in regulation uniform like the others."

"Your excellency, you gave him leave yourself, on the march."

"Gave him leave? Leave? That's just like you young men," said the
regimental commander cooling down a little. "Leave indeed.... One says a
word to you and you... What?" he added with renewed irritation, "I beg
you to dress your men decently."

And the commander, turning to look at the adjutant, directed his jerky
steps down the line. He was evidently pleased at his own display of
anger and walking up to the regiment wished to find a further excuse for
wrath. Having snapped at an officer for an unpolished badge, at another
because his line was not straight, he reached the third company.

"H-o-o-w are you standing? Where's your leg? Your leg?" shouted the
commander with a tone of suffering in his voice, while there were still
five men between him and Dolokhov with his bluish-gray uniform.

Dolokhov slowly straightened his bent knee, looking straight with his
clear, insolent eyes in the general's face.

"Why a blue coat? Off with it... Sergeant major! Change his coat... the
ras..." he did not finish.

"General, I must obey orders, but I am not bound to endure..." Dolokhov
hurriedly interrupted.

"No talking in the ranks!... No talking, no talking!"

"Not bound to endure insults," Dolokhov concluded in loud, ringing
tones.

The eyes of the general and the soldier met. The general became silent,
angrily pulling down his tight scarf.

"I request you to have the goodness to change your coat," he said as he
turned away.




CHAPTER II

"He's coming!" shouted the signaler at that moment.

The regimental commander, flushing, ran to his horse, seized the stirrup
with trembling hands, threw his body across the saddle, righted himself,
drew his saber, and with a happy and resolute countenance, opening his
mouth awry, prepared to shout. The regiment fluttered like a bird
preening its plumage and became motionless.

"Att-ention!" shouted the regimental commander in a soul-shaking voice
which expressed joy for himself, severity for the regiment, and welcome
for the approaching chief.

Along the broad country road, edged on both sides by trees, came a high,
light blue Viennese caleche, slightly creaking on its springs and drawn
by six horses at a smart trot. Behind the caleche galloped the suite and
a convoy of Croats. Beside Kutuzov sat an Austrian general, in a white
uniform that looked strange among the Russian black ones. The caleche
stopped in front of the regiment. Kutuzov and the Austrian general were
talking in low voices and Kutuzov smiled slightly as treading heavily he
stepped down from the carriage just as if those two thousand men
breathlessly gazing at him and the regimental commander did not exist.

The word of command rang out, and again the regiment quivered, as with a
jingling sound it presented arms. Then amidst a dead silence the feeble
voice of the commander-in-chief was heard. The regiment roared, "Health
to your ex... len... len... lency!" and again all became silent. At
first Kutuzov stood still while the regiment moved; then he and the
general in white, accompanied by the suite, walked between the ranks.

From the way the regimental commander saluted the commander-in-chief and
devoured him with his eyes, drawing himself up obsequiously, and from
the way he walked through the ranks behind the generals, bending forward
and hardly able to restrain his jerky movements, and from the way he
darted forward at every word or gesture of the commander-in-chief, it
was evident that he performed his duty as a subordinate with even
greater zeal than his duty as a commander. Thanks to the strictness and
assiduity of its commander the regiment, in comparison with others that
had reached Braunau at the same time, was in splendid condition. There
were only 217 sick and stragglers. Everything was in good order except
the boots.

Kutuzov walked through the ranks, sometimes stopping to say a few
friendly words to officers he had known in the Turkish war, sometimes
also to the soldiers. Looking at their boots he several times shook his
head sadly, pointing them out to the Austrian general with an expression
which seemed to say that he was not blaming anyone, but could not help
noticing what a bad state of things it was. The regimental commander ran
forward on each such occasion, fearing to miss a single word of the
commander-in-chief's regarding the regiment. Behind Kutuzov, at a
distance that allowed every softly spoken word to be heard, followed
some twenty men of his suite. These gentlemen talked among themselves
and sometimes laughed. Nearest of all to the commander-in-chief walked a
handsome adjutant. This was Prince Bolkonski. Beside him was his comrade
Nesvitski, a tall staff officer, extremely stout, with a kindly,
smiling, handsome face and moist eyes. Nesvitski could hardly keep from
laughter provoked by a swarthy hussar officer who walked beside him.
This hussar, with a grave face and without a smile or a change in the
expression of his fixed eyes, watched the regimental commander's back
and mimicked his every movement. Each time the commander started and
bent forward, the hussar started and bent forward in exactly the same
manner. Nesvitski laughed and nudged the others to make them look at the
wag.

Kutuzov walked slowly and languidly past thousands of eyes which were
starting from their sockets to watch their chief. On reaching the third
company he suddenly stopped. His suite, not having expected this,
involuntarily came closer to him.

"Ah, Timokhin!" said he, recognizing the red-nosed captain who had been
reprimanded on account of the blue greatcoat.

One would have thought it impossible for a man to stretch himself more
than Timokhin had done when he was reprimanded by the regimental
commander, but now that the commander-in-chief addressed him he drew
himself up to such an extent that it seemed he could not have sustained
it had the commander-in-chief continued to look at him, and so Kutuzov,
who evidently understood his case and wished him nothing but good,
quickly turned away, a scarcely perceptible smile flitting over his
scarred and puffy face.

"Another Ismail comrade," said he. "A brave officer! Are you satisfied
with him?" he asked the regimental commander.

And the latter--unconscious that he was being reflected in the hussar
officer as in a looking glass--started, moved forward, and answered:
"Highly satisfied, your excellency!"

"We all have our weaknesses," said Kutuzov smiling and walking away from
him. "He used to have a predilection for Bacchus."

The regimental commander was afraid he might be blamed for this and did
not answer. The hussar at that moment noticed the face of the red-nosed
captain and his drawn-in stomach, and mimicked his expression and pose
with such exactitude that Nesvitski could not help laughing. Kutuzov
turned round. The officer evidently had complete control of his face,
and while Kutuzov was turning managed to make a grimace and then assume
a most serious, deferential, and innocent expression.

The third company was the last, and Kutuzov pondered, apparently trying
to recollect something. Prince Andrew stepped forward from among the
suite and said in French:

"You told me to remind you of the officer Dolokhov, reduced to the ranks
in this regiment."

"Where is Dolokhov?" asked Kutuzov.

Dolokhov, who had already changed into a soldier's gray greatcoat, did
not wait to be called. The shapely figure of the fair-haired soldier,
with his clear blue eyes, stepped forward from the ranks, went up to the
commander in chief, and presented arms.

"Have you a complaint to make?" Kutuzov asked with a slight frown.

"This is Dolokhov," said Prince Andrew.

"Ah!" said Kutuzov. "I hope this will be a lesson to you. Do your duty.
The Emperor is gracious, and I shan't forget you if you deserve well."

The clear blue eyes looked at the commander-in-chief just as boldly as
they had looked at the regimental commander, seeming by their expression
to tear open the veil of convention that separates a commander-in-chief
so widely from a private.

"One thing I ask of your excellency," Dolokhov said in his firm,
ringing, deliberate voice. "I ask an opportunity to atone for my fault
and prove my devotion to His Majesty the Emperor and to Russia!"

Kutuzov turned away. The same smile of the eyes with which he had turned
from Captain Timokhin again flitted over his face. He turned away with a
grimace as if to say that everything Dolokhov had said to him and
everything he could say had long been known to him, that he was weary of
it and it was not at all what he wanted. He turned away and went to the
carriage.

The regiment broke up into companies, which went to their appointed
quarters near Braunau, where they hoped to receive boots and clothes and
to rest after their hard marches.

"You won't bear me a grudge, Prokhor Ignatych?" said the regimental
commander, overtaking the third company on its way to its quarters and
riding up to Captain Timokhin who was walking in front. (The regimental
commander's face now that the inspection was happily over beamed with
irrepressible delight.) "It's in the Emperor's service... it can't be
helped... one is sometimes a bit hasty on parade... I am the first to
apologize, you know me!... He was very pleased!" And he held out his
hand to the captain.

"Don't mention it, General, as if I'd be so bold!" replied the captain,
his nose growing redder as he gave a smile which showed where two front
teeth were missing that had been knocked out by the butt end of a gun at
Ismail.

"And tell Mr. Dolokhov that I won't forget him--he may be quite easy.
And tell me, please--I've been meaning to ask--how is he behaving
himself, and in general..."

"As far as the service goes he is quite punctilious, your excellency;
but his character..." said Timokhin.

"And what about his character?" asked the regimental commander.

"It's different on different days," answered the captain. "One day he is
sensible, well educated, and good-natured, and the next he's a wild
beast.... In Poland, if you please, he nearly killed a Jew."

"Oh, well, well!" remarked the regimental commander. "Still, one must
have pity on a young man in misfortune. You know he has important
connections... Well, then, you just..."

"I will, your excellency," said Timokhin, showing by his smile that he
understood his commander's wish.

"Well, of course, of course!"

The regimental commander sought out Dolokhov in the ranks and, reining
in his horse, said to him:

"After the next affair... epaulettes."

Dolokhov looked round but did not say anything, nor did the mocking
smile on his lips change.

"Well, that's all right," continued the regimental commander. "A cup of
vodka for the men from me," he added so that the soldiers could hear. "I
thank you all! God be praised!" and he rode past that company and
overtook the next one.

"Well, he's really a good fellow, one can serve under him," said
Timokhin to the subaltern beside him.

"In a word, a hearty one..." said the subaltern, laughing (the
regimental commander was nicknamed King of Hearts).

The cheerful mood of their officers after the inspection infected the
soldiers. The company marched on gaily. The soldiers' voices could be
heard on every side.

"And they said Kutuzov was blind of one eye?"

"And so he is! Quite blind!"

"No, friend, he is sharper-eyed than you are. Boots and leg bands... he
noticed everything..."

"When he looked at my feet, friend... well, thinks I..."

"And that other one with him, the Austrian, looked as if he were smeared
with chalk--as white as flour! I suppose they polish him up as they do
the guns."

"I say, Fedeshon!... Did he say when the battles are to begin? You were
near him. Everybody said that Buonaparte himself was at Braunau."

"Buonaparte himself!... Just listen to the fool, what he doesn't know!
The Prussians are up in arms now. The Austrians, you see, are putting
them down. When they've been put down, the war with Buonaparte will
begin. And he says Buonaparte is in Braunau! Shows you're a fool. You'd
better listen more carefully!"

"What devils these quartermasters are! See, the fifth company is turning
into the village already... they will have their buckwheat cooked before
we reach our quarters."

"Give me a biscuit, you devil!"

"And did you give me tobacco yesterday? That's just it, friend! Ah,
well, never mind, here you are."

"They might call a halt here or we'll have to do another four miles
without eating."

"Wasn't it fine when those Germans gave us lifts! You just sit still and
are drawn along."

"And here, friend, the people are quite beggarly. There they all seemed
to be Poles--all under the Russian crown--but here they're all regular
Germans."

"Singers to the front" came the captain's order.

And from the different ranks some twenty men ran to the front. A
drummer, their leader, turned round facing the singers, and flourishing
his arm, began a long-drawn-out soldiers' song, commencing with the
words: "Morning dawned, the sun was rising," and concluding: "On then,
brothers, on to glory, led by Father Kamenski." This song had been
composed in the Turkish campaign and now being sung in Austria, the only
change being that the words "Father Kamenski" were replaced by "Father
Kutuzov."

Having jerked out these last words as soldiers do and waved his arms as
if flinging something to the ground, the drummer--a lean, handsome
soldier of forty--looked sternly at the singers and screwed up his eyes.
Then having satisfied himself that all eyes were fixed on him, he raised
both arms as if carefully lifting some invisible but precious object
above his head and, holding it there for some seconds, suddenly flung it
down and began:

"Oh, my bower, oh, my bower...!"

"Oh, my bower new...!" chimed in twenty voices, and the castanet player,
in spite of the burden of his equipment, rushed out to the front and,
walking backwards before the company, jerked his shoulders and
flourished his castanets as if threatening someone. The soldiers,
swinging their arms and keeping time spontaneously, marched with long
steps. Behind the company the sound of wheels, the creaking of springs,
and the tramp of horses' hoofs were heard. Kutuzov and his suite were
returning to the town. The commander-in-chief made a sign that the men
should continue to march at ease, and he and all his suite showed
pleasure at the sound of the singing and the sight of the dancing
soldier and the gay and smartly marching men. In the second file from
the right flank, beside which the carriage passed the company, a blue-
eyed soldier involuntarily attracted notice. It was Dolokhov marching
with particular grace and boldness in time to the song and looking at
those driving past as if he pitied all who were not at that moment
marching with the company. The hussar cornet of Kutuzov's suite who had
mimicked the regimental commander, fell back from the carriage and rode
up to Dolokhov.

Hussar cornet Zherkov had at one time, in Petersburg, belonged to the
wild set led by Dolokhov. Zherkov had met Dolokhov abroad as a private
and had not seen fit to recognize him. But now that Kutuzov had spoken
to the gentleman ranker, he addressed him with the cordiality of an old
friend.

"My dear fellow, how are you?" said he through the singing, making his
horse keep pace with the company.

"How am I?" Dolokhov answered coldly. "I am as you see."

The lively song gave a special flavor to the tone of free and easy
gaiety with which Zherkov spoke, and to the intentional coldness of
Dolokhov's reply.

"And how do you get on with the officers?" inquired Zherkov.

"All right. They are good fellows. And how have you wriggled onto the
staff?"

"I was attached; I'm on duty."

Both were silent.

"She let the hawk fly upward from her wide right sleeve," went the song,
arousing an involuntary sensation of courage and cheerfulness. Their
conversation would probably have been different but for the effect of
that song.

"Is it true that Austrians have been beaten?" asked Dolokhov.

"The devil only knows! They say so."

"I'm glad," answered Dolokhov briefly and clearly, as the song demanded.

"I say, come round some evening and we'll have a game of faro!" said
Zherkov.

"Why, have you too much money?"

"Do come."

"I can't. I've sworn not to. I won't drink and won't play till I get
reinstated."

"Well, that's only till the first engagement."

"We shall see."

They were again silent.

"Come if you need anything. One can at least be of use on the staff..."

Dolokhov smiled. "Don't trouble. If I want anything, I won't beg--I'll
take it!"

"Well, never mind; I only..."

"And I only..."

"Good-bye."

"Good health..."


"It's a long, long way. To my native land..."

Zherkov touched his horse with the spurs; it pranced excitedly from foot
to foot uncertain with which to start, then settled down, galloped past
the company, and overtook the carriage, still keeping time to the song.




CHAPTER III

On returning from the review, Kutuzov took the Austrian general into his
private room and, calling his adjutant, asked for some papers relating
to the condition of the troops on their arrival, and the letters that
had come from the Archduke Ferdinand, who was in command of the advanced
army. Prince Andrew Bolkonski came into the room with the required
papers. Kutuzov and the Austrian member of the Hofkriegsrath were
sitting at the table on which a plan was spread out.

"Ah!..." said Kutuzov glancing at Bolkonski as if by this exclamation he
was asking the adjutant to wait, and he went on with the conversation in
French.

"All I can say, General," said he with a pleasant elegance of expression
and intonation that obliged one to listen to each deliberately spoken
word. It was evident that Kutuzov himself listened with pleasure to his
own voice. "All I can say, General, is that if the matter depended on my
personal wishes, the will of His Majesty the Emperor Francis would have
been fulfilled long ago. I should long ago have joined the archduke. And
believe me on my honour that to me personally it would be a pleasure to
hand over the supreme command of the army into the hands of a better
informed and more skillful general--of whom Austria has so many--and to
lay down all this heavy responsibility. But circumstances are sometimes
too strong for us, General."

And Kutuzov smiled in a way that seemed to say, "You are quite at
liberty not to believe me and I don't even care whether you do or not,
but you have no grounds for telling me so. And that is the whole point."

The Austrian general looked dissatisfied, but had no option but to reply
in the same tone.

"On the contrary," he said, in a querulous and angry tone that
contrasted with his flattering words, "on the contrary, your
excellency's participation in the common action is highly valued by His
Majesty; but we think the present delay is depriving the splendid
Russian troops and their commander of the laurels they have been
accustomed to win in their battles," he concluded his evidently
prearranged sentence.

Kutuzov bowed with the same smile.

"But that is my conviction, and judging by the last letter with which
His Highness the Archduke Ferdinand has honored me, I imagine that the
Austrian troops, under the direction of so skillful a leader as General
Mack, have by now already gained a decisive victory and no longer need
our aid," said Kutuzov.

The general frowned. Though there was no definite news of an Austrian
defeat, there were many circumstances confirming the unfavorable rumors
that were afloat, and so Kutuzov's suggestion of an Austrian victory
sounded much like irony. But Kutuzov went on blandly smiling with the
same expression, which seemed to say that he had a right to suppose so.
And, in fact, the last letter he had received from Mack's army informed
him of a victory and stated strategically the position of the army was
very favorable.

"Give me that letter," said Kutuzov turning to Prince Andrew. "Please
have a look at it"--and Kutuzov with an ironical smile about the corners
of his mouth read to the Austrian general the following passage, in
German, from the Archduke Ferdinand's letter:

We have fully concentrated forces of nearly seventy thousand men with
which to attack and defeat the enemy should he cross the Lech. Also, as
we are masters of Ulm, we cannot be deprived of the advantage of
commanding both sides of the Danube, so that should the enemy not cross
the Lech, we can cross the Danube, throw ourselves on his line of
communications, recross the river lower down, and frustrate his
intention should he try to direct his whole force against our faithful
ally. We shall therefore confidently await the moment when the Imperial
Russian army will be fully equipped, and shall then, in conjunction with
it, easily find a way to prepare for the enemy the fate he deserves.

Kutuzov sighed deeply on finishing this paragraph and looked at the
member of the Hofkriegsrath mildly and attentively.

"But you know the wise maxim your excellency, advising one to expect the
worst," said the Austrian general, evidently wishing to have done with
jests and to come to business. He involuntarily looked round at the
aide-de-camp.

"Excuse me, General," interrupted Kutuzov, also turning to Prince
Andrew. "Look here, my dear fellow, get from Kozlovski all the reports
from our scouts. Here are two letters from Count Nostitz and here is one
from His Highness the Archduke Ferdinand and here are these," he said,
handing him several papers, "make a neat memorandum in French out of all
this, showing all the news we have had of the movements of the Austrian
army, and then give it to his excellency."

Prince Andrew bowed his head in token of having understood from the
first not only what had been said but also what Kutuzov would have liked
to tell him. He gathered up the papers and with a bow to both, stepped
softly over the carpet and went out into the waiting room.

Though not much time had passed since Prince Andrew had left Russia, he
had changed greatly during that period. In the expression of his face,
in his movements, in his walk, scarcely a trace was left of his former
affected languor and indolence. He now looked like a man who has time to
think of the impression he makes on others, but is occupied with
agreeable and interesting work. His face expressed more satisfaction
with himself and those around him, his smile and glance were brighter
and more attractive.

Kutuzov, whom he had overtaken in Poland, had received him very kindly,
promised not to forget him, distinguished him above the other adjutants,
and had taken him to Vienna and given him the more serious commissions.
From Vienna Kutuzov wrote to his old comrade, Prince Andrew's father.

Your son bids fair to become an officer distinguished by his industry,
firmness, and expedition. I consider myself fortunate to have such a
subordinate by me.

On Kutuzov's staff, among his fellow officers and in the army generally,
Prince Andrew had, as he had had in Petersburg society, two quite
opposite reputations. Some, a minority, acknowledged him to be different
from themselves and from everyone else, expected great things of him,
listened to him, admired, and imitated him, and with them Prince Andrew
was natural and pleasant. Others, the majority, disliked him and
considered him conceited, cold, and disagreeable. But among these people
Prince Andrew knew how to take his stand so that they respected and even
feared him.

Coming out of Kutuzov's room into the waiting room with the papers in
his hand Prince Andrew came up to his comrade, the aide-de-camp on duty,
Kozlovski, who was sitting at the window with a book.

"Well, Prince?" asked Kozlovski.

"I am ordered to write a memorandum explaining why we are not
advancing."

"And why is it?"

Prince Andrew shrugged his shoulders.

"Any news from Mack?"

"No."

"If it were true that he has been beaten, news would have come."

"Probably," said Prince Andrew moving toward the outer door.

But at that instant a tall Austrian general in a greatcoat, with the
order of Maria Theresa on his neck and a black bandage round his head,
who had evidently just arrived, entered quickly, slamming the door.
Prince Andrew stopped short.

"Commander in Chief Kutuzov?" said the newly arrived general speaking
quickly with a harsh German accent, looking to both sides and advancing
straight toward the inner door.

"The commander-in-chief is engaged," said Kozlovski, going hurriedly up
to the unknown general and blocking his way to the door. "Whom shall I
announce?"

The unknown general looked disdainfully down at Kozlovski, who was
rather short, as if surprised that anyone should not know him.

"The commander-in-chief is engaged," repeated Kozlovski calmly.

The general's face clouded, his lips quivered and trembled. He took out
a notebook, hurriedly scribbled something in pencil, tore out the leaf,
gave it to Kozlovski, stepped quickly to the window, and threw himself
into a chair, gazing at those in the room as if asking, "Why do they
look at me?" Then he lifted his head, stretched his neck as if he
intended to say something, but immediately, with affected indifference,
began to hum to himself, producing a queer sound which immediately broke
off. The door of the private room opened and Kutuzov appeared in the
doorway. The general with the bandaged head bent forward as though
running away from some danger, and, making long, quick strides with his
thin legs, went up to Kutuzov.

"Vous voyez le malheureux Mack," he uttered in a broken voice.

Kutuzov's face as he stood in the open doorway remained perfectly
immobile for a few moments. Then wrinkles ran over his face like a wave
and his forehead became smooth again, he bowed his head respectfully,
closed his eyes, silently let Mack enter his room before him, and closed
the door himself behind him.

The report which had been circulated that the Austrians had been beaten
and that the whole army had surrendered at Ulm proved to be correct.
Within half an hour adjutants had been sent in various directions with
orders which showed that the Russian troops, who had hitherto been
inactive, would also soon have to meet the enemy.

Prince Andrew was one of those rare staff officers whose chief interest
lay in the general progress of the war. When he saw Mack and heard the
details of his disaster he understood that half the campaign was lost,
understood all the difficulties of the Russian army's position, and
vividly imagined what awaited it and the part he would have to play.
Involuntarily he felt a joyful agitation at the thought of the
humiliation of arrogant Austria and that in a week's time he might,
perhaps, see and take part in the first Russian encounter with the
French since Suvorov met them. He feared that Bonaparte's genius might
outweigh all the courage of the Russian troops, and at the same time
could not admit the idea of his hero being disgraced.

Excited and irritated by these thoughts Prince Andrew went toward his
room to write to his father, to whom he wrote every day. In the corridor
he met Nesvitski, with whom he shared a room, and the wag Zherkov; they
were as usual laughing.

"Why are you so glum?" asked Nesvitski noticing Prince Andrew's pale
face and glittering eyes.

"There's nothing to be gay about," answered Bolkonski.

Just as Prince Andrew met Nesvitski and Zherkov, there came toward them
from the other end of the corridor, Strauch, an Austrian general who on
Kutuzov's staff in charge of the provisioning of the Russian army, and
the member of the Hofkriegsrath who had arrived the previous evening.
There was room enough in the wide corridor for the generals to pass the
three officers quite easily, but Zherkov, pushing Nesvitski aside with
his arm, said in a breathless voice,

"They're coming!... they're coming!... Stand aside, make way, please
make way!"

The generals were passing by, looking as if they wished to avoid
embarrassing attentions. On the face of the wag Zherkov there suddenly
appeared a stupid smile of glee which he seemed unable to suppress.

"Your excellency," said he in German, stepping forward and addressing
the Austrian general, "I have the honor to congratulate you."

He bowed his head and scraped first with one foot and then with the
other, awkwardly, like a child at a dancing lesson.

The member of the Hofkriegsrath looked at him severely but, seeing the
seriousness of his stupid smile, could not but give him a moment's
attention. He screwed up his eyes showing that he was listening.

"I have the honor to congratulate you. General Mack has arrived, quite
well, only a little bruised just here," he added, pointing with a
beaming smile to his head.

The general frowned, turned away, and went on.

"Gott, wie naiv!" * said he angrily, after he had gone a few steps.


* "Good God, what simplicity!"

Nesvitski with a laugh threw his arms round Prince Andrew, but
Bolkonski, turning still paler, pushed him away with an angry look and
turned to Zherkov. The nervous irritation aroused by the appearance of
Mack, the news of his defeat, and the thought of what lay before the
Russian army found vent in anger at Zherkov's untimely jest.

"If you, sir, choose to make a buffoon of yourself," he said sharply,
with a slight trembling of the lower jaw, "I can't prevent your doing
so; but I warn you that if you dare to play the fool in my presence, I
will teach you to behave yourself."

Nesvitski and Zherkov were so surprised by this outburst that they gazed
at Bolkonski silently with wide-open eyes.

"What's the matter? I only congratulated them," said Zherkov.

"I am not jesting with you; please be silent!" cried Bolkonski, and
taking Nesvitski's arm he left Zherkov, who did not know what to say.

"Come, what's the matter, old fellow?" said Nesvitski trying to soothe
him.

"What's the matter?" exclaimed Prince Andrew standing still in his
excitement. "Don't you understand that either we are officers serving
our Tsar and our country, rejoicing in the successes and grieving at the
misfortunes of our common cause, or we are merely lackeys who care
nothing for their master's business. Quarante mille hommes massacres et
l'armee de nos allies detruite, et vous trouvez la le mot pour rire," *
he said, as if strengthening his views by this French sentence. "C'est
bien pour un garcon de rien comme cet individu dont vous avez fait un
ami, mais pas pour vous, pas pour vous. *(2) Only a hobbledehoy could
amuse himself in this way," he added in Russian--but pronouncing the
word with a French accent--having noticed that Zherkov could still hear
him.


* "Forty thousand men massacred and the army of our allies destroyed,
and you find that a cause for jesting!"

* (2) "It is all very well for that good-for-nothing fellow of whom you
have made a friend, but not for you, not for you."

He waited a moment to see whether the cornet would answer, but he turned
and went out of the corridor.




CHAPTER IV

The Pavlograd Hussars were stationed two miles from Braunau. The
squadron in which Nicholas Rostov served as a cadet was quartered in the
German village of Salzeneck. The best quarters in the village were
assigned to cavalry-captain Denisov, the squadron commander, known
throughout the whole cavalry division as Vaska Denisov. Cadet Rostov,
ever since he had overtaken the regiment in Poland, had lived with the
squadron commander.

On October 11, the day when all was astir at headquarters over the news
of Mack's defeat, the camp life of the officers of this squadron was
proceeding as usual. Denisov, who had been losing at cards all night,
had not yet come home when Rostov rode back early in the morning from a
foraging expedition. Rostov in his cadet uniform, with a jerk to his
horse, rode up to the porch, swung his leg over the saddle with a supple
youthful movement, stood for a moment in the stirrup as if loathe to
part from his horse, and at last sprang down and called to his orderly.

"Ah, Bondarenko, dear friend!" said he to the hussar who rushed up
headlong to the horse. "Walk him up and down, my dear fellow," he
continued, with that gay brotherly cordiality which goodhearted young
people show to everyone when they are happy.

"Yes, your excellency," answered the Ukrainian gaily, tossing his head.

"Mind, walk him up and down well!"

Another hussar also rushed toward the horse, but Bondarenko had already
thrown the reins of the snaffle bridle over the horse's head. It was
evident that the cadet was liberal with his tips and that it paid to
serve him. Rostov patted the horse's neck and then his flank, and
lingered for a moment.

"Splendid! What a horse he will be!" he thought with a smile, and
holding up his saber, his spurs jingling, he ran up the steps of the
porch. His landlord, who in a waistcoat and a pointed cap, pitchfork in
hand, was clearing manure from the cowhouse, looked out, and his face
immediately brightened on seeing Rostov. "Schon gut Morgen! Schon gut
Morgen!" * he said winking with a merry smile, evidently pleased to
greet the young man.


* "A very good morning! A very good morning!"

"Schon fleissig?" * said Rostov with the same gay brotherly smile which
did not leave his eager face. "Hoch Oestreicher! Hoch Russen! Kaiser
Alexander hoch!" *(2) said he, quoting words often repeated by the
German landlord.


* "Busy already?"

* (2) "Hurrah for the Austrians! Hurrah for the Russians! Hurrah for
Emperor Alexander!"

The German laughed, came out of the cowshed, pulled off his cap, and
waving it above his head cried:

"Und die ganze Welt hoch!" *


* "And hurrah for the whole world!"

Rostov waved his cap above his head like the German and cried laughing,
"Und vivat die ganze Welt!" Though neither the German cleaning his
cowshed nor Rostov back with his platoon from foraging for hay had any
reason for rejoicing, they looked at each other with joyful delight and
brotherly love, wagged their heads in token of their mutual affection,
and parted smiling, the German returning to his cowshed and Rostov going
to the cottage he occupied with Denisov.

"What about your master?" he asked Lavrushka, Denisov's orderly, whom
all the regiment knew for a rogue.

"Hasn't been in since the evening. Must have been losing," answered
Lavrushka. "I know by now, if he wins he comes back early to brag about
it, but if he stays out till morning it means he's lost and will come
back in a rage. Will you have coffee?"

"Yes, bring some."

Ten minutes later Lavrushka brought the coffee. "He's coming!" said he.
"Now for trouble!" Rostov looked out of the window and saw Denisov
coming home. Denisov was a small man with a red face, sparkling black
eyes, and black tousled mustache and hair. He wore an unfastened cloak,
wide breeches hanging down in creases, and a crumpled shako on the back
of his head. He came up to the porch gloomily, hanging his head.

"Lavwuska!" he shouted loudly and angrily, "take it off, blockhead!"

"Well, I am taking it off," replied Lavrushka's voice.

"Ah, you're up already," said Denisov, entering the room.

"Long ago," answered Rostov, "I have already been for the hay, and have
seen Fraulein Mathilde."

"Weally! And I've been losing, bwother. I lost yesterday like a damned
fool!" cried Denisov, not pronouncing his r's. "Such ill luck! Such ill
luck. As soon as you left, it began and went on. Hullo there! Tea!"

Puckering up his face though smiling, and showing his short strong
teeth, he began with stubby fingers of both hands to ruffle up his thick
tangled black hair.

"And what devil made me go to that wat?" (an officer nicknamed "the
rat") he said, rubbing his forehead and whole face with both hands.
"Just fancy, he didn't let me win a single cahd, not one cahd."

He took the lighted pipe that was offered to him, gripped it in his
fist, and tapped it on the floor, making the sparks fly, while he
continued to shout.

"He lets one win the singles and collahs it as soon as one doubles it;
gives the singles and snatches the doubles!"

He scattered the burning tobacco, smashed the pipe, and threw it away.
Then he remained silent for a while, and all at once looked cheerfully
with his glittering, black eyes at Rostov.

"If at least we had some women here; but there's nothing foh one to do
but dwink. If we could only get to fighting soon. Hullo, who's there?"
he said, turning to the door as he heard a tread of heavy boots and the
clinking of spurs that came to a stop, and a respectful cough.

"The squadron quartermaster!" said Lavrushka.

Denisov's face puckered still more.

"Wetched!" he muttered, throwing down a purse with some gold in it.
"Wostov, deah fellow, just see how much there is left and shove the
purse undah the pillow," he said, and went out to the quartermaster.

Rostov took the money and, mechanically arranging the old and new coins
in separate piles, began counting them.

"Ah! Telyanin! How d'ye do? They plucked me last night," came Denisov's
voice from the next room.

"Where? At Bykov's, at the rat's... I knew it," replied a piping voice,
and Lieutenant Telyanin, a small officer of the same squadron, entered
the room.

Rostov thrust the purse under the pillow and shook the damp little hand
which was offered him. Telyanin for some reason had been transferred
from the Guards just before this campaign. He behaved very well in the
regiment but was not liked; Rostov especially detested him and was
unable to overcome or conceal his groundless antipathy to the man.

"Well, young cavalryman, how is my Rook behaving?" he asked. (Rook was a
young horse Telyanin had sold to Rostov.)

The lieutenant never looked the man he was speaking to straight in the
face; his eyes continually wandered from one object to another.

"I saw you riding this morning..." he added.

"Oh, he's all right, a good horse," answered Rostov, though the horse
for which he had paid seven hundred rubbles was not worth half that sum.
"He's begun to go a little lame on the left foreleg," he added.

"The hoof's cracked! That's nothing. I'll teach you what to do and show
you what kind of rivet to use."

"Yes, please do," said Rostov.

"I'll show you, I'll show you! It's not a secret. And it's a horse
you'll thank me for."

"Then I'll have it brought round," said Rostov wishing to avoid
Telyanin, and he went out to give the order.

In the passage Denisov, with a pipe, was squatting on the threshold
facing the quartermaster who was reporting to him. On seeing Rostov,
Denisov screwed up his face and pointing over his shoulder with his
thumb to the room where Telyanin was sitting, he frowned and gave a
shudder of disgust.

"Ugh! I don't like that fellow," he said, regardless of the
quartermaster's presence.

Rostov shrugged his shoulders as much as to say: "Nor do I, but what's
one to do?" and, having given his order, he returned to Telyanin.

Telyanin was sitting in the same indolent pose in which Rostov had left
him, rubbing his small white hands.

"Well there certainly are disgusting people," thought Rostov as he
entered.

"Have you told them to bring the horse?" asked Telyanin, getting up and
looking carelessly about him.

"I have."

"Let us go ourselves. I only came round to ask Denisov about yesterday's
order. Have you got it, Denisov?"

"Not yet. But where are you off to?"

"I want to teach this young man how to shoe a horse," said Telyanin.

They went through the porch and into the stable. The lieutenant
explained how to rivet the hoof and went away to his own quarters.

When Rostov went back there was a bottle of vodka and a sausage on the
table. Denisov was sitting there scratching with his pen on a sheet of
paper. He looked gloomily in Rostov's face and said: "I am witing to
her."

He leaned his elbows on the table with his pen in his hand and,
evidently glad of a chance to say quicker in words what he wanted to
write, told Rostov the contents of his letter.

"You see, my fwiend," he said, "we sleep when we don't love. We are
childwen of the dust... but one falls in love and one is a God, one is
pua' as on the first day of cweation... Who's that now? Send him to the
devil, I'm busy!" he shouted to Lavrushka, who went up to him not in the
least abashed.

"Who should it be? You yourself told him to come. It's the quartermaster
for the money."

Denisov frowned and was about to shout some reply but stopped.

"Wetched business," he muttered to himself. "How much is left in the
puhse?" he asked, turning to Rostov.

"Seven new and three old imperials."

"Oh, it's wetched! Well, what are you standing there for, you sca'cwow?
Call the quahtehmasteh," he shouted to Lavrushka.

"Please, Denisov, let me lend you some: I have some, you know," said
Rostov, blushing.

"Don't like bowwowing from my own fellows, I don't," growled Denisov.

"But if you won't accept money from me like a comrade, you will offend
me. Really I have some," Rostov repeated.

"No, I tell you."

And Denisov went to the bed to get the purse from under the pillow.

"Where have you put it, Wostov?"

"Under the lower pillow."

"It's not there."

Denisov threw both pillows on the floor. The purse was not there.

"That's a miwacle."

"Wait, haven't you dropped it?" said Rostov, picking up the pillows one
at a time and shaking them.

He pulled off the quilt and shook it. The purse was not there.

"Dear me, can I have forgotten? No, I remember thinking that you kept it
under your head like a treasure," said Rostov. "I put it just here.
Where is it?" he asked, turning to Lavrushka.

"I haven't been in the room. It must be where you put it."

"But it isn't?..."

"You're always like that; you thwow a thing down anywhere and forget it.
Feel in your pockets."

"No, if I hadn't thought of it being a treasure," said Rostov, "but I
remember putting it there."

Lavrushka turned all the bedding over, looked under the bed and under
the table, searched everywhere, and stood still in the middle of the
room. Denisov silently watched Lavrushka's movements, and when the
latter threw up his arms in surprise saying it was nowhere to be found
Denisov glanced at Rostov.

"Wostov, you've not been playing schoolboy twicks..."

Rostov felt Denisov's gaze fixed on him, raised his eyes, and instantly
dropped them again. All the blood which had seemed congested somewhere
below his throat rushed to his face and eyes. He could not draw breath.

"And there hasn't been anyone in the room except the lieutenant and
yourselves. It must be here somewhere," said Lavrushka.

"Now then, you devil's puppet, look alive and hunt for it!" shouted
Denisov, suddenly, turning purple and rushing at the man with a
threatening gesture. "If the purse isn't found I'll flog you, I'll flog
you all."

Rostov, his eyes avoiding Denisov, began buttoning his coat, buckled on
his saber, and put on his cap.

"I must have that purse, I tell you," shouted Denisov, shaking his
orderly by the shoulders and knocking him against the wall.

"Denisov, let him alone, I know who has taken it," said Rostov, going
toward the door without raising his eyes. Denisov paused, thought a
moment, and, evidently understanding what Rostov hinted at, seized his
arm.

"Nonsense!" he cried, and the veins on his forehead and neck stood out
like cords. "You are mad, I tell you. I won't allow it. The purse is
here! I'll flay this scoundwel alive, and it will be found."

"I know who has taken it," repeated Rostov in an unsteady voice, and
went to the door.

"And I tell you, don't you dahe to do it!" shouted Denisov, rushing at
the cadet to restrain him.

But Rostov pulled away his arm and, with as much anger as though Denisov
were his worst enemy, firmly fixed his eyes directly on his face.

"Do you understand what you're saying?" he said in a trembling voice.
"There was no one else in the room except myself. So that if it is not
so, then..."

He could not finish, and ran out of the room.

"Ah, may the devil take you and evewybody," were the last words Rostov
heard.

Rostov went to Telyanin's quarters.

"The master is not in, he's gone to headquarters," said Telyanin's
orderly. "Has something happened?" he added, surprised at the cadet's
troubled face.

"No, nothing."

"You've only just missed him," said the orderly.

The headquarters were situated two miles away from Salzeneck, and
Rostov, without returning home, took a horse and rode there. There was
an inn in the village which the officers frequented. Rostov rode up to
it and saw Telyanin's horse at the porch.

In the second room of the inn the lieutenant was sitting over a dish of
sausages and a bottle of wine.

"Ah, you've come here too, young man!" he said, smiling and raising his
eyebrows.

"Yes," said Rostov as if it cost him a great deal to utter the word; and
he sat down at the nearest table.

Both were silent. There were two Germans and a Russian officer in the
room. No one spoke and the only sounds heard were the clatter of knives
and the munching of the lieutenant.

When Telyanin had finished his lunch he took out of his pocket a double
purse and, drawing its rings aside with his small, white, turned-up
fingers, drew out a gold imperial, and lifting his eyebrows gave it to
the waiter.

"Please be quick," he said.

The coin was a new one. Rostov rose and went up to Telyanin.

"Allow me to look at your purse," he said in a low, almost inaudible,
voice.

With shifting eyes but eyebrows still raised, Telyanin handed him the
purse.

"Yes, it's a nice purse. Yes, yes," he said, growing suddenly pale, and
added, "Look at it, young man."

Rostov took the purse in his hand, examined it and the money in it, and
looked at Telyanin. The lieutenant was looking about in his usual way
and suddenly seemed to grow very merry.

"If we get to Vienna I'll get rid of it there but in these wretched
little towns there's nowhere to spend it," said he. "Well, let me have
it, young man, I'm going."

Rostov did not speak.

"And you? Are you going to have lunch too? They feed you quite decently
here," continued Telyanin. "Now then, let me have it."

He stretched out his hand to take hold of the purse. Rostov let go of
it. Telyanin took the purse and began carelessly slipping it into the
pocket of his riding breeches, with his eyebrows lifted and his mouth
slightly open, as if to say, "Yes, yes, I am putting my purse in my
pocket and that's quite simple and is no one else's business."

"Well, young man?" he said with a sigh, and from under his lifted brows
he glanced into Rostov's eyes.

Some flash as of an electric spark shot from Telyanin's eyes to Rostov's
and back, and back again and again in an instant.

"Come here," said Rostov, catching hold of Telyanin's arm and almost
dragging him to the window. "That money is Denisov's; you took it..." he
whispered just above Telyanin's ear.

"What? What? How dare you? What?" said Telyanin.

But these words came like a piteous, despairing cry and an entreaty for
pardon. As soon as Rostov heard them, an enormous load of doubt fell
from him. He was glad, and at the same instant began to pity the
miserable man who stood before him, but the task he had begun had to be
completed.

"Heaven only knows what the people here may imagine," muttered Telyanin,
taking up his cap and moving toward a small empty room. "We must have an
explanation..."

"I know it and shall prove it," said Rostov.

"I..."

Every muscle of Telyanin's pale, terrified face began to quiver, his
eyes still shifted from side to side but with a downward look not rising
to Rostov's face, and his sobs were audible.

"Count!... Don't ruin a young fellow... here is this wretched money,
take it..." He threw it on the table. "I have an old father and
mother!..."

Rostov took the money, avoiding Telyanin's eyes, and went out of the
room without a word. But at the door he stopped and then retraced his
steps. "O God," he said with tears in his eyes, "how could you do it?"

"Count..." said Telyanin drawing nearer to him.

"Don't touch me," said Rostov, drawing back. "If you need it, take the
money," and he threw the purse to him and ran out of the inn.




CHAPTER V

That same evening there was an animated discussion among the squadron's
officers in Denisov's quarters.

"And I tell you, Rostov, that you must apologize to the colonel!" said a
tall, grizzly-haired staff captain, with enormous mustaches and many
wrinkles on his large features, to Rostov who was crimson with
excitement.

The staff captain, Kirsten, had twice been reduced to the ranks for
affairs of honor and had twice regained his commission.

"I will allow no one to call me a liar!" cried Rostov. "He told me I
lied, and I told him he lied. And there it rests. He may keep me on duty
every day, or may place me under arrest, but no one can make me
apologize, because if he, as commander of this regiment, thinks it
beneath his dignity to give me satisfaction, then..."

"You just wait a moment, my dear fellow, and listen," interrupted the
staff captain in his deep bass, calmly stroking his long mustache. "You
tell the colonel in the presence of other officers that an officer has
stolen..."

"I'm not to blame that the conversation began in the presence of other
officers. Perhaps I ought not to have spoken before them, but I am not a
diplomatist. That's why I joined the hussars, thinking that here one
would not need finesse; and he tells me that I am lying--so let him give
me satisfaction..."

"That's all right. No one thinks you a coward, but that's not the point.
Ask Denisov whether it is not out of the question for a cadet to demand
satisfaction of his regimental commander?"

Denisov sat gloomily biting his mustache and listening to the
conversation, evidently with no wish to take part in it. He answered the
staff captain's question by a disapproving shake of his head.

"You speak to the colonel about this nasty business before other
officers," continued the staff captain, "and Bogdanich" (the colonel was
called Bogdanich) "shuts you up."

"He did not shut me up, he said I was telling an untruth."

"Well, have it so, and you talked a lot of nonsense to him and must
apologize."

"Not on any account!" exclaimed Rostov.

"I did not expect this of you," said the staff captain seriously and
severely. "You don't wish to apologize, but, man, it's not only to him
but to the whole regiment--all of us--you're to blame all round. The
case is this: you ought to have thought the matter over and taken
advice; but no, you go and blurt it all straight out before the
officers. Now what was the colonel to do? Have the officer tried and
disgrace the whole regiment? Disgrace the whole regiment because of one
scoundrel? Is that how you look at it? We don't see it like that. And
Bogdanich was a brick: he told you you were saying what was not true.
It's not pleasant, but what's to be done, my dear fellow? You landed
yourself in it. And now, when one wants to smooth the thing over, some
conceit prevents your apologizing, and you wish to make the whole affair
public. You are offended at being put on duty a bit, but why not
apologize to an old and honorable officer? Whatever Bogdanich may be,
anyway he is an honorable and brave old colonel! You're quick at taking
offense, but you don't mind disgracing the whole regiment!" The staff
captain's voice began to tremble. "You have been in the regiment next to
no time, my lad, you're here today and tomorrow you'll be appointed
adjutant somewhere and can snap your fingers when it is said 'There are
thieves among the Pavlograd officers!' But it's not all the same to us!
Am I not right, Denisov? It's not the same!"

Denisov remained silent and did not move, but occasionally looked with
his glittering black eyes at Rostov.

"You value your own pride and don't wish to apologize," continued the
staff captain, "but we old fellows, who have grown up in and, God
willing, are going to die in the regiment, we prize the honor of the
regiment, and Bogdanich knows it. Oh, we do prize it, old fellow! And
all this is not right, it's not right! You may take offense or not but I
always stick to mother truth. It's not right!"

And the staff captain rose and turned away from Rostov.


"That's twue, devil take it!" shouted Denisov, jumping up. "Now then,
Wostov, now then!"

Rostov, growing red and pale alternately, looked first at one officer
and then at the other.

"No, gentlemen, no... you mustn't think... I quite understand. You're
wrong to think that of me... I... for me... for the honor of the
regiment I'd... Ah well, I'll show that in action, and for me the honor
of the flag... Well, never mind, it's true I'm to blame, to blame all
round. Well, what else do you want?..."

"Come, that's right, Count!" cried the staff captain, turning round and
clapping Rostov on the shoulder with his big hand.

"I tell you," shouted Denisov, "he's a fine fellow."

"That's better, Count," said the staff captain, beginning to address
Rostov by his title, as if in recognition of his confession. "Go and
apologize, your excellency. Yes, go!"

"Gentlemen, I'll do anything. No one shall hear a word from me," said
Rostov in an imploring voice, "but I can't apologize, by God I can't, do
what you will! How can I go and apologize like a little boy asking
forgiveness?"

Denisov began to laugh.

"It'll be worse for you. Bogdanich is vindictive and you'll pay for your
obstinacy," said Kirsten.

"No, on my word it's not obstinacy! I can't describe the feeling. I
can't..."

"Well, it's as you like," said the staff captain. "And what has become
of that scoundrel?" he asked Denisov.

"He has weported himself sick, he's to be stwuck off the list tomowwow,"
muttered Denisov.

"It is an illness, there's no other way of explaining it," said the
staff captain.

"Illness or not, he'd better not cwoss my path. I'd kill him!" shouted
Denisov in a bloodthirsty tone.

Just then Zherkov entered the room.

"What brings you here?" cried the officers turning to the newcomer.

"We're to go into action, gentlemen! Mack has surrendered with his whole
army."

"It's not true!"

"I've seen him myself!"

"What? Saw the real Mack? With hands and feet?"

"Into action! Into action! Bring him a bottle for such news! But how did
you come here?"

"I've been sent back to the regiment all on account of that devil, Mack.
An Austrian general complained of me. I congratulated him on Mack's
arrival... What's the matter, Rostov? You look as if you'd just come out
of a hot bath."

"Oh, my dear fellow, we're in such a stew here these last two days."

The regimental adjutant came in and confirmed the news brought by
Zherkov. They were under orders to advance next day.

"We're going into action, gentlemen!"

"Well, thank God! We've been sitting here too long!"




CHAPTER VI

Kutuzov fell back toward Vienna, destroying behind him the bridges over
the rivers Inn (at Braunau) and Traun (near Linz). On October 23 the
Russian troops were crossing the river Enns. At midday the Russian
baggage train, the artillery, and columns of troops were defiling
through the town of Enns on both sides of the bridge.

It was a warm, rainy, autumnal day. The wide expanse that opened out
before the heights on which the Russian batteries stood guarding the
bridge was at times veiled by a diaphanous curtain of slanting rain, and
then, suddenly spread out in the sunlight, far-distant objects could be
clearly seen glittering as though freshly varnished. Down below, the
little town could be seen with its white, red-roofed houses, its
cathedral, and its bridge, on both sides of which streamed jostling
masses of Russian troops. At the bend of the Danube, vessels, an island,
and a castle with a park surrounded by the waters of the confluence of
the Enns and the Danube became visible, and the rocky left bank of the
Danube covered with pine forests, with a mystic background of green
treetops and bluish gorges. The turrets of a convent stood out beyond a
wild virgin pine forest, and far away on the other side of the Enns the
enemy's horse patrols could be discerned.

Among the field guns on the brow of the hill the general in command of
the rearguard stood with a staff officer, scanning the country through
his fieldglass. A little behind them Nesvitski, who had been sent to the
rearguard by the commander-in-chief, was sitting on the trail of a gun
carriage. A Cossack who accompanied him had handed him a knapsack and a
flask, and Nesvitski was treating some officers to pies and real
doppelkummel. The officers gladly gathered round him, some on their
knees, some squatting Turkish fashion on the wet grass.

"Yes, the Austrian prince who built that castle was no fool. It's a fine
place! Why are you not eating anything, gentlemen?" Nesvitski was
saying.

"Thank you very much, Prince," answered one of the officers, pleased to
be talking to a staff officer of such importance. "It's a lovely place!
We passed close to the park and saw two deer... and what a splendid
house!"

"Look, Prince," said another, who would have dearly liked to take
another pie but felt shy, and therefore pretended to be examining the
countryside--"See, our infantrymen have already got there. Look there in
the meadow behind the village, three of them are dragging something.
They'll ransack that castle," he remarked with evident approval.

"So they will," said Nesvitski. "No, but what I should like," added he,
munching a pie in his moist-lipped handsome mouth, "would be to slip in
over there."

He pointed with a smile to a turreted nunnery, and his eyes narrowed and
gleamed.

"That would be fine, gentlemen!"

The officers laughed.

"Just to flutter the nuns a bit. They say there are Italian girls among
them. On my word I'd give five years of my life for it!"

"They must be feeling dull, too," said one of the bolder officers,
laughing.

Meanwhile the staff officer standing in front pointed out something to
the general, who looked through his field glass.

"Yes, so it is, so it is," said the general angrily, lowering the field
glass and shrugging his shoulders, "so it is! They'll be fired on at the
crossing. And why are they dawdling there?"

On the opposite side the enemy could be seen by the naked eye, and from
their battery a milk-white cloud arose. Then came the distant report of
a shot, and our troops could be seen hurrying to the crossing.

Nesvitski rose, puffing, and went up to the general, smiling.

"Would not your excellency like a little refreshment?" he said.

"It's a bad business," said the general without answering him, "our men
have been wasting time."

"Hadn't I better ride over, your excellency?" asked Nesvitski.

"Yes, please do," answered the general, and he repeated the order that
had already once been given in detail: "and tell the hussars that they
are to cross last and to fire the bridge as I ordered; and the
inflammable material on the bridge must be reinspected."

"Very good," answered Nesvitski.

He called the Cossack with his horse, told him to put away the knapsack
and flask, and swung his heavy person easily into the saddle.

"I'll really call in on the nuns," he said to the officers who watched
him smilingly, and he rode off by the winding path down the hill.

"Now then, let's see how far it will carry, Captain. Just try!" said the
general, turning to an artillery officer. "Have a little fun to pass the
time."

"Crew, to your guns!" commanded the officer.

In a moment the men came running gaily from their campfires and began
loading.

"One!" came the command.

Number one jumped briskly aside. The gun rang out with a deafening
metallic roar, and a whistling grenade flew above the heads of our
troops below the hill and fell far short of the enemy, a little smoke
showing the spot where it burst.

The faces of officers and men brightened up at the sound. Everyone got
up and began watching the movements of our troops below, as plainly
visible as if but a stone's throw away, and the movements of the
approaching enemy farther off. At the same instant the sun came fully
out from behind the clouds, and the clear sound of the solitary shot and
the brilliance of the bright sunshine merged in a single joyous and
spirited impression.




CHAPTER VII

Two of the enemy's shots had already flown across the bridge, where
there was a crush. Halfway across stood Prince Nesvitski, who had
alighted from his horse and whose big body was jammed against the
railings. He looked back laughing to the Cossack who stood a few steps
behind him holding two horses by their bridles. Each time Prince
Nesvitski tried to move on, soldiers and carts pushed him back again and
pressed him against the railings, and all he could do was to smile.

"What a fine fellow you are, friend!" said the Cossack to a convoy
soldier with a wagon, who was pressing onto the infantrymen who were
crowded together close to his wheels and his horses. "What a fellow! You
can't wait a moment! Don't you see the general wants to pass?"

But the convoyman took no notice of the word "general" and shouted at
the soldiers who were blocking his way. "Hi there, boys! Keep to the
left! Wait a bit." But the soldiers, crowded together shoulder to
shoulder, their bayonets interlocking, moved over the bridge in a dense
mass. Looking down over the rails Prince Nesvitski saw the rapid, noisy
little waves of the Enns, which rippling and eddying round the piles of
the bridge chased each other along. Looking on the bridge he saw equally
uniform living waves of soldiers, shoulder straps, covered shakos,
knapsacks, bayonets, long muskets, and, under the shakos, faces with
broad cheekbones, sunken cheeks, and listless tired expressions, and
feet that moved through the sticky mud that covered the planks of the
bridge. Sometimes through the monotonous waves of men, like a fleck of
white foam on the waves of the Enns, an officer, in a cloak and with a
type of face different from that of the men, squeezed his way along;
sometimes like a chip of wood whirling in the river, an hussar on foot,
an orderly, or a townsman was carried through the waves of infantry; and
sometimes like a log floating down the river, an officers' or company's
baggage wagon, piled high, leather covered, and hemmed in on all sides,
moved across the bridge.

"It's as if a dam had burst," said the Cossack hopelessly. "Are there
many more of you to come?"

"A million all but one!" replied a waggish soldier in a torn coat, with
a wink, and passed on followed by another, an old man.

"If he" (he meant the enemy) "begins popping at the bridge now," said
the old soldier dismally to a comrade, "you'll forget to scratch
yourself."

That soldier passed on, and after him came another sitting on a cart.

"Where the devil have the leg bands been shoved to?" said an orderly,
running behind the cart and fumbling in the back of it.

And he also passed on with the wagon. Then came some merry soldiers who
had evidently been drinking.

"And then, old fellow, he gives him one in the teeth with the butt end
of his gun..." a soldier whose greatcoat was well tucked up said gaily,
with a wide swing of his arm.

"Yes, the ham was just delicious..." answered another with a loud laugh.
And they, too, passed on, so that Nesvitski did not learn who had been
struck on the teeth, or what the ham had to do with it.

"Bah! How they scurry. He just sends a ball and they think they'll all
be killed," a sergeant was saying angrily and reproachfully.

"As it flies past me, Daddy, the ball I mean," said a young soldier with
an enormous mouth, hardly refraining from laughing, "I felt like dying
of fright. I did, 'pon my word, I got that frightened!" said he, as if
bragging of having been frightened.

That one also passed. Then followed a cart unlike any that had gone
before. It was a German cart with a pair of horses led by a German, and
seemed loaded with a whole houseful of effects. A fine brindled cow with
a large udder was attached to the cart behind. A woman with an unweaned
baby, an old woman, and a healthy German girl with bright red cheeks
were sitting on some feather beds. Evidently these fugitives were
allowed to pass by special permission. The eyes of all the soldiers
turned toward the women, and while the vehicle was passing at foot pace
all the soldiers' remarks related to the two young ones. Every face bore
almost the same smile, expressing unseemly thoughts about the women.

"Just see, the German sausage is making tracks, too!"

"Sell me the missis," said another soldier, addressing the German, who,
angry and frightened, strode energetically along with downcast eyes.

"See how smart she's made herself! Oh, the devils!"

"There, Fedotov, you should be quartered on them!"

"I have seen as much before now, mate!"

"Where are you going?" asked an infantry officer who was eating an
apple, also half smiling as he looked at the handsome girl.

The German closed his eyes, signifying that he did not understand.

"Take it if you like," said the officer, giving the girl an apple.

The girl smiled and took it. Nesvitski like the rest of the men on the
bridge did not take his eyes off the women till they had passed. When
they had gone by, the same stream of soldiers followed, with the same
kind of talk, and at last all stopped. As often happens, the horses of a
convoy wagon became restive at the end of the bridge, and the whole
crowd had to wait.

"And why are they stopping? There's no proper order!" said the soldiers.
"Where are you shoving to? Devil take you! Can't you wait? It'll be
worse if he fires the bridge. See, here's an officer jammed in too"--
different voices were saying in the crowd, as the men looked at one
another, and all pressed toward the exit from the bridge.

Looking down at the waters of the Enns under the bridge, Nesvitski
suddenly heard a sound new to him, of something swiftly approaching...
something big, that splashed into the water.

"Just see where it carries to!" a soldier near by said sternly, looking
round at the sound.

"Encouraging us to get along quicker," said another uneasily.

The crowd moved on again. Nesvitski realized that it was a cannon ball.

"Hey, Cossack, my horse!" he said. "Now, then, you there! get out of the
way! Make way!"

With great difficulty he managed to get to his horse, and shouting
continually he moved on. The soldiers squeezed themselves to make way
for him, but again pressed on him so that they jammed his leg, and those
nearest him were not to blame for they were themselves pressed still
harder from behind.

"Nesvitski, Nesvitski! you numskull!" came a hoarse voice from behind
him.

Nesvitski looked round and saw, some fifteen paces away but separated by
the living mass of moving infantry, Vaska Denisov, red and shaggy, with
his cap on the back of his black head and a cloak hanging jauntily over
his shoulder.

"Tell these devils, these fiends, to let me pass!" shouted Denisov
evidently in a fit of rage, his coal-black eyes with their bloodshot
whites glittering and rolling as he waved his sheathed saber in a small
bare hand as red as his face.

"Ah, Vaska!" joyfully replied Nesvitski. "What's up with you?"

"The squadwon can't pass," shouted Vaska Denisov, showing his white
teeth fiercely and spurring his black thoroughbred Arab, which twitched
its ears as the bayonets touched it, and snorted, spurting white foam
from his bit, tramping the planks of the bridge with his hoofs, and
apparently ready to jump over the railings had his rider let him. "What
is this? They're like sheep! Just like sheep! Out of the way!... Let us
pass!... Stop there, you devil with the cart! I'll hack you with my
saber!" he shouted, actually drawing his saber from its scabbard and
flourishing it.

The soldiers crowded against one another with terrified faces, and
Denisov joined Nesvitski.

"How's it you're not drunk today?" said Nesvitski when the other had
ridden up to him.

"They don't even give one time to dwink!" answered Vaska Denisov. "They
keep dwagging the wegiment to and fwo all day. If they mean to fight,
let's fight. But the devil knows what this is."

"What a dandy you are today!" said Nesvitski, looking at Denisov's new
cloak and saddlecloth.

Denisov smiled, took out of his sabretache a handkerchief that diffused
a smell of perfume, and put it to Nesvitski's nose.

"Of course. I'm going into action! I've shaved, bwushed my teeth, and
scented myself."

The imposing figure of Nesvitski followed by his Cossack, and the
determination of Denisov who flourished his sword and shouted
frantically, had such an effect that they managed to squeeze through to
the farther side of the bridge and stopped the infantry. Beside the
bridge Nesvitski found the colonel to whom he had to deliver the order,
and having done this he rode back.

Having cleared the way Denisov stopped at the end of the bridge.
Carelessly holding in his stallion that was neighing and pawing the
ground, eager to rejoin its fellows, he watched his squadron draw
nearer. Then the clang of hoofs, as of several horses galloping,
resounded on the planks of the bridge, and the squadron, officers in
front and men four abreast, spread across the bridge and began to emerge
on his side of it.

The infantry who had been stopped crowded near the bridge in the
trampled mud and gazed with that particular feeling of ill-will,
estrangement, and ridicule with which troops of different arms usually
encounter one another at the clean, smart hussars who moved past them in
regular order.

"Smart lads! Only fit for a fair!" said one.

"What good are they? They're led about just for show!" remarked another.

"Don't kick up the dust, you infantry!" jested an hussar whose prancing
horse had splashed mud over some foot soldiers.

"I'd like to put you on a two days' march with a knapsack! Your fine
cords would soon get a bit rubbed," said an infantryman, wiping the mud
off his face with his sleeve. "Perched up there, you're more like a bird
than a man."

"There now, Zikin, they ought to put you on a horse. You'd look fine,"
said a corporal, chaffing a thin little soldier who bent under the
weight of his knapsack.

"Take a stick between your legs, that'll suit you for a horse!" the
hussar shouted back.




CHAPTER VIII

The last of the infantry hurriedly crossed the bridge, squeezing
together as they approached it as if passing through a funnel. At last
the baggage wagons had all crossed, the crush was less, and the last
battalion came onto the bridge. Only Denisov's squadron of hussars
remained on the farther side of the bridge facing the enemy, who could
be seen from the hill on the opposite bank but was not yet visible from
the bridge, for the horizon as seen from the valley through which the
river flowed was formed by the rising ground only half a mile away. At
the foot of the hill lay wasteland over which a few groups of our
Cossack scouts were moving. Suddenly on the road at the top of the high
ground, artillery and troops in blue uniform were seen. These were the
French. A group of Cossack scouts retired down the hill at a trot. All
the officers and men of Denisov's squadron, though they tried to talk of
other things and to look in other directions, thought only of what was
there on the hilltop, and kept constantly looking at the patches
appearing on the skyline, which they knew to be the enemy's troops. The
weather had cleared again since noon and the sun was descending brightly
upon the Danube and the dark hills around it. It was calm, and at
intervals the bugle calls and the shouts of the enemy could be heard
from the hill. There was no one now between the squadron and the enemy
except a few scattered skirmishers. An empty space of some seven hundred
yards was all that separated them. The enemy ceased firing, and that
stern, threatening, inaccessible, and intangible line which separates
two hostile armies was all the more clearly felt.

"One step beyond that boundary line which resembles the line dividing
the living from the dead lies uncertainty, suffering, and death. And
what is there? Who is there?--there beyond that field, that tree, that
roof lit up by the sun? No one knows, but one wants to know. You fear
and yet long to cross that line, and know that sooner or later it must
be crossed and you will have to find out what is there, just as you will
inevitably have to learn what lies the other side of death. But you are
strong, healthy, cheerful, and excited, and are surrounded by other such
excitedly animated and healthy men." So thinks, or at any rate feels,
anyone who comes in sight of the enemy, and that feeling gives a
particular glamour and glad keenness of impression to everything that
takes place at such moments.

On the high ground where the enemy was, the smoke of a cannon rose, and
a ball flew whistling over the heads of the hussar squadron. The
officers who had been standing together rode off to their places. The
hussars began carefully aligning their horses. Silence fell on the whole
squadron. All were looking at the enemy in front and at the squadron
commander, awaiting the word of command. A second and a third cannon
ball flew past. Evidently they were firing at the hussars, but the balls
with rapid rhythmic whistle flew over the heads of the horsemen and fell
somewhere beyond them. The hussars did not look round, but at the sound
of each shot, as at the word of command, the whole squadron with its
rows of faces so alike yet so different, holding its breath while the
ball flew past, rose in the stirrups and sank back again. The soldiers
without turning their heads glanced at one another, curious to see their
comrades' impression. Every face, from Denisov's to that of the bugler,
showed one common expression of conflict, irritation, and excitement,
around chin and mouth. The quartermaster frowned, looking at the
soldiers as if threatening to punish them. Cadet Mironov ducked every
time a ball flew past. Rostov on the left flank, mounted on his Rook--a
handsome horse despite its game leg--had the happy air of a schoolboy
called up before a large audience for an examination in which he feels
sure he will distinguish himself. He was glancing at everyone with a
clear, bright expression, as if asking them to notice how calmly he sat
under fire. But despite himself, on his face too that same indication of
something new and stern showed round the mouth.

"Who's that curtseying there? Cadet Miwonov! That's not wight! Look at
me," cried Denisov who, unable to keep still on one spot, kept turning
his horse in front of the squadron.

The black, hairy, snub-nosed face of Vaska Denisov, and his whole short
sturdy figure with the sinewy hairy hand and stumpy fingers in which he
held the hilt of his naked saber, looked just as it usually did,
especially toward evening when he had emptied his second bottle; he was
only redder than usual. With his shaggy head thrown back like birds when
they drink, pressing his spurs mercilessly into the sides of his good
horse, Bedouin, and sitting as though falling backwards in the saddle,
he galloped to the other flank of the squadron and shouted in a hoarse
voice to the men to look to their pistols. He rode up to Kirsten. The
staff captain on his broad-backed, steady mare came at a walk to meet
him. His face with its long mustache was serious as always, only his
eyes were brighter than usual.

"Well, what about it?" said he to Denisov. "It won't come to a fight.
You'll see--we shall retire."

"The devil only knows what they're about!" muttered Denisov. "Ah,
Wostov," he cried noticing the cadet's bright face, "you've got it at
last."

And he smiled approvingly, evidently pleased with the cadet. Rostov felt
perfectly happy. Just then the commander appeared on the bridge. Denisov
galloped up to him.

"Your excellency! Let us attack them! I'll dwive them off."

"Attack indeed!" said the colonel in a bored voice, puckering up his
face as if driving off a troublesome fly. "And why are you stopping
here? Don't you see the skirmishers are retreating? Lead the squadron
back."

The squadron crossed the bridge and drew out of range of fire without
having lost a single man. The second squadron that had been in the front
line followed them across and the last Cossacks quitted the farther side
of the river.

The two Pavlograd squadrons, having crossed the bridge, retired up the
hill one after the other. Their colonel, Karl Bogdanich Schubert, came
up to Denisov's squadron and rode at a footpace not far from Rostov,
without taking any notice of him although they were now meeting for the
first time since their encounter concerning Telyanin. Rostov, feeling
that he was at the front and in the power of a man toward whom he now
admitted that he had been to blame, did not lift his eyes from the
colonel's athletic back, his nape covered with light hair, and his red
neck. It seemed to Rostov that Bogdanich was only pretending not to
notice him, and that his whole aim now was to test the cadet's courage,
so he drew himself up and looked around him merrily; then it seemed to
him that Bogdanich rode so near in order to show him his courage. Next
he thought that his enemy would send the squadron on a desperate attack
just to punish him--Rostov. Then he imagined how, after the attack,
Bogdanich would come up to him as he lay wounded and would magnanimously
extend the hand of reconciliation.

The high-shouldered figure of Zherkov, familiar to the Pavlograds as he
had but recently left their regiment, rode up to the colonel. After his
dismissal from headquarters Zherkov had not remained in the regiment,
saying he was not such a fool as to slave at the front when he could get
more rewards by doing nothing on the staff, and had succeeded in
attaching himself as an orderly officer to Prince Bagration. He now came
to his former chief with an order from the commander of the rear guard.

"Colonel," he said, addressing Rostov's enemy with an air of gloomy
gravity and glancing round at his comrades, "there is an order to stop
and fire the bridge."

"An order to who?" asked the colonel morosely.

"I don't myself know 'to who,'" replied the cornet in a serious tone,
"but the prince told me to 'go and tell the colonel that the hussars
must return quickly and fire the bridge.'"

Zherkov was followed by an officer of the suite who rode up to the
colonel of hussars with the same order. After him the stout Nesvitski
came galloping up on a Cossack horse that could scarcely carry his
weight.

"How's this, Colonel?" he shouted as he approached. "I told you to fire
the bridge, and now someone has gone and blundered; they are all beside
themselves over there and one can't make anything out."

The colonel deliberately stopped the regiment and turned to Nesvitski.

"You spoke to me of inflammable material," said he, "but you said
nothing about firing it."

"But, my dear sir," said Nesvitski as he drew up, taking off his cap and
smoothing his hair wet with perspiration with his plump hand, "wasn't I
telling you to fire the bridge, when inflammable material had been put
in position?"

"I am not your 'dear sir,' Mr. Staff Officer, and you did not tell me to
burn the bridge! I know the service, and it is my habit orders strictly
to obey. You said the bridge would be burned, but who would it burn, I
could not know by the holy spirit!"

"Ah, that's always the way!" said Nesvitski with a wave of the hand.
"How did you get here?" said he, turning to Zherkov.

"On the same business. But you are damp! Let me wring you out!"

"You were saying, Mr. Staff Officer..." continued the colonel in an
offended tone.

"Colonel," interrupted the officer of the suite, "You must be quick or
the enemy will bring up his guns to use grapeshot."

The colonel looked silently at the officer of the suite, at the stout
staff officer, and at Zherkov, and he frowned.

"I will the bridge fire," he said in a solemn tone as if to announce
that in spite of all the unpleasantness he had to endure he would still
do the right thing.

Striking his horse with his long muscular legs as if it were to blame
for everything, the colonel moved forward and ordered the second
squadron, that in which Rostov was serving under Denisov, to return to
the bridge.

"There, it's just as I thought," said Rostov to himself. "He wishes to
test me!" His heart contracted and the blood rushed to his face. "Let
him see whether I am a coward!" he thought.

Again on all the bright faces of the squadron the serious expression
appeared that they had worn when under fire. Rostov watched his enemy,
the colonel, closely--to find in his face confirmation of his own
conjecture, but the colonel did not once glance at Rostov, and looked as
he always did when at the front, solemn and stern. Then came the word of
command.

"Look sharp! Look sharp!" several voices repeated around him.

Their sabers catching in the bridles and their spurs jingling, the
hussars hastily dismounted, not knowing what they were to do. The men
were crossing themselves. Rostov no longer looked at the colonel, he had
no time. He was afraid of falling behind the hussars, so much afraid
that his heart stood still. His hand trembled as he gave his horse into
an orderly's charge, and he felt the blood rush to his heart with a
thud. Denisov rode past him, leaning back and shouting something. Rostov
saw nothing but the hussars running all around him, their spurs catching
and their sabers clattering.

"Stretchers!" shouted someone behind him.

Rostov did not think what this call for stretchers meant; he ran on,
trying only to be ahead of the others; but just at the bridge, not
looking at the ground, he came on some sticky, trodden mud, stumbled,
and fell on his hands. The others outstripped him.

"At boss zides, Captain," he heard the voice of the colonel, who, having
ridden ahead, had pulled up his horse near the bridge, with a
triumphant, cheerful face.

Rostov wiping his muddy hands on his breeches looked at his enemy and
was about to run on, thinking that the farther he went to the front the
better. But Bogdanich, without looking at or recognizing Rostov, shouted
to him:

"Who's that running on the middle of the bridge? To the right! Come
back, Cadet!" he cried angrily; and turning to Denisov, who, showing off
his courage, had ridden on to the planks of the bridge:

"Why run risks, Captain? You should dismount," he said.

"Oh, every bullet has its billet," answered Vaska Denisov, turning in
his saddle.

Meanwhile Nesvitski, Zherkov, and the officer of the suite were standing
together out of range of the shots, watching, now the small group of men
with yellow shakos, dark-green jackets braided with cord, and blue
riding breeches, who were swarming near the bridge, and then at what was
approaching in the distance from the opposite side--the blue uniforms
and groups with horses, easily recognizable as artillery.

"Will they burn the bridge or not? Who'll get there first? Will they get
there and fire the bridge or will the French get within grapeshot range
and wipe them out?" These were the questions each man of the troops on
the high ground above the bridge involuntarily asked himself with a
sinking heart--watching the bridge and the hussars in the bright evening
light and the blue tunics advancing from the other side with their
bayonets and guns.

"Ugh. The hussars will get it hot!" said Nesvitski; "they are within
grapeshot range now."

"He shouldn't have taken so many men," said the officer of the suite.

"True enough," answered Nesvitski; "two smart fellows could have done
the job just as well."

"Ah, your excellency," put in Zherkov, his eyes fixed on the hussars,
but still with that naive air that made it impossible to know whether he
was speaking in jest or in earnest. "Ah, your excellency! How you look
at things! Send two men? And who then would give us the Vladimir medal
and ribbon? But now, even if they do get peppered, the squadron may be
recommended for honors and he may get a ribbon. Our Bogdanich knows how
things are done."

"There now!" said the officer of the suite, "that's grapeshot."

He pointed to the French guns, the limbers of which were being detached
and hurriedly removed.

On the French side, amid the groups with cannon, a cloud of smoke
appeared, then a second and a third almost simultaneously, and at the
moment when the first report was heard a fourth was seen. Then two
reports one after another, and a third.

"Oh! Oh!" groaned Nesvitski as if in fierce pain, seizing the officer of
the suite by the arm. "Look! A man has fallen! Fallen, fallen!"

"Two, I think."

"If I were Tsar I would never go to war," said Nesvitski, turning away.

The French guns were hastily reloaded. The infantry in their blue
uniforms advanced toward the bridge at a run. Smoke appeared again but
at irregular intervals, and grapeshot cracked and rattled onto the
bridge. But this time Nesvitski could not see what was happening there,
as a dense cloud of smoke arose from it. The hussars had succeeded in
setting it on fire and the French batteries were now firing at them, no
longer to hinder them but because the guns were trained and there was
someone to fire at.

The French had time to fire three rounds of grapeshot before the hussars
got back to their horses. Two were misdirected and the shot went too
high, but the last round fell in the midst of a group of hussars and
knocked three of them over.

Rostov, absorbed by his relations with Bogdanich, had paused on the
bridge not knowing what to do. There was no one to hew down (as he had
always imagined battles to himself), nor could he help to fire the
bridge because he had not brought any burning straw with him like the
other soldiers. He stood looking about him, when suddenly he heard a
rattle on the bridge as if nuts were being spilt, and the hussar nearest
to him fell against the rails with a groan. Rostov ran up to him with
the others. Again someone shouted, "Stretchers!" Four men seized the
hussar and began lifting him.

"Oooh! For Christ's sake let me alone!" cried the wounded man, but still
he was lifted and laid on the stretcher.

Nicholas Rostov turned away and, as if searching for something, gazed
into the distance, at the waters of the Danube, at the sky, and at the
sun. How beautiful the sky looked; how blue, how calm, and how deep! How
bright and glorious was the setting sun! With what soft glitter the
waters of the distant Danube shone. And fairer still were the faraway
blue mountains beyond the river, the nunnery, the mysterious gorges, and
the pine forests veiled in the mist of their summits... There was peace
and happiness... "I should wish for nothing else, nothing, if only I
were there," thought Rostov. "In myself alone and in that sunshine there
is so much happiness; but here... groans, suffering, fear, and this
uncertainty and hurry... There--they are shouting again, and again are
all running back somewhere, and I shall run with them, and it, death, is
here above me and around... Another instant and I shall never again see
the sun, this water, that gorge!..."

At that instant the sun began to hide behind the clouds, and other
stretchers came into view before Rostov. And the fear of death and of
the stretchers, and love of the sun and of life, all merged into one
feeling of sickening agitation.

"O Lord God! Thou who art in that heaven, save, forgive, and protect
me!" Rostov whispered.

The hussars ran back to the men who held their horses; their voices
sounded louder and calmer, the stretchers disappeared from sight.

"Well, fwiend? So you've smelt powdah!" shouted Vaska Denisov just above
his ear.

"It's all over; but I am a coward--yes, a coward!" thought Rostov, and
sighing deeply he took Rook, his horse, which stood resting one foot,
from the orderly and began to mount.

"Was that grapeshot?" he asked Denisov.

"Yes and no mistake!" cried Denisov. "You worked like wegular bwicks and
it's nasty work! An attack's pleasant work! Hacking away at the dogs!
But this sort of thing is the very devil, with them shooting at you like
a target."

And Denisov rode up to a group that had stopped near Rostov, composed of
the colonel, Nesvitski, Zherkov, and the officer from the suite.

"Well, it seems that no one has noticed," thought Rostov. And this was
true. No one had taken any notice, for everyone knew the sensation which
the cadet under fire for the first time had experienced.

"Here's something for you to report," said Zherkov. "See if I don't get
promoted to a sublieutenancy."

"Inform the prince that I the bridge fired!" said the colonel
triumphantly and gaily.

"And if he asks about the losses?"

"A trifle," said the colonel in his bass voice: "two hussars wounded,
and one knocked out," he added, unable to restrain a happy smile, and
pronouncing the phrase "knocked out" with ringing distinctness.




CHAPTER IX

Pursued by the French army of a hundred thousand men under the command
of Bonaparte, encountering a population that was unfriendly to it,
losing confidence in its allies, suffering from shortness of supplies,
and compelled to act under conditions of war unlike anything that had
been foreseen, the Russian army of thirty-five thousand men commanded by
Kutuzov was hurriedly retreating along the Danube, stopping where
overtaken by the enemy and fighting rearguard actions only as far as
necessary to enable it to retreat without losing its heavy equipment.
There had been actions at Lambach, Amstetten, and Melk; but despite the
courage and endurance--acknowledged even by the enemy--with which the
Russians fought, the only consequence of these actions was a yet more
rapid retreat. Austrian troops that had escaped capture at Ulm and had
joined Kutuzov at Braunau now separated from the Russian army, and
Kutuzov was left with only his own weak and exhausted forces. The
defense of Vienna was no longer to be thought of. Instead of an
offensive, the plan of which, carefully prepared in accord with the
modern science of strategics, had been handed to Kutuzov when he was in
Vienna by the Austrian Hofkriegsrath, the sole and almost unattainable
aim remaining for him was to effect a junction with the forces that were
advancing from Russia, without losing his army as Mack had done at Ulm.

On the twenty-eighth of October Kutuzov with his army crossed to the
left bank of the Danube and took up a position for the first time with
the river between himself and the main body of the French. On the
thirtieth he attacked Mortier's division, which was on the left bank,
and broke it up. In this action for the first time trophies were taken:
banners, cannon, and two enemy generals. For the first time, after a
fortnight's retreat, the Russian troops had halted and after a fight had
not only held the field but had repulsed the French. Though the troops
were ill-clad, exhausted, and had lost a third of their number in
killed, wounded, sick, and stragglers; though a number of sick and
wounded had been abandoned on the other side of the Danube with a letter
in which Kutuzov entrusted them to the humanity of the enemy; and though
the big hospitals and the houses in Krems converted into military
hospitals could no longer accommodate all the sick and wounded, yet the
stand made at Krems and the victory over Mortier raised the spirits of
the army considerably. Throughout the whole army and at headquarters
most joyful though erroneous rumors were rife of the imaginary approach
of columns from Russia, of some victory gained by the Austrians, and of
the retreat of the frightened Bonaparte.

Prince Andrew during the battle had been in attendance on the Austrian
General Schmidt, who was killed in the action. His horse had been
wounded under him and his own arm slightly grazed by a bullet. As a mark
of the commander-in-chief's special favor he was sent with the news of
this victory to the Austrian court, now no longer at Vienna (which was
threatened by the French) but at Brunn. Despite his apparently delicate
build Prince Andrew could endure physical fatigue far better than many
very muscular men, and on the night of the battle, having arrived at
Krems excited but not weary, with dispatches from Dokhturov to Kutuzov,
he was sent immediately with a special dispatch to Brunn. To be so sent
meant not only a reward but an important step toward promotion.

The night was dark but starry, the road showed black in the snow that
had fallen the previous day--the day of the battle. Reviewing his
impressions of the recent battle, picturing pleasantly to himself the
impression his news of a victory would create, or recalling the send-off
given him by the commander-in-chief and his fellow officers, Prince
Andrew was galloping along in a post chaise enjoying the feelings of a
man who has at length begun to attain a long-desired happiness. As soon
as he closed his eyes his ears seemed filled with the rattle of the
wheels and the sensation of victory. Then he began to imagine that the
Russians were running away and that he himself was killed, but he
quickly roused himself with a feeling of joy, as if learning afresh that
this was not so but that on the contrary the French had run away. He
again recalled all the details of the victory and his own calm courage
during the battle, and feeling reassured he dozed off.... The dark
starry night was followed by a bright cheerful morning. The snow was
thawing in the sunshine, the horses galloped quickly, and on both sides
of the road were forests of different kinds, fields, and villages.

At one of the post stations he overtook a convoy of Russian wounded. The
Russian officer in charge of the transport lolled back in the front
cart, shouting and scolding a soldier with coarse abuse. In each of the
long German carts six or more pale, dirty, bandaged men were being
jolted over the stony road. Some of them were talking (he heard Russian
words), others were eating bread; the more severely wounded looked
silently, with the languid interest of sick children, at the envoy
hurrying past them.

Prince Andrew told his driver to stop, and asked a soldier in what
action they had been wounded. "Day before yesterday, on the Danube,"
answered the soldier. Prince Andrew took out his purse and gave the
soldier three gold pieces.

"That's for them all," he said to the officer who came up.

"Get well soon, lads!" he continued, turning to the soldiers. "There's
plenty to do still."

"What news, sir?" asked the officer, evidently anxious to start a
conversation.

"Good news!... Go on!" he shouted to the driver, and they galloped on.

It was already quite dark when Prince Andrew rattled over the paved
streets of Brunn and found himself surrounded by high buildings, the
lights of shops, houses, and street lamps, fine carriages, and all that
atmosphere of a large and active town which is always so attractive to a
soldier after camp life. Despite his rapid journey and sleepless night,
Prince Andrew when he drove up to the palace felt even more vigorous and
alert than he had done the day before. Only his eyes gleamed feverishly
and his thoughts followed one another with extraordinary clearness and
rapidity. He again vividly recalled the details of the battle, no longer
dim, but definite and in the concise form in which he imagined himself
stating them to the Emperor Francis. He vividly imagined the casual
questions that might be put to him and the answers he would give. He
expected to be at once presented to the Emperor. At the chief entrance
to the palace, however, an official came running out to meet him, and
learning that he was a special messenger led him to another entrance.

"To the right from the corridor, Euer Hochgeboren! There you will find
the adjutant on duty," said the official. "He will conduct you to the
Minister of War."

The adjutant on duty, meeting Prince Andrew, asked him to wait, and went
in to the Minister of War. Five minutes later he returned and bowing
with particular courtesy ushered Prince Andrew before him along a
corridor to the cabinet where the Minister of War was at work. The
adjutant by his elaborate courtesy appeared to wish to ward off any
attempt at familiarity on the part of the Russian messenger.

Prince Andrew's joyous feeling was considerably weakened as he
approached the door of the minister's room. He felt offended, and
without his noticing it the feeling of offense immediately turned into
one of disdain which was quite uncalled for. His fertile mind instantly
suggested to him a point of view which gave him a right to despise the
adjutant and the minister. "Away from the smell of powder, they probably
think it easy to gain victories!" he thought. His eyes narrowed
disdainfully, he entered the room of the Minister of War with peculiarly
deliberate steps. This feeling of disdain was heightened when he saw the
minister seated at a large table reading some papers and making pencil
notes on them, and for the first two or three minutes taking no notice
of his arrival. A wax candle stood at each side of the minister's bent
bald head with its gray temples. He went on reading to the end, without
raising his eyes at the opening of the door and the sound of footsteps.

"Take this and deliver it," said he to his adjutant, handing him the
papers and still taking no notice of the special messenger.

Prince Andrew felt that either the actions of Kutuzov's army interested
the Minister of War less than any of the other matters he was concerned
with, or he wanted to give the Russian special messenger that
impression. "But that is a matter of perfect indifference to me," he
thought. The minister drew the remaining papers together, arranged them
evenly, and then raised his head. He had an intellectual and distinctive
head, but the instant he turned to Prince Andrew the firm, intelligent
expression on his face changed in a way evidently deliberate and
habitual to him. His face took on the stupid artificial smile (which
does not even attempt to hide its artificiality) of a man who is
continually receiving many petitioners one after another.

"From General Field Marshal Kutuzov?" he asked. "I hope it is good news?
There has been an encounter with Mortier? A victory? It was high time!"

He took the dispatch which was addressed to him and began to read it
with a mournful expression.

"Oh, my God! My God! Schmidt!" he exclaimed in German. "What a calamity!
What a calamity!"

Having glanced through the dispatch he laid it on the table and looked
at Prince Andrew, evidently considering something.

"Ah what a calamity! You say the affair was decisive? But Mortier is not
captured." Again he pondered. "I am very glad you have brought good
news, though Schmidt's death is a heavy price to pay for the victory.
His Majesty will no doubt wish to see you, but not today. I thank you!
You must have a rest. Be at the levee tomorrow after the parade.
However, I will let you know."

The stupid smile, which had left his face while he was speaking,
reappeared.

"Au revoir! Thank you very much. His Majesty will probably desire to see
you," he added, bowing his head.

When Prince Andrew left the palace he felt that all the interest and
happiness the victory had afforded him had been now left in the
indifferent hands of the Minister of War and the polite adjutant. The
whole tenor of his thoughts instantaneously changed; the battle seemed
the memory of a remote event long past.




CHAPTER X

Prince Andrew stayed at Brunn with Bilibin, a Russian acquaintance of
his in the diplomatic service.

"Ah, my dear prince! I could not have a more welcome visitor," said
Bilibin as he came out to meet Prince Andrew. "Franz, put the prince's
things in my bedroom," said he to the servant who was ushering Bolkonski
in. "So you're a messenger of victory, eh? Splendid! And I am sitting
here ill, as you see."

After washing and dressing, Prince Andrew came into the diplomat's
luxurious study and sat down to the dinner prepared for him. Bilibin
settled down comfortably beside the fire.

After his journey and the campaign during which he had been deprived of
all the comforts of cleanliness and all the refinements of life, Prince
Andrew felt a pleasant sense of repose among luxurious surroundings such
as he had been accustomed to from childhood. Besides it was pleasant,
after his reception by the Austrians, to speak if not in Russian (for
they were speaking French) at least with a Russian who would, he
supposed, share the general Russian antipathy to the Austrians which was
then particularly strong.

Bilibin was a man of thirty-five, a bachelor, and of the same circle as
Prince Andrew. They had known each other previously in Petersburg, but
had become more intimate when Prince Andrew was in Vienna with Kutuzov.
Just as Prince Andrew was a young man who gave promise of rising high in
the military profession, so to an even greater extent Bilibin gave
promise of rising in his diplomatic career. He still a young man but no
longer a young diplomat, as he had entered the service at the age of
sixteen, had been in Paris and Copenhagen, and now held a rather
important post in Vienna. Both the foreign minister and our ambassador
in Vienna knew him and valued him. He was not one of those many
diplomats who are esteemed because they have certain negative qualities,
avoid doing certain things, and speak French. He was one of those, who,
liking work, knew how to do it, and despite his indolence would
sometimes spend a whole night at his writing table. He worked well
whatever the import of his work. It was not the question "What for?" but
the question "How?" that interested him. What the diplomatic matter
might be he did not care, but it gave him great pleasure to prepare a
circular, memorandum, or report, skillfully, pointedly, and elegantly.
Bilibin's services were valued not only for what he wrote, but also for
his skill in dealing and conversing with those in the highest spheres.

Bilibin liked conversation as he liked work, only when it could be made
elegantly witty. In society he always awaited an opportunity to say
something striking and took part in a conversation only when that was
possible. His conversation was always sprinkled with wittily original,
finished phrases of general interest. These sayings were prepared in the
inner laboratory of his mind in a portable form as if intentionally, so
that insignificant society people might carry them from drawing room to
drawing room. And, in fact, Bilibin's witticisms were hawked about in
the Viennese drawing rooms and often had an influence on matters
considered important.

His thin, worn, sallow face was covered with deep wrinkles, which always
looked as clean and well washed as the tips of one's fingers after a
Russian bath. The movement of these wrinkles formed the principal play
of expression on his face. Now his forehead would pucker into deep folds
and his eyebrows were lifted, then his eyebrows would descend and deep
wrinkles would crease his cheeks. His small, deep-set eyes always
twinkled and looked out straight.

"Well, now tell me about your exploits," said he.

Bolkonski, very modestly without once mentioning himself, described the
engagement and his reception by the Minister of War.

"They received me and my news as one receives a dog in a game of
skittles," said he in conclusion.

Bilibin smiled and the wrinkles on his face disappeared.

"Cependant, mon cher," he remarked, examining his nails from a distance
and puckering the skin above his left eye, "malgre la haute estime que
je professe pour the Orthodox Russian army, j'avoue que votre victoire
n'est pas des plus victorieuses." *


* "But my dear fellow, with all my respect for the Orthodox Russian
army, I must say that your victory was not particularly victorious."

He went on talking in this way in French, uttering only those words in
Russian on which he wished to put a contemptuous emphasis.

"Come now! You with all your forces fall on the unfortunate Mortier and
his one division, and even then Mortier slips through your fingers!
Where's the victory?"

"But seriously," said Prince Andrew, "we can at any rate say without
boasting that it was a little better than at Ulm..."

"Why didn't you capture one, just one, marshal for us?"

"Because not everything happens as one expects or with the smoothness of
a parade. We had expected, as I told you, to get at their rear by seven
in the morning but had not reached it by five in the afternoon."

"And why didn't you do it at seven in the morning? You ought to have
been there at seven in the morning," returned Bilibin with a smile. "You
ought to have been there at seven in the morning."

"Why did you not succeed in impressing on Bonaparte by diplomatic
methods that he had better leave Genoa alone?" retorted Prince Andrew in
the same tone.

"I know," interrupted Bilibin, "you're thinking it's very easy to take
marshals, sitting on a sofa by the fire! That is true, but still why
didn't you capture him? So don't be surprised if not only the Minister
of War but also his Most August Majesty the Emperor and King Francis is
not much delighted by your victory. Even I, a poor secretary of the
Russian Embassy, do not feel any need in token of my joy to give my
Franz a thaler, or let him go with his Liebchen to the Prater... True,
we have no Prater here..."

He looked straight at Prince Andrew and suddenly unwrinkled his
forehead.

"It is now my turn to ask you 'why?' mon cher," said Bolkonski. "I
confess I do not understand: perhaps there are diplomatic subtleties
here beyond my feeble intelligence, but I can't make it out. Mack loses
a whole army, the Archduke Ferdinand and the Archduke Karl give no signs
of life and make blunder after blunder. Kutuzov alone at last gains a
real victory, destroying the spell of the invincibility of the French,
and the Minister of War does not even care to hear the details."

"That's just it, my dear fellow. You see it's hurrah for the Tsar, for
Russia, for the Orthodox Greek faith! All that is beautiful, but what do
we, I mean the Austrian court, care for your victories? Bring us nice
news of a victory by the Archduke Karl or Ferdinand (one archduke's as
good as another, as you know) and even if it is only over a fire brigade
of Bonaparte's, that will be another story and we'll fire off some
cannon! But this sort of thing seems done on purpose to vex us. The
Archduke Karl does nothing, the Archduke Ferdinand disgraces himself.
You abandon Vienna, give up its defense--as much as to say: 'Heaven is
with us, but heaven help you and your capital!' The one general whom we
all loved, Schmidt, you expose to a bullet, and then you congratulate us
on the victory! Admit that more irritating news than yours could not
have been conceived. It's as if it had been done on purpose, on purpose.
Besides, suppose you did gain a brilliant victory, if even the Archduke
Karl gained a victory, what effect would that have on the general course
of events? It's too late now when Vienna is occupied by the French
army!"

"What? Occupied? Vienna occupied?"

"Not only occupied, but Bonaparte is at Schonbrunn, and the count, our
dear Count Vrbna, goes to him for orders."

After the fatigues and impressions of the journey, his reception, and
especially after having dined, Bolkonski felt that he could not take in
the full significance of the words he heard.

"Count Lichtenfels was here this morning," Bilibin continued, "and
showed me a letter in which the parade of the French in Vienna was fully
described: Prince Murat et tout le tremblement... You see that your
victory is not a matter for great rejoicing and that you can't be
received as a savior."

"Really I don't care about that, I don't care at all," said Prince
Andrew, beginning to understand that his news of the battle before Krems
was really of small importance in view of such events as the fall of
Austria's capital. "How is it Vienna was taken? What of the bridge and
its celebrated bridgehead and Prince Auersperg? We heard reports that
Prince Auersperg was defending Vienna?" he said.

"Prince Auersperg is on this, on our side of the river, and is defending
us--doing it very badly, I think, but still he is defending us. But
Vienna is on the other side. No, the bridge has not yet been taken and I
hope it will not be, for it is mined and orders have been given to blow
it up. Otherwise we should long ago have been in the mountains of
Bohemia, and you and your army would have spent a bad quarter of an hour
between two fires."

"But still this does not mean that the campaign is over," said Prince
Andrew.

"Well, I think it is. The bigwigs here think so too, but they daren't
say so. It will be as I said at the beginning of the campaign, it won't
be your skirmishing at Durrenstein, or gunpowder at all, that will
decide the matter, but those who devised it," said Bilibin quoting one
of his own mots, releasing the wrinkles on his forehead, and pausing.
"The only question is what will come of the meeting between the Emperor
Alexander and the King of Prussia in Berlin? If Prussia joins the
Allies, Austria's hand will be forced and there will be war. If not it
is merely a question of settling where the preliminaries of the new
Campo Formio are to be drawn up."

"What an extraordinary genius!" Prince Andrew suddenly exclaimed,
clenching his small hand and striking the table with it, "and what luck
the man has!"

"Buonaparte?" said Bilibin inquiringly, puckering up his forehead to
indicate that he was about to say something witty. "Buonaparte?" he
repeated, accentuating the u: "I think, however, now that he lays down
laws for Austria at Schonbrunn, il faut lui faire grace de l'u! * I
shall certainly adopt an innovation and call him simply Bonaparte!"


* "We must let him off the u!"

"But joking apart," said Prince Andrew, "do you really think the
campaign is over?"

"This is what I think. Austria has been made a fool of, and she is not
used to it. She will retaliate. And she has been fooled in the first
place because her provinces have been pillaged--they say the Holy
Russian army loots terribly--her army is destroyed, her capital taken,
and all this for the beaux yeux * of His Sardinian Majesty. And
therefore--this is between ourselves--I instinctively feel that we are
being deceived, my instinct tells me of negotiations with France and
projects for peace, a secret peace concluded separately."


* Fine eyes.

"Impossible!" cried Prince Andrew. "That would be too base."

"If we live we shall see," replied Bilibin, his face again becoming
smooth as a sign that the conversation was at an end.

When Prince Andrew reached the room prepared for him and lay down in a
clean shirt on the feather bed with its warmed and fragrant pillows, he
felt that the battle of which he had brought tidings was far, far away
from him. The alliance with Prussia, Austria's treachery, Bonaparte's
new triumph, tomorrow's levee and parade, and the audience with the
Emperor Francis occupied his thoughts.

He closed his eyes, and immediately a sound of cannonading, of musketry
and the rattling of carriage wheels seemed to fill his ears, and now
again drawn out in a thin line the musketeers were descending the hill,
the French were firing, and he felt his heart palpitating as he rode
forward beside Schmidt with the bullets merrily whistling all around,
and he experienced tenfold the joy of living, as he had not done since
childhood.

He woke up...

"Yes, that all happened!" he said, and, smiling happily to himself like
a child, he fell into a deep, youthful slumber.




CHAPTER XI

Next day he woke late. Recalling his recent impressions, the first
thought that came into his mind was that today he had to be presented to
the Emperor Francis; he remembered the Minister of War, the polite
Austrian adjutant, Bilibin, and last night's conversation. Having
dressed for his attendance at court in full parade uniform, which he had
not worn for a long time, he went into Bilibin's study fresh, animated,
and handsome, with his hand bandaged. In the study were four gentlemen
of the diplomatic corps. With Prince Hippolyte Kuragin, who was a
secretary to the embassy, Bolkonski was already acquainted. Bilibin
introduced him to the others.

The gentlemen assembled at Bilibin's were young, wealthy, gay society
men, who here, as in Vienna, formed a special set which Bilibin, their
leader, called les notres. * This set, consisting almost exclusively of
diplomats, evidently had its own interests which had nothing to do with
war or politics but related to high society, to certain women, and to
the official side of the service. These gentlemen received Prince Andrew
as one of themselves, an honor they did not extend to many. From
politeness and to start conversation, they asked him a few questions
about the army and the battle, and then the talk went off into merry
jests and gossip.


* Ours.

"But the best of it was," said one, telling of the misfortune of a
fellow diplomat, "that the Chancellor told him flatly that his
appointment to London was a promotion and that he was so to regard it.
Can you fancy the figure he cut?..."

"But the worst of it, gentlemen--I am giving Kuragin away to you--is
that that man suffers, and this Don Juan, wicked fellow, is taking
advantage of it!"

Prince Hippolyte was lolling in a lounge chair with his legs over its
arm. He began to laugh.

"Tell me about that!" he said.

"Oh, you Don Juan! You serpent!" cried several voices.

"You, Bolkonski, don't know," said Bilibin turning to Prince Andrew,
"that all the atrocities of the French army (I nearly said of the
Russian army) are nothing compared to what this man has been doing among
the women!"

"La femme est la compagne de l'homme," * announced Prince Hippolyte, and
began looking through a lorgnette at his elevated legs.


* "Woman is man's companion."

Bilibin and the rest of "ours" burst out laughing in Hippolyte's face,
and Prince Andrew saw that Hippolyte, of whom--he had to admit--he had
almost been jealous on his wife's account, was the butt of this set.

"Oh, I must give you a treat," Bilibin whispered to Bolkonski. "Kuragin
is exquisite when he discusses politics--you should see his gravity!"

He sat down beside Hippolyte and wrinkling his forehead began talking to
him about politics. Prince Andrew and the others gathered round these
two.

"The Berlin cabinet cannot express a feeling of alliance," began
Hippolyte gazing round with importance at the others, "without
expressing... as in its last note... you understand... Besides, unless
His Majesty the Emperor derogates from the principle of our alliance...

"Wait, I have not finished..." he said to Prince Andrew, seizing him by
the arm, "I believe that intervention will be stronger than
nonintervention. And..." he paused. "Finally one cannot impute the
nonreceipt of our dispatch of November 18. That is how it will end." And
he released Bolkonski's arm to indicate that he had now quite finished.

"Demosthenes, I know thee by the pebble thou secretest in thy golden
mouth!" said Bilibin, and the mop of hair on his head moved with
satisfaction.

Everybody laughed, and Hippolyte louder than anyone. He was evidently
distressed, and breathed painfully, but could not restrain the wild
laughter that convulsed his usually impassive features.

"Well now, gentlemen," said Bilibin, "Bolkonski is my guest in this
house and in Brunn itself. I want to entertain him as far as I can, with
all the pleasures of life here. If we were in Vienna it would be easy,
but here, in this wretched Moravian hole, it is more difficult, and I
beg you all to help me. Brunn's attractions must be shown him. You can
undertake the theater, I society, and you, Hippolyte, of course the
women."

"We must let him see Amelie, she's exquisite!" said one of "ours,"
kissing his finger tips.

"In general we must turn this bloodthirsty soldier to more humane
interests," said Bilibin.

"I shall scarcely be able to avail myself of your hospitality,
gentlemen, it is already time for me to go," replied Prince Andrew
looking at his watch.

"Where to?"

"To the Emperor."

"Oh! Oh! Oh! Well, au revoir, Bolkonski! Au revoir, Prince! Come back
early to dinner," cried several voices. "We'll take you in hand."

"When speaking to the Emperor, try as far as you can to praise the way
that provisions are supplied and the routes indicated," said Bilibin,
accompanying him to the hall.

"I should like to speak well of them, but as far as I know the facts, I
can't," replied Bolkonski, smiling.

"Well, talk as much as you can, anyway. He has a passion for giving
audiences, but he does not like talking himself and can't do it, as you
will see."




CHAPTER XII

At the levee Prince Andrew stood among the Austrian officers as he had
been told to, and the Emperor Francis merely looked fixedly into his
face and just nodded to him with his long head. But after it was over,
the adjutant he had seen the previous day ceremoniously informed
Bolkonski that the Emperor desired to give him an audience. The Emperor
Francis received him standing in the middle of the room. Before the
conversation began Prince Andrew was struck by the fact that the Emperor
seemed confused and blushed as if not knowing what to say.

"Tell me, when did the battle begin?" he asked hurriedly.

Prince Andrew replied. Then followed other questions just as simple:
"Was Kutuzov well? When had he left Krems?" and so on. The Emperor spoke
as if his sole aim were to put a given number of questions--the answers
to these questions, as was only too evident, did not interest him.

"At what o'clock did the battle begin?" asked the Emperor.

"I cannot inform Your Majesty at what o'clock the battle began at the
front, but at Durrenstein, where I was, our attack began after five in
the afternoon," replied Bolkonski growing more animated and expecting
that he would have a chance to give a reliable account, which he had
ready in his mind, of all he knew and had seen. But the Emperor smiled
and interrupted him.

"How many miles?"

"From where to where, Your Majesty?"

"From Durrenstein to Krems."

"Three and a half miles, Your Majesty."

"The French have abandoned the left bank?"

"According to the scouts the last of them crossed on rafts during the
night."

"Is there sufficient forage in Krems?"

"Forage has not been supplied to the extent..."

The Emperor interrupted him.

"At what o'clock was General Schmidt killed?"

"At seven o'clock, I believe."

"At seven o'clock? It's very sad, very sad!"

The Emperor thanked Prince Andrew and bowed. Prince Andrew withdrew and
was immediately surrounded by courtiers on all sides. Everywhere he saw
friendly looks and heard friendly words. Yesterday's adjutant reproached
him for not having stayed at the palace, and offered him his own house.
The Minister of War came up and congratulated him on the Maria Theresa
Order of the third grade, which the Emperor was conferring on him. The
Empress' chamberlain invited him to see Her Majesty. The archduchess
also wished to see him. He did not know whom to answer, and for a few
seconds collected his thoughts. Then the Russian ambassador took him by
the shoulder, led him to the window, and began to talk to him.

Contrary to Bilibin's forecast the news he had brought was joyfully
received. A thanksgiving service was arranged, Kutuzov was awarded the
Grand Cross of Maria Theresa, and the whole army received rewards.
Bolkonski was invited everywhere, and had to spend the whole morning
calling on the principal Austrian dignitaries. Between four and five in
the afternoon, having made all his calls, he was returning to Bilibin's
house thinking out a letter to his father about the battle and his visit
to Brunn. At the door he found a vehicle half full of luggage. Franz,
Bilibin's man, was dragging a portmanteau with some difficulty out of
the front door.

Before returning to Bilibin's Prince Andrew had gone to a bookshop to
provide himself with some books for the campaign, and had spent some
time in the shop.

"What is it?" he asked.

"Oh, your excellency!" said Franz, with difficulty rolling the
portmanteau into the vehicle, "we are to move on still farther. The
scoundrel is again at our heels!"

"Eh? What?" asked Prince Andrew.

Bilibin came out to meet him. His usually calm face showed excitement.

"There now! Confess that this is delightful," said he. "This affair of
the Thabor Bridge, at Vienna.... They have crossed without striking a
blow!"

Prince Andrew could not understand.

"But where do you come from not to know what every coachman in the town
knows?"

"I come from the archduchess'. I heard nothing there."

"And you didn't see that everybody is packing up?"

"I did not... What is it all about?" inquired Prince Andrew impatiently.

"What's it all about? Why, the French have crossed the bridge that
Auersperg was defending, and the bridge was not blown up: so Murat is
now rushing along the road to Brunn and will be here in a day or two."

"What? Here? But why did they not blow up the bridge, if it was mined?"

"That is what I ask you. No one, not even Bonaparte, knows why."

Bolkonski shrugged his shoulders.

"But if the bridge is crossed it means that the army too is lost? It
will be cut off," said he.

"That's just it," answered Bilibin. "Listen! The French entered Vienna
as I told you. Very well. Next day, which was yesterday, those
gentlemen, messieurs les marechaux, * Murat, Lannes, and Belliard, mount
and ride to the bridge. (Observe that all three are Gascons.)
'Gentlemen,' says one of them, 'you know the Thabor Bridge is mined and
doubly mined and that there are menacing fortifications at its head and
an army of fifteen thousand men has been ordered to blow up the bridge
and not let us cross? But it will please our sovereign the Emperor
Napoleon if we take this bridge, so let us three go and take it!' 'Yes,
let's!' say the others. And off they go and take the bridge, cross it,
and now with their whole army are on this side of the Danube, marching
on us, you, and your lines of communication."


* The marshalls.

"Stop jesting," said Prince Andrew sadly and seriously. This news
grieved him and yet he was pleased.

As soon as he learned that the Russian army was in such a hopeless
situation it occurred to him that it was he who was destined to lead it
out of this position; that here was the Toulon that would lift him from
the ranks of obscure officers and offer him the first step to fame!
Listening to Bilibin he was already imagining how on reaching the army
he would give an opinion at the war council which would be the only one
that could save the army, and how he alone would be entrusted with the
executing of the plan.

"Stop this jesting," he said

"I am not jesting," Bilibin went on. "Nothing is truer or sadder. These
gentlemen ride onto the bridge alone and wave white handkerchiefs; they
assure the officer on duty that they, the marshals, are on their way to
negotiate with Prince Auersperg. He lets them enter the tête-de-pont. *
They spin him a thousand gasconades, saying that the war is over, that
the Emperor Francis is arranging a meeting with Bonaparte, that they
desire to see Prince Auersperg, and so on. The officer sends for
Auersperg; these gentlemen embrace the officers, crack jokes, sit on the
cannon, and meanwhile a French battalion gets to the bridge unobserved,
flings the bags of incendiary material into the water, and approaches
the tête-de-pont. At length appears the lieutenant general, our dear
Prince Auersperg von Mautern himself. 'Dearest foe! Flower of the
Austrian army, hero of the Turkish wars Hostilities are ended, we can
shake one another's hand.... The Emperor Napoleon burns with impatience
to make Prince Auersperg's acquaintance.' In a word, those gentlemen,
Gascons indeed, so bewildered him with fine words, and he is so
flattered by his rapidly established intimacy with the French marshals,
and so dazzled by the sight of Murat's mantle and ostrich plumes, qu'il
n'y voit que du feu, et oublie celui qu'il devait faire faire sur
l'ennemi!" *(2) In spite of the animation of his speech, Bilibin did not
forget to pause after this mot to give time for its due appreciation.
"The French battalion rushes to the bridgehead, spikes the guns, and the
bridge is taken! But what is best of all," he went on, his excitement
subsiding under the delightful interest of his own story, "is that the
sergeant in charge of the cannon which was to give the signal to fire
the mines and blow up the bridge, this sergeant, seeing that the French
troops were running onto the bridge, was about to fire, but Lannes
stayed his hand. The sergeant, who was evidently wiser than his general,
goes up to Auersperg and says: 'Prince, you are being deceived, here are
the French!' Murat, seeing that all is lost if the sergeant is allowed
to speak, turns to Auersperg with feigned astonishment (he is a true
Gascon) and says: 'I don't recognize the world-famous Austrian
discipline, if you allow a subordinate to address you like that!' It was
a stroke of genius. Prince Auersperg feels his dignity at stake and
orders the sergeant to be arrested. Come, you must own that this affair
of the Thabor Bridge is delightful! It is not exactly stupidity, nor
rascality...."


* Bridgehead.

* (2) That their fire gets into his eyes and he forgets that he ought to
be firing at the enemy.

"It may be treachery," said Prince Andrew, vividly imagining the gray
overcoats, wounds, the smoke of gunpowder, the sounds of firing, and the
glory that awaited him.

"Not that either. That puts the court in too bad a light," replied
Bilibin. "It's not treachery nor rascality nor stupidity: it is just as
at Ulm... it is..."--he seemed to be trying to find the right
expression. "C'est... c'est du Mack. Nous sommes mackes (It is... it is
a bit of Mack. We are Macked)," he concluded, feeling that he had
produced a good epigram, a fresh one that would be repeated. His
hitherto puckered brow became smooth as a sign of pleasure, and with a
slight smile he began to examine his nails.

"Where are you off to?" he said suddenly to Prince Andrew who had risen
and was going toward his room.

"I am going away."

"Where to?"

"To the army."

"But you meant to stay another two days?"

"But now I am off at once."

And Prince Andrew after giving directions about his departure went to
his room.

"Do you know, mon cher," said Bilibin following him, "I have been
thinking about you. Why are you going?"

And in proof of the conclusiveness of his opinion all the wrinkles
vanished from his face.

Prince Andrew looked inquiringly at him and gave no reply.

"Why are you going? I know you think it your duty to gallop back to the
army now that it is in danger. I understand that. Mon cher, it is
heroism!"

"Not at all," said Prince Andrew.

"But as you are a philosopher, be a consistent one, look at the other
side of the question and you will see that your duty, on the contrary,
is to take care of yourself. Leave it to those who are no longer fit for
anything else.... You have not been ordered to return and have not been
dismissed from here; therefore, you can stay and go with us wherever our
ill luck takes us. They say we are going to Olmutz, and Olmutz is a very
decent town. You and I will travel comfortably in my caleche."

"Do stop joking, Bilibin," cried Bolkonski.

"I am speaking sincerely as a friend! Consider! Where and why are you
going, when you might remain here? You are faced by one of two things,"
and the skin over his left temple puckered, "either you will not reach
your regiment before peace is concluded, or you will share defeat and
disgrace with Kutuzov's whole army."

And Bilibin unwrinkled his temple, feeling that the dilemma was
insoluble.

"I cannot argue about it," replied Prince Andrew coldly, but he thought:
"I am going to save the army."

"My dear fellow, you are a hero!" said Bilibin.




CHAPTER XIII

That same night, having taken leave of the Minister of War, Bolkonski
set off to rejoin the army, not knowing where he would find it and
fearing to be captured by the French on the way to Krems.

In Brunn everybody attached to the court was packing up, and the heavy
baggage was already being dispatched to Olmutz. Near Hetzelsdorf Prince
Andrew struck the high road along which the Russian army was moving with
great haste and in the greatest disorder. The road was so obstructed
with carts that it was impossible to get by in a carriage. Prince Andrew
took a horse and a Cossack from a Cossack commander, and hungry and
weary, making his way past the baggage wagons, rode in search of the
commander-in-chief and of his own luggage. Very sinister reports of the
position of the army reached him as he went along, and the appearance of
the troops in their disorderly flight confirmed these rumors.

"Cette armee russe que l'or de l'Angleterre a transportee des extremites
de l'univers, nous allons lui faire eprouver le meme sort--(le sort de
l'armee d'Ulm)." * He remembered these words in Bonaparte's address to
his army at the beginning of the campaign, and they awoke in him
astonishment at the genius of his hero, a feeling of wounded pride, and
a hope of glory. "And should there be nothing left but to die?" he
thought. "Well, if need be, I shall do it no worse than others."


* "That Russian army which has been brought from the ends of the earth
by English gold, we shall cause to share the same fate--(the fate of the
army at Ulm)."

He looked with disdain at the endless confused mass of detachments,
carts, guns, artillery, and again baggage wagons and vehicles of all
kinds overtaking one another and blocking the muddy road, three and
sometimes four abreast. From all sides, behind and before, as far as ear
could reach, there were the rattle of wheels, the creaking of carts and
gun carriages, the tramp of horses, the crack of whips, shouts, the
urging of horses, and the swearing of soldiers, orderlies, and officers.
All along the sides of the road fallen horses were to be seen, some
flayed, some not, and broken-down carts beside which solitary soldiers
sat waiting for something, and again soldiers straggling from their
companies, crowds of whom set off to the neighboring villages, or
returned from them dragging sheep, fowls, hay, and bulging sacks. At
each ascent or descent of the road the crowds were yet denser and the
din of shouting more incessant. Soldiers floundering knee-deep in mud
pushed the guns and wagons themselves. Whips cracked, hoofs slipped,
traces broke, and lungs were strained with shouting. The officers
directing the march rode backward and forward between the carts. Their
voices were but feebly heard amid the uproar and one saw by their faces
that they despaired of the possibility of checking this disorder.

"Here is our dear Orthodox Russian army," thought Bolkonski, recalling
Bilibin's words.

Wishing to find out where the commander-in-chief was, he rode up to a
convoy. Directly opposite to him came a strange one-horse vehicle,
evidently rigged up by soldiers out of any available materials and
looking like something between a cart, a cabriolet, and a caleche. A
soldier was driving, and a woman enveloped in shawls sat behind the
apron under the leather hood of the vehicle. Prince Andrew rode up and
was just putting his question to a soldier when his attention was
diverted by the desperate shrieks of the woman in the vehicle. An
officer in charge of transport was beating the soldier who was driving
the woman's vehicle for trying to get ahead of others, and the strokes
of his whip fell on the apron of the equipage. The woman screamed
piercingly. Seeing Prince Andrew she leaned out from behind the apron
and, waving her thin arms from under the woolen shawl, cried:

"Mr. Aide-de-camp! Mr. Aide-de-camp!... For heaven's sake... Protect me!
What will become of us? I am the wife of the doctor of the Seventh
Chasseurs.... They won't let us pass, we are left behind and have lost
our people..."

"I'll flatten you into a pancake!" shouted the angry officer to the
soldier. "Turn back with your slut!"

"Mr. Aide-de-camp! Help me!... What does it all mean?" screamed the
doctor's wife.

"Kindly let this cart pass. Don't you see it's a woman?" said Prince
Andrew riding up to the officer.

The officer glanced at him, and without replying turned again to the
soldier. "I'll teach you to push on!... Back!"

"Let them pass, I tell you!" repeated Prince Andrew, compressing his
lips.

"And who are you?" cried the officer, turning on him with tipsy rage,
"who are you? Are you in command here? Eh? I am commander here, not you!
Go back or I'll flatten you into a pancake," repeated he. This
expression evidently pleased him.

"That was a nice snub for the little aide-de-camp," came a voice from
behind.

Prince Andrew saw that the officer was in that state of senseless, tipsy
rage when a man does not know what he is saying. He saw that his
championship of the doctor's wife in her queer trap might expose him to
what he dreaded more than anything in the world--to ridicule; but his
instinct urged him on. Before the officer finished his sentence Prince
Andrew, his face distorted with fury, rode up to him and raised his
riding whip.

"Kind...ly let--them--pass!"

The officer flourished his arm and hastily rode away.

"It's all the fault of these fellows on the staff that there's this
disorder," he muttered. "Do as you like."

Prince Andrew without lifting his eyes rode hastily away from the
doctor's wife, who was calling him her deliverer, and recalling with a
sense of disgust the minutest details of this humiliating scene he
galloped on to the village where he was told that the commander-in-chief
was.

On reaching the village he dismounted and went to the nearest house,
intending to rest if but for a moment, eat something, and try to sort
out the stinging and tormenting thoughts that confused his mind. "This
is a mob of scoundrels and not an army," he was thinking as he went up
to the window of the first house, when a familiar voice called him by
name.

He turned round. Nesvitski's handsome face looked out of the little
window. Nesvitski, moving his moist lips as he chewed something, and
flourishing his arm, called him to enter.

"Bolkonski! Bolkonski!... Don't you hear? Eh? Come quick..." he shouted.

Entering the house, Prince Andrew saw Nesvitski and another adjutant
having something to eat. They hastily turned round to him asking if he
had any news. On their familiar faces he read agitation and alarm. This
was particularly noticeable on Nesvitski's usually laughing countenance.

"Where is the commander-in-chief?" asked Bolkonski.

"Here, in that house," answered the adjutant.

"Well, is it true that it's peace and capitulation?" asked Nesvitski.

"I was going to ask you. I know nothing except that it was all I could
do to get here."

"And we, my dear boy! It's terrible! I was wrong to laugh at Mack, we're
getting it still worse," said Nesvitski. "But sit down and have
something to eat."

"You won't be able to find either your baggage or anything else now,
Prince. And God only knows where your man Peter is," said the other
adjutant.

"Where are headquarters?"

"We are to spend the night in Znaim."

"Well, I have got all I need into packs for two horses," said Nesvitski.
"They've made up splendid packs for me--fit to cross the Bohemian
mountains with. It's a bad lookout, old fellow! But what's the matter
with you? You must be ill to shiver like that," he added, noticing that
Prince Andrew winced as at an electric shock.

"It's nothing," replied Prince Andrew.

He had just remembered his recent encounter with the doctor's wife and
the convoy officer.

"What is the commander-in-chief doing here?" he asked.

"I can't make out at all," said Nesvitski.

"Well, all I can make out is that everything is abominable, abominable,
quite abominable!" said Prince Andrew, and he went off to the house
where the commander-in-chief was.

Passing by Kutuzov's carriage and the exhausted saddle horses of his
suite, with their Cossacks who were talking loudly together, Prince
Andrew entered the passage. Kutuzov himself, he was told, was in the
house with Prince Bagration and Weyrother. Weyrother was the Austrian
general who had succeeded Schmidt. In the passage little Kozlovski was
squatting on his heels in front of a clerk. The clerk, with cuffs turned
up, was hastily writing at a tub turned bottom upwards. Kozlovski's face
looked worn--he too had evidently not slept all night. He glanced at
Prince Andrew and did not even nod to him.

"Second line... have you written it?" he continued dictating to the
clerk. "The Kiev Grenadiers, Podolian..."

"One can't write so fast, your honor," said the clerk, glancing angrily
and disrespectfully at Kozlovski.

Through the door came the sounds of Kutuzov's voice, excited and
dissatisfied, interrupted by another, an unfamiliar voice. From the
sound of these voices, the inattentive way Kozlovski looked at him, the
disrespectful manner of the exhausted clerk, the fact that the clerk and
Kozlovski were squatting on the floor by a tub so near to the commander
in chief, and from the noisy laughter of the Cossacks holding the horses
near the window, Prince Andrew felt that something important and
disastrous was about to happen.

He turned to Kozlovski with urgent questions.

"Immediately, Prince," said Kozlovski. "Dispositions for Bagration."

"What about capitulation?"

"Nothing of the sort. Orders are issued for a battle."

Prince Andrew moved toward the door from whence voices were heard. Just
as he was going to open it the sounds ceased, the door opened, and
Kutuzov with his eagle nose and puffy face appeared in the doorway.
Prince Andrew stood right in front of Kutuzov but the expression of the
commander in chief's one sound eye showed him to be so preoccupied with
thoughts and anxieties as to be oblivious of his presence. He looked
straight at his adjutant's face without recognizing him.

"Well, have you finished?" said he to Kozlovski.

"One moment, your excellency."

Bagration, a gaunt middle-aged man of medium height with a firm,
impassive face of Oriental type, came out after the commander-in-chief.

"I have the honor to present myself," repeated Prince Andrew rather
loudly, handing Kutuzov an envelope.

"Ah, from Vienna? Very good. Later, later!"

Kutuzov went out into the porch with Bagration.

"Well, good-by, Prince," said he to Bagration. "My blessing, and may
Christ be with you in your great endeavor!"

His face suddenly softened and tears came into his eyes. With his left
hand he drew Bagration toward him, and with his right, on which he wore
a ring, he made the sign of the cross over him with a gesture evidently
habitual, offering his puffy cheek, but Bagration kissed him on the neck
instead.

"Christ be with you!" Kutuzov repeated and went toward his carriage.
"Get in with me," said he to Bolkonski.

"Your excellency, I should like to be of use here. Allow me to remain
with Prince Bagration's detachment."

"Get in," said Kutuzov, and noticing that Bolkonski still delayed, he
added: "I need good officers myself, need them myself!"

They got into the carriage and drove for a few minutes in silence.

"There is still much, much before us," he said, as if with an old man's
penetration he understood all that was passing in Bolkonski's mind. "If
a tenth part of his detachment returns I shall thank God," he added as
if speaking to himself.

Prince Andrew glanced at Kutuzov's face only a foot distant from him and
involuntarily noticed the carefully washed seams of the scar near his
temple, where an Ismail bullet had pierced his skull, and the empty eye
socket. "Yes, he has a right to speak so calmly of those men's death,"
thought Bolkonski.

"That is why I beg to be sent to that detachment," he said.

Kutuzov did not reply. He seemed to have forgotten what he had been
saying, and sat plunged in thought. Five minutes later, gently swaying
on the soft springs of the carriage, he turned to Prince Andrew. There
was not a trace of agitation on his face. With delicate irony he
questioned Prince Andrew about the details of his interview with the
Emperor, about the remarks he had heard at court concerning the Krems
affair, and about some ladies they both knew.




CHAPTER XIV

On November 1 Kutuzov had received, through a spy, news that the army he
commanded was in an almost hopeless position. The spy reported that the
French, after crossing the bridge at Vienna, were advancing in immense
force upon Kutuzov's line of communication with the troops that were
arriving from Russia. If Kutuzov decided to remain at Krems, Napoleon's
army of one hundred and fifty thousand men would cut him off completely
and surround his exhausted army of forty thousand, and he would find
himself in the position of Mack at Ulm. If Kutuzov decided to abandon
the road connecting him with the troops arriving from Russia, he would
have to march with no road into unknown parts of the Bohemian mountains,
defending himself against superior forces of the enemy and abandoning
all hope of a junction with Buxhowden. If Kutuzov decided to retreat
along the road from Krems to Olmutz, to unite with the troops arriving
from Russia, he risked being forestalled on that road by the French who
had crossed the Vienna bridge, and encumbered by his baggage and
transport, having to accept battle on the march against an enemy three
times as strong, who would hem him in from two sides.

Kutuzov chose this latter course.

The French, the spy reported, having crossed the Vienna bridge, were
advancing by forced marches toward Znaim, which lay sixty-six miles off
on the line of Kutuzov's retreat. If he reached Znaim before the French,
there would be great hope of saving the army; to let the French
forestall him at Znaim meant the exposure of his whole army to a
disgrace such as that of Ulm, or to utter destruction. But to forestall
the French with his whole army was impossible. The road for the French
from Vienna to Znaim was shorter and better than the road for the
Russians from Krems to Znaim.

The night he received the news, Kutuzov sent Bagration's vanguard, four
thousand strong, to the right across the hills from the Krems-Znaim to
the Vienna-Znaim road. Bagration was to make this march without resting,
and to halt facing Vienna with Znaim to his rear, and if he succeeded in
forestalling the French he was to delay them as long as possible.
Kutuzov himself with all his transport took the road to Znaim.

Marching thirty miles that stormy night across roadless hills, with his
hungry, ill-shod soldiers, and losing a third of his men as stragglers
by the way, Bagration came out on the Vienna-Znaim road at Hollabrunn a
few hours ahead of the French who were approaching Hollabrunn from
Vienna. Kutuzov with his transport had still to march for some days
before he could reach Znaim. Hence Bagration with his four thousand
hungry, exhausted men would have to detain for days the whole enemy army
that came upon him at Hollabrunn, which was clearly impossible. But a
freak of fate made the impossible possible. The success of the trick
that had placed the Vienna bridge in the hands of the French without a
fight led Murat to try to deceive Kutuzov in a similar way. Meeting
Bagration's weak detachment on the Znaim road he supposed it to be
Kutuzov's whole army. To be able to crush it absolutely he awaited the
arrival of the rest of the troops who were on their way from Vienna, and
with this object offered a three days' truce on condition that both
armies should remain in position without moving. Murat declared that
negotiations for peace were already proceeding, and that he therefore
offered this truce to avoid unnecessary bloodshed. Count Nostitz, the
Austrian general occupying the advanced posts, believed Murat's emissary
and retired, leaving Bagration's division exposed. Another emissary rode
to the Russian line to announce the peace negotiations and to offer the
Russian army the three days' truce. Bagration replied that he was not
authorized either to accept or refuse a truce and sent his adjutant to
Kutuzov to report the offer he had received.

A truce was Kutuzov's sole chance of gaining time, giving Bagration's
exhausted troops some rest, and letting the transport and heavy convoys
(whose movements were concealed from the French) advance if but one
stage nearer Znaim. The offer of a truce gave the only, and a quite
unexpected, chance of saving the army. On receiving the news he
immediately dispatched Adjutant General Wintzingerode, who was in
attendance on him, to the enemy camp. Wintzingerode was not merely to
agree to the truce but also to offer terms of capitulation, and
meanwhile Kutuzov sent his adjutants back to hasten to the utmost the
movements of the baggage trains of the entire army along the Krems-Znaim
road. Bagration's exhausted and hungry detachment, which alone covered
this movement of the transport and of the whole army, had to remain
stationary in face of an enemy eight times as strong as itself.

Kutuzov's expectations that the proposals of capitulation (which were in
no way binding) might give time for part of the transport to pass, and
also that Murat's mistake would very soon be discovered, proved correct.
As soon as Bonaparte (who was at Schonbrunn, sixteen miles from
Hollabrunn) received Murat's dispatch with the proposal of a truce and a
capitulation, he detected a ruse and wrote the following letter to
Murat:

Schonbrunn, 25th Brumaire, 1805,

at eight o'clock in the morning

To PRINCE MURAT,

I cannot find words to express to you my displeasure. You command only
my advance guard, and have no right to arrange an armistice without my
order. You are causing me to lose the fruits of a campaign. Break the
armistice immediately and march on the enemy. Inform him that the
general who signed that capitulation had no right to do so, and that no
one but the Emperor of Russia has that right.

If, however, the Emperor of Russia ratifies that convention, I will
ratify it; but it is only a trick. March on, destroy the Russian
army.... You are in a position to seize its baggage and artillery.

The Russian Emperor's aide-de-camp is an impostor. Officers are nothing
when they have no powers; this one had none.... The Austrians let
themselves be tricked at the crossing of the Vienna bridge, you are
letting yourself be tricked by an aide-de-camp of the Emperor.

NAPOLEON

Bonaparte's adjutant rode full gallop with this menacing letter to
Murat. Bonaparte himself, not trusting to his generals, moved with all
the Guards to the field of battle, afraid of letting a ready victim
escape, and Bagration's four thousand men merrily lighted campfires,
dried and warmed themselves, cooked their porridge for the first time
for three days, and not one of them knew or imagined what was in store
for him.




CHAPTER XV

Between three and four o'clock in the afternoon Prince Andrew, who had
persisted in his request to Kutuzov, arrived at Grunth and reported
himself to Bagration. Bonaparte's adjutant had not yet reached Murat's
detachment and the battle had not yet begun. In Bagration's detachment
no one knew anything of the general position of affairs. They talked of
peace but did not believe in its possibility; others talked of a battle
but also disbelieved in the nearness of an engagement. Bagration,
knowing Bolkonski to be a favorite and trusted adjutant, received him
with distinction and special marks of favor, explaining to him that
there would probably be an engagement that day or the next, and giving
him full liberty to remain with him during the battle or to join the
rearguard and have an eye on the order of retreat, "which is also very
important."

"However, there will hardly be an engagement today," said Bagration as
if to reassure Prince Andrew.

"If he is one of the ordinary little staff dandies sent to earn a medal
he can get his reward just as well in the rearguard, but if he wishes to
stay with me, let him... he'll be of use here if he's a brave officer,"
thought Bagration. Prince Andrew, without replying, asked the prince's
permission to ride round the position to see the disposition of the
forces, so as to know his bearings should he be sent to execute an
order. The officer on duty, a handsome, elegantly dressed man with a
diamond ring on his forefinger, who was fond of speaking French though
he spoke it badly, offered to conduct Prince Andrew.

On all sides they saw rain-soaked officers with dejected faces who
seemed to be seeking something, and soldiers dragging doors, benches,
and fencing from the village.

"There now, Prince! We can't stop those fellows," said the staff officer
pointing to the soldiers. "The officers don't keep them in hand. And
there," he pointed to a sutler's tent, "they crowd in and sit. This
morning I turned them all out and now look, it's full again. I must go
there, Prince, and scare them a bit. It won't take a moment."

"Yes, let's go in and I will get myself a roll and some cheese," said
Prince Andrew who had not yet had time to eat anything.

"Why didn't you mention it, Prince? I would have offered you something."

They dismounted and entered the tent. Several officers, with flushed and
weary faces, were sitting at the table eating and drinking.

"Now what does this mean, gentlemen?" said the staff officer, in the
reproachful tone of a man who has repeated the same thing more than
once. "You know it won't do to leave your posts like this. The prince
gave orders that no one should leave his post. Now you, Captain," and he
turned to a thin, dirty little artillery officer who without his boots
(he had given them to the canteen keeper to dry), in only his stockings,
rose when they entered, smiling not altogether comfortably.

"Well, aren't you ashamed of yourself, Captain Tushin?" he continued.
"One would think that as an artillery officer you would set a good
example, yet here you are without your boots! The alarm will be sounded
and you'll be in a pretty position without your boots!" (The staff
officer smiled.) "Kindly return to your posts, gentlemen, all of you,
all!" he added in a tone of command.

Prince Andrew smiled involuntarily as he looked at the artillery officer
Tushin, who silent and smiling, shifting from one stockinged foot to the
other, glanced inquiringly with his large, intelligent, kindly eyes from
Prince Andrew to the staff officer.

"The soldiers say it feels easier without boots," said Captain Tushin
smiling shyly in his uncomfortable position, evidently wishing to adopt
a jocular tone. But before he had finished he felt that his jest was
unacceptable and had not come off. He grew confused.

"Kindly return to your posts," said the staff officer trying to preserve
his gravity.

Prince Andrew glanced again at the artillery officer's small figure.
There was something peculiar about it, quite unsoldierly, rather comic,
but extremely attractive.

The staff officer and Prince Andrew mounted their horses and rode on.

Having ridden beyond the village, continually meeting and overtaking
soldiers and officers of various regiments, they saw on their left some
entrenchments being thrown up, the freshly dug clay of which showed up
red. Several battalions of soldiers, in their shirt sleeves despite the
cold wind, swarmed in these earthworks like a host of white ants;
spadefuls of red clay were continually being thrown up from behind the
bank by unseen hands. Prince Andrew and the officer rode up, looked at
the entrenchment, and went on again. Just behind it they came upon some
dozens of soldiers, continually replaced by others, who ran from the
entrenchment. They had to hold their noses and put their horses to a
trot to escape from the poisoned atmosphere of these latrines.

"Voila l'agrement des camps, monsieur le Prince," * said the staff
officer.


* "This is a pleasure one gets in camp, Prince."

They rode up the opposite hill. From there the French could already be
seen. Prince Andrew stopped and began examining the position.

"That's our battery," said the staff officer indicating the highest
point. "It's in charge of the queer fellow we saw without his boots. You
can see everything from there; let's go there, Prince."

"Thank you very much, I will go on alone," said Prince Andrew, wishing
to rid himself of this staff officer's company, "please don't trouble
yourself further."

The staff officer remained behind and Prince Andrew rode on alone.

The farther forward and nearer the enemy he went, the more orderly and
cheerful were the troops. The greatest disorder and depression had been
in the baggage train he had passed that morning on the Znaim road seven
miles away from the French. At Grunth also some apprehension and alarm
could be felt, but the nearer Prince Andrew came to the French lines the
more confident was the appearance of our troops. The soldiers in their
greatcoats were ranged in lines, the sergeants major and company
officers were counting the men, poking the last man in each section in
the ribs and telling him to hold his hand up. Soldiers scattered over
the whole place were dragging logs and brushwood and were building
shelters with merry chatter and laughter; around the fires sat others,
dressed and undressed, drying their shirts and leg bands or mending
boots or overcoats and crowding round the boilers and porridge cookers.
In one company dinner was ready, and the soldiers were gazing eagerly at
the steaming boiler, waiting till the sample, which a quartermaster
sergeant was carrying in a wooden bowl to an officer who sat on a log
before his shelter, had been tasted.

Another company, a lucky one for not all the companies had vodka,
crowded round a pockmarked, broad-shouldered sergeant major who, tilting
a keg, filled one after another the canteen lids held out to him. The
soldiers lifted the canteen lids to their lips with reverential faces,
emptied them, rolling the vodka in their mouths, and walked away from
the sergeant major with brightened expressions, licking their lips and
wiping them on the sleeves of their greatcoats. All their faces were as
serene as if all this were happening at home awaiting peaceful
encampment, and not within sight of the enemy before an action in which
at least half of them would be left on the field. After passing a
chasseur regiment and in the lines of the Kiev grenadiers--fine fellows
busy with similar peaceful affairs--near the shelter of the regimental
commander, higher than and different from the others, Prince Andrew came
out in front of a platoon of grenadiers before whom lay a naked man. Two
soldiers held him while two others were flourishing their switches and
striking him regularly on his bare back. The man shrieked unnaturally. A
stout major was pacing up and down the line, and regardless of the
screams kept repeating:

"It's a shame for a soldier to steal; a soldier must be honest,
honorable, and brave, but if he robs his fellows there is no honor in
him, he's a scoundrel. Go on! Go on!"

So the swishing sound of the strokes, and the desperate but unnatural
screams, continued.

"Go on, go on!" said the major.

A young officer with a bewildered and pained expression on his face
stepped away from the man and looked round inquiringly at the adjutant
as he rode by.

Prince Andrew, having reached the front line, rode along it. Our front
line and that of the enemy were far apart on the right and left flanks,
but in the center where the men with a flag of truce had passed that
morning, the lines were so near together that the men could see one
another's faces and speak to one another. Besides the soldiers who
formed the picket line on either side, there were many curious onlookers
who, jesting and laughing, stared at their strange foreign enemies.

Since early morning--despite an injunction not to approach the picket
line--the officers had been unable to keep sight-seers away. The
soldiers forming the picket line, like showmen exhibiting a curiosity,
no longer looked at the French but paid attention to the sight-seers and
grew weary waiting to be relieved. Prince Andrew halted to have a look
at the French.

"Look! Look there!" one soldier was saying to another, pointing to a
Russian musketeer who had gone up to the picket line with an officer and
was rapidly and excitedly talking to a French grenadier. "Hark to him
jabbering! Fine, isn't it? It's all the Frenchy can do to keep up with
him. There now, Sidorov!"

"Wait a bit and listen. It's fine!" answered Sidorov, who was considered
an adept at French.

The soldier to whom the laughers referred was Dolokhov. Prince Andrew
recognized him and stopped to listen to what he was saying. Dolokhov had
come from the left flank where their regiment was stationed, with his
captain.

"Now then, go on, go on!" incited the officer, bending forward and
trying not to lose a word of the speech which was incomprehensible to
him. "More, please: more! What's he saying?"

Dolokhov did not answer the captain; he had been drawn into a hot
dispute with the French grenadier. They were naturally talking about the
campaign. The Frenchman, confusing the Austrians with the Russians, was
trying to prove that the Russians had surrendered and had fled all the
way from Ulm, while Dolokhov maintained that the Russians had not
surrendered but had beaten the French.

"We have orders to drive you off here, and we shall drive you off," said
Dolokhov.

"Only take care you and your Cossacks are not all captured!" said the
French grenadier.

The French onlookers and listeners laughed.

"We'll make you dance as we did under Suvorov...," * said Dolokhov.


* "On vous fera danser."

"Qu' est-ce qu'il chante?" * asked a Frenchman.


* "What's he singing about?"

"It's ancient history," said another, guessing that it referred to a
former war. "The Emperor will teach your Suvara as he has taught the
others..."

"Bonaparte..." began Dolokhov, but the Frenchman interrupted him.

"Not Bonaparte. He is the Emperor! Sacre nom...!" cried he angrily.

"The devil skin your Emperor."

And Dolokhov swore at him in coarse soldier's Russian and shouldering
his musket walked away.

"Let us go, Ivan Lukich," he said to the captain.

"Ah, that's the way to talk French," said the picket soldiers. "Now,
Sidorov, you have a try!"

Sidorov, turning to the French, winked, and began to jabber meaningless
sounds very fast: "Kari, mala, tafa, safi, muter, Kaska," he said,
trying to give an expressive intonation to his voice.

"Ho! ho! ho! Ha! ha! ha! ha! Ouh! ouh!" came peals of such healthy and
good-humored laughter from the soldiers that it infected the French
involuntarily, so much so that the only thing left to do seemed to be to
unload the muskets, explode the ammunition, and all return home as
quickly as possible.

But the guns remained loaded, the loopholes in blockhouses and
entrenchments looked out just as menacingly, and the unlimbered cannon
confronted one another as before.




CHAPTER XVI

Having ridden round the whole line from right flank to left, Prince
Andrew made his way up to the battery from which the staff officer had
told him the whole field could be seen. Here he dismounted, and stopped
beside the farthest of the four unlimbered cannon. Before the guns an
artillery sentry was pacing up and down; he stood at attention when the
officer arrived, but at a sign resumed his measured, monotonous pacing.
Behind the guns were their limbers and still farther back picket ropes
and artillerymen's bonfires. To the left, not far from the farthest
cannon, was a small, newly constructed wattle shed from which came the
sound of officers' voices in eager conversation.

It was true that a view over nearly the whole Russian position and the
greater part of the enemy's opened out from this battery. Just facing
it, on the crest of the opposite hill, the village of Schon Grabern
could be seen, and in three places to left and right the French troops
amid the smoke of their campfires, the greater part of whom were
evidently in the village itself and behind the hill. To the left from
that village, amid the smoke, was something resembling a battery, but it
was impossible to see it clearly with the naked eye. Our right flank was
posted on a rather steep incline which dominated the French position.
Our infantry were stationed there, and at the farthest point the
dragoons. In the center, where Tushin's battery stood and from which
Prince Andrew was surveying the position, was the easiest and most
direct descent and ascent to the brook separating us from Schon Grabern.
On the left our troops were close to a copse, in which smoked the
bonfires of our infantry who were felling wood. The French line was
wider than ours, and it was plain that they could easily outflank us on
both sides. Behind our position was a steep and deep dip, making it
difficult for artillery and cavalry to retire. Prince Andrew took out
his notebook and, leaning on the cannon, sketched a plan of the
position. He made some notes on two points, intending to mention them to
Bagration. His idea was, first, to concentrate all the artillery in the
center, and secondly, to withdraw the cavalry to the other side of the
dip. Prince Andrew, being always near the commander in chief, closely
following the mass movements and general orders, and constantly studying
historical accounts of battles, involuntarily pictured to himself the
course of events in the forthcoming action in broad outline. He imagined
only important possibilities: "If the enemy attacks the right flank," he
said to himself, "the Kiev grenadiers and the Podolsk chasseurs must
hold their position till reserves from the center come up. In that case
the dragoons could successfully make a flank counterattack. If they
attack our center we, having the center battery on this high ground,
shall withdraw the left flank under its cover, and retreat to the dip by
echelons." So he reasoned.... All the time he had been beside the gun,
he had heard the voices of the officers distinctly, but as often happens
had not understood a word of what they were saying. Suddenly, however,
he was struck by a voice coming from the shed, and its tone was so
sincere that he could not but listen.

"No, friend," said a pleasant and, as it seemed to Prince Andrew, a
familiar voice, "what I say is that if it were possible to know what is
beyond death, none of us would be afraid of it. That's so, friend."

Another, a younger voice, interrupted him: "Afraid or not, you can't
escape it anyhow."

"All the same, one is afraid! Oh, you clever people," said a third manly
voice interrupting them both. "Of course you artillery men are very
wise, because you can take everything along with you--vodka and snacks."

And the owner of the manly voice, evidently an infantry officer,
laughed.

"Yes, one is afraid," continued the first speaker, he of the familiar
voice. "One is afraid of the unknown, that's what it is. Whatever we may
say about the soul going to the sky... we know there is no sky but only
an atmosphere."

The manly voice again interrupted the artillery officer.

"Well, stand us some of your herb vodka, Tushin," it said.

"Why," thought Prince Andrew, "that's the captain who stood up in the
sutler's hut without his boots." He recognized the agreeable,
philosophizing voice with pleasure.

"Some herb vodka? Certainly!" said Tushin. "But still, to conceive a
future life..."

He did not finish. Just then there was a whistle in the air; nearer and
nearer, faster and louder, louder and faster, a cannon ball, as if it
had not finished saying what was necessary, thudded into the ground near
the shed with super human force, throwing up a mass of earth. The ground
seemed to groan at the terrible impact.

And immediately Tushin, with a short pipe in the corner of his mouth and
his kind, intelligent face rather pale, rushed out of the shed followed
by the owner of the manly voice, a dashing infantry officer who hurried
off to his company, buttoning up his coat as he ran.




CHAPTER XVII

Mounting his horse again Prince Andrew lingered with the battery,
looking at the puff from the gun that had sent the ball. His eyes ran
rapidly over the wide space, but he only saw that the hitherto
motionless masses of the French now swayed and that there really was a
battery to their left. The smoke above it had not yet dispersed. Two
mounted Frenchmen, probably adjutants, were galloping up the hill. A
small but distinctly visible enemy column was moving down the hill,
probably to strengthen the front line. The smoke of the first shot had
not yet dispersed before another puff appeared, followed by a report.
The battle had begun! Prince Andrew turned his horse and galloped back
to Grunth to find Prince Bagration. He heard the cannonade behind him
growing louder and more frequent. Evidently our guns had begun to reply.
From the bottom of the slope, where the parleys had taken place, came
the report of musketry.

Lemarrois had just arrived at a gallop with Bonaparte's stern letter,
and Murat, humiliated and anxious to expiate his fault, had at once
moved his forces to attack the center and outflank both the Russian
wings, hoping before evening and before the arrival of the Emperor to
crush the contemptible detachment that stood before him.

"It has begun. Here it is!" thought Prince Andrew, feeling the blood
rush to his heart. "But where and how will my Toulon present itself?"

Passing between the companies that had been eating porridge and drinking
vodka a quarter of an hour before, he saw everywhere the same rapid
movement of soldiers forming ranks and getting their muskets ready, and
on all their faces he recognized the same eagerness that filled his
heart. "It has begun! Here it is, dreadful but enjoyable!" was what the
face of each soldier and each officer seemed to say.

Before he had reached the embankments that were being thrown up, he saw,
in the light of the dull autumn evening, mounted men coming toward him.
The foremost, wearing a Cossack cloak and lambskin cap and riding a
white horse, was Prince Bagration. Prince Andrew stopped, waiting for
him to come up; Prince Bagration reined in his horse and recognizing
Prince Andrew nodded to him. He still looked ahead while Prince Andrew
told him what he had seen.

The feeling, "It has begun! Here it is!" was seen even on Prince
Bagration's hard brown face with its half-closed, dull, sleepy eyes.
Prince Andrew gazed with anxious curiosity at that impassive face and
wished he could tell what, if anything, this man was thinking and
feeling at that moment. "Is there anything at all behind that impassive
face?" Prince Andrew asked himself as he looked. Prince Bagration bent
his head in sign of agreement with what Prince Andrew told him, and
said, "Very good!" in a tone that seemed to imply that everything that
took place and was reported to him was exactly what he had foreseen.
Prince Andrew, out of breath with his rapid ride, spoke quickly. Prince
Bagration, uttering his words with an Oriental accent, spoke
particularly slowly, as if to impress the fact that there was no need to
hurry. However, he put his horse to a trot in the direction of Tushin's
battery. Prince Andrew followed with the suite. Behind Prince Bagration
rode an officer of the suite, the prince's personal adjutant, Zherkov,
an orderly officer, the staff officer on duty, riding a fine bobtailed
horse, and a civilian--an accountant who had asked permission to be
present at the battle out of curiosity. The accountant, a stout, full-
faced man, looked around him with a naive smile of satisfaction and
presented a strange appearance among the hussars, Cossacks, and
adjutants, in his camlet coat, as he jolted on his horse with a convoy
officer's saddle.

"He wants to see a battle," said Zherkov to Bolkonski, pointing to the
accountant, "but he feels a pain in the pit of his stomach already."

"Oh, leave off!" said the accountant with a beaming but rather cunning
smile, as if flattered at being made the subject of Zherkov's joke, and
purposely trying to appear stupider than he really was.

"It is very strange, mon Monsieur Prince," said the staff officer. (He
remembered that in French there is some peculiar way of addressing a
prince, but could not get it quite right.)

By this time they were all approaching Tushin's battery, and a ball
struck the ground in front of them.

"What's that that has fallen?" asked the accountant with a naive smile.

"A French pancake," answered Zherkov.

"So that's what they hit with?" asked the accountant. "How awful!"

He seemed to swell with satisfaction. He had hardly finished speaking
when they again heard an unexpectedly violent whistling which suddenly
ended with a thud into something soft... f-f-flop! and a Cossack, riding
a little to their right and behind the accountant, crashed to earth with
his horse. Zherkov and the staff officer bent over their saddles and
turned their horses away. The accountant stopped, facing the Cossack,
and examined him with attentive curiosity. The Cossack was dead, but the
horse still struggled.

Prince Bagration screwed up his eyes, looked round, and, seeing the
cause of the confusion, turned away with indifference, as if to say, "Is
it worth while noticing trifles?" He reined in his horse with the care
of a skillful rider and, slightly bending over, disengaged his saber
which had caught in his cloak. It was an old-fashioned saber of a kind
no longer in general use. Prince Andrew remembered the story of Suvorov
giving his saber to Bagration in Italy, and the recollection was
particularly pleasant at that moment. They had reached the battery at
which Prince Andrew had been when he examined the battlefield.

"Whose company?" asked Prince Bagration of an artilleryman standing by
the ammunition wagon.

He asked, "Whose company?" but he really meant, "Are you frightened
here?" and the artilleryman understood him.

"Captain Tushin's, your excellency!" shouted the red-haired, freckled
gunner in a merry voice, standing to attention.

"Yes, yes," muttered Bagration as if considering something, and he rode
past the limbers to the farthest cannon.

As he approached, a ringing shot issued from it deafening him and his
suite, and in the smoke that suddenly surrounded the gun they could see
the gunners who had seized it straining to roll it quickly back to its
former position. A huge, broad-shouldered gunner, Number One, holding a
mop, his legs far apart, sprang to the wheel; while Number Two with a
trembling hand placed a charge in the cannon's mouth. The short, round-
shouldered Captain Tushin, stumbling over the tail of the gun carriage,
moved forward and, not noticing the general, looked out shading his eyes
with his small hand.

"Lift it two lines more and it will be just right," cried he in a feeble
voice to which he tried to impart a dashing note, ill-suited to his weak
figure. "Number Two!" he squeaked. "Fire, Medvedev!"

Bagration called to him, and Tushin, raising three fingers to his cap
with a bashful and awkward gesture not at all like a military salute but
like a priest's benediction, approached the general. Though Tushin's
guns had been intended to cannonade the valley, he was firing incendiary
balls at the village of Schon Grabern visible just opposite, in front of
which large masses of French were advancing.

No one had given Tushin orders where and at what to fire, but after
consulting his sergeant major, Zakharchenko, for whom he had great
respect, he had decided that it would be a good thing to set fire to the
village. "Very good!" said Bagration in reply to the officer's report,
and began deliberately to examine the whole battlefield extended before
him. The French had advanced nearest on our right. Below the height on
which the Kiev regiment was stationed, in the hollow where the rivulet
flowed, the soul-stirring rolling and crackling of musketry was heard,
and much farther to the right beyond the dragoons, the officer of the
suite pointed out to Bagration a French column that was outflanking us.
To the left the horizon bounded by the adjacent wood. Prince Bagration
ordered two battalions from the center to be sent to reinforce the right
flank. The officer of the suite ventured to remark to the prince that if
these battalions went away, the guns would remain without support.
Prince Bagration turned to the officer and with his dull eyes looked at
him in silence. It seemed to Prince Andrew that the officer's remark was
just and that really no answer could be made to it. But at that moment
an adjutant galloped up with a message from the commander of the
regiment in the hollow and news that immense masses of the French were
coming down upon them and that his regiment was in disorder and was
retreating upon the Kiev grenadiers. Prince Bagration bowed his head in
sign of assent and approval. He rode off at a walk to the right and sent
an adjutant to the dragoons with orders to attack the French. But this
adjutant returned half an hour later with the news that the commander of
the dragoons had already retreated beyond the dip in the ground, as a
heavy fire had been opened on him and he was losing men uselessly, and
so had hastened to throw some sharpshooters into the wood.

"Very good!" said Bagration.

As he was leaving the battery, firing was heard on the left also, and as
it was too far to the left flank for him to have time to go there
himself, Prince Bagration sent Zherkov to tell the general in command
(the one who had paraded his regiment before Kutuzov at Braunau) that he
must retreat as quickly as possible behind the hollow in the rear, as
the right flank would probably not be able to withstand the enemy's
attack very long. About Tushin and the battalion that had been in
support of his battery all was forgotten. Prince Andrew listened
attentively to Bagration's colloquies with the commanding officers and
the orders he gave them and, to his surprise, found that no orders were
really given, but that Prince Bagration tried to make it appear that
everything done by necessity, by accident, or by the will of subordinate
commanders was done, if not by his direct command, at least in accord
with his intentions. Prince Andrew noticed, however, that though what
happened was due to chance and was independent of the commander's will,
owing to the tact Bagration showed, his presence was very valuable.
Officers who approached him with disturbed countenances became calm;
soldiers and officers greeted him gaily, grew more cheerful in his
presence, and were evidently anxious to display their courage before
him.




CHAPTER XVIII

Prince Bagration, having reached the highest point of our right flank,
began riding downhill to where the roll of musketry was heard but where
on account of the smoke nothing could be seen. The nearer they got to
the hollow the less they could see but the more they felt the nearness
of the actual battlefield. They began to meet wounded men. One with a
bleeding head and no cap was being dragged along by two soldiers who
supported him under the arms. There was a gurgle in his throat and he
was spitting blood. A bullet had evidently hit him in the throat or
mouth. Another was walking sturdily by himself but without his musket,
groaning aloud and swinging his arm which had just been hurt, while
blood from it was streaming over his greatcoat as from a bottle. He had
that moment been wounded and his face showed fear rather than suffering.
Crossing a road they descended a steep incline and saw several men lying
on the ground; they also met a crowd of soldiers some of whom were
unwounded. The soldiers were ascending the hill breathing heavily, and
despite the general's presence were talking loudly and gesticulating. In
front of them rows of gray cloaks were already visible through the
smoke, and an officer catching sight of Bagration rushed shouting after
the crowd of retreating soldiers, ordering them back. Bagration rode up
to the ranks along which shots crackled now here and now there, drowning
the sound of voices and the shouts of command. The whole air reeked with
smoke. The excited faces of the soldiers were blackened with it. Some
were using their ramrods, others putting powder on the touchpans or
taking charges from their pouches, while others were firing, though who
they were firing at could not be seen for the smoke which there was no
wind to carry away. A pleasant humming and whistling of bullets were
often heard. "What is this?" thought Prince Andrew approaching the crowd
of soldiers. "It can't be an attack, for they are not moving; it can't
be a square--for they are not drawn up for that."

The commander of the regiment, a thin, feeble-looking old man with a
pleasant smile--his eyelids drooping more than half over his old eyes,
giving him a mild expression, rode up to Bagration and welcomed him as a
host welcomes an honored guest. He reported that his regiment had been
attacked by French cavalry and that, though the attack had been
repulsed, he had lost more than half his men. He said the attack had
been repulsed, employing this military term to describe what had
occurred to his regiment, but in reality he did not himself know what
had happened during that half-hour to the troops entrusted to him, and
could not say with certainty whether the attack had been repulsed or his
regiment had been broken up. All he knew was that at the commencement of
the action balls and shells began flying all over his regiment and
hitting men and that afterwards someone had shouted "Cavalry!" and our
men had begun firing. They were still firing, not at the cavalry which
had disappeared, but at French infantry who had come into the hollow and
were firing at our men. Prince Bagration bowed his head as a sign that
this was exactly what he had desired and expected. Turning to his
adjutant he ordered him to bring down the two battalions of the Sixth
Chasseurs whom they had just passed. Prince Andrew was struck by the
changed expression on Prince Bagration's face at this moment. It
expressed the concentrated and happy resolution you see on the face of a
man who on a hot day takes a final run before plunging into the water.
The dull, sleepy expression was no longer there, nor the affectation of
profound thought. The round, steady, hawk's eyes looked before him
eagerly and rather disdainfully, not resting on anything although his
movements were still slow and measured.

The commander of the regiment turned to Prince Bagration, entreating him
to go back as it was too dangerous to remain where they were. "Please,
your excellency, for God's sake!" he kept saying, glancing for support
at an officer of the suite who turned away from him. "There, you see!"
and he drew attention to the bullets whistling, singing, and hissing
continually around them. He spoke in the tone of entreaty and reproach
that a carpenter uses to a gentleman who has picked up an ax: "We are
used to it, but you, sir, will blister your hands." He spoke as if those
bullets could not kill him, and his half-closed eyes gave still more
persuasiveness to his words. The staff officer joined in the colonel's
appeals, but Bagration did not reply; he only gave an order to cease
firing and re-form, so as to give room for the two approaching
battalions. While he was speaking, the curtain of smoke that had
concealed the hollow, driven by a rising wind, began to move from right
to left as if drawn by an invisible hand, and the hill opposite, with
the French moving about on it, opened out before them. All eyes fastened
involuntarily on this French column advancing against them and winding
down over the uneven ground. One could already see the soldiers' shaggy
caps, distinguish the officers from the men, and see the standard
flapping against its staff.

"They march splendidly," remarked someone in Bagration's suite.

The head of the column had already descended into the hollow. The clash
would take place on this side of it...

The remains of our regiment which had been in action rapidly formed up
and moved to the right; from behind it, dispersing the laggards, came
two battalions of the Sixth Chasseurs in fine order. Before they had
reached Bagration, the weighty tread of the mass of men marching in step
could be heard. On their left flank, nearest to Bagration, marched a
company commander, a fine round-faced man, with a stupid and happy
expression--the same man who had rushed out of the wattle shed. At that
moment he was clearly thinking of nothing but how dashing a fellow he
would appear as he passed the commander.

With the self-satisfaction of a man on parade, he stepped lightly with
his muscular legs as if sailing along, stretching himself to his full
height without the smallest effort, his ease contrasting with the heavy
tread of the soldiers who were keeping step with him. He carried close
to his leg a narrow unsheathed sword (small, curved, and not like a real
weapon) and looked now at the superior officers and now back at the men
without losing step, his whole powerful body turning flexibly. It was as
if all the powers of his soul were concentrated on passing the commander
in the best possible manner, and feeling that he was doing it well he
was happy. "Left... left... left..." he seemed to repeat to himself at
each alternate step; and in time to this, with stern but varied faces,
the wall of soldiers burdened with knapsacks and muskets marched in
step, and each one of these hundreds of soldiers seemed to be repeating
to himself at each alternate step, "Left... left... left..." A fat major
skirted a bush, puffing and falling out of step; a soldier who had
fallen behind, his face showing alarm at his defection, ran at a trot,
panting to catch up with his company. A cannon ball, cleaving the air,
flew over the heads of Bagration and his suite, and fell into the column
to the measure of "Left... left!" "Close up!" came the company
commander's voice in jaunty tones. The soldiers passed in a semicircle
round something where the ball had fallen, and an old trooper on the
flank, a noncommissioned officer who had stopped beside the dead men,
ran to catch up his line and, falling into step with a hop, looked back
angrily, and through the ominous silence and the regular tramp of feet
beating the ground in unison, one seemed to hear left... left... left.

"Well done, lads!" said Prince Bagration.

"Glad to do our best, your ex'len-lency!" came a confused shout from the
ranks. A morose soldier marching on the left turned his eyes on
Bagration as he shouted, with an expression that seemed to say: "We know
that ourselves!" Another, without looking round, as though fearing to
relax, shouted with his mouth wide open and passed on.

The order was given to halt and down knapsacks.

Bagration rode round the ranks that had marched past him and dismounted.
He gave the reins to a Cossack, took off and handed over his felt coat,
stretched his legs, and set his cap straight. The head of the French
column, with its officers leading, appeared from below the hill.

"Forward, with God!" said Bagration, in a resolute, sonorous voice,
turning for a moment to the front line, and slightly swinging his arms,
he went forward uneasily over the rough field with the awkward gait of a
cavalryman. Prince Andrew felt that an invisible power was leading him
forward, and experienced great happiness.

The French were already near. Prince Andrew, walking beside Bagration,
could clearly distinguish their bandoliers, red epaulets, and even their
faces. (He distinctly saw an old French officer who, with gaitered legs
and turned-out toes, climbed the hill with difficulty.) Prince Bagration
gave no further orders and silently continued to walk on in front of the
ranks. Suddenly one shot after another rang out from the French, smoke
appeared all along their uneven ranks, and musket shots sounded. Several
of our men fell, among them the round-faced officer who had marched so
gaily and complacently. But at the moment the first report was heard,
Bagration looked round and shouted, "Hurrah!"

"Hurrah--ah!--ah!" rang a long-drawn shout from our ranks, and passing
Bagration and racing one another they rushed in an irregular but joyous
and eager crowd down the hill at their disordered foe.




CHAPTER XIX

The attack of the Sixth Chasseurs secured the retreat of our right
flank. In the center Tushin's forgotten battery, which had managed to
set fire to the Schon Grabern village, delayed the French advance. The
French were putting out the fire which the wind was spreading, and thus
gave us time to retreat. The retirement of the center to the other side
of the dip in the ground at the rear was hurried and noisy, but the
different companies did not get mixed. But our left--which consisted of
the Azov and Podolsk infantry and the Pavlograd hussars--was
simultaneously attacked and outflanked by superior French forces under
Lannes and was thrown into confusion. Bagration had sent Zherkov to the
general commanding that left flank with orders to retreat immediately.

Zherkov, not removing his hand from his cap, turned his horse about and
galloped off. But no sooner had he left Bagration than his courage
failed him. He was seized by panic and could not go where it was
dangerous.

Having reached the left flank, instead of going to the front where the
firing was, he began to look for the general and his staff where they
could not possibly be, and so did not deliver the order.

The command of the left flank belonged by seniority to the commander of
the regiment Kutuzov had reviewed at Braunau and in which Dolokhov was
serving as a private. But the command of the extreme left flank had been
assigned to the commander of the Pavlograd regiment in which Rostov was
serving, and a misunderstanding arose. The two commanders were much
exasperated with one another and, long after the action had begun on the
right flank and the French were already advancing, were engaged in
discussion with the sole object of offending one another. But the
regiments, both cavalry and infantry, were by no means ready for the
impending action. From privates to general they were not expecting a
battle and were engaged in peaceful occupations, the cavalry feeding the
horses and the infantry collecting wood.

"He higher iss dan I in rank," said the German colonel of the hussars,
flushing and addressing an adjutant who had ridden up, "so let him do
what he vill, but I cannot sacrifice my hussars... Bugler, sount ze
retreat!"

But haste was becoming imperative. Cannon and musketry, mingling
together, thundered on the right and in the center, while the capotes of
Lannes' sharpshooters were already seen crossing the milldam and forming
up within twice the range of a musket shot. The general in command of
the infantry went toward his horse with jerky steps, and having mounted
drew himself up very straight and tall and rode to the Pavlograd
commander. The commanders met with polite bows but with secret
malevolence in their hearts.

"Once again, Colonel," said the general, "I can't leave half my men in
the wood. I beg of you, I beg of you," he repeated, "to occupy the
position and prepare for an attack."

"I peg of you yourself not to mix in vot is not your business!" suddenly
replied the irate colonel. "If you vere in the cavalry..."

"I am not in the cavalry, Colonel, but I am a Russian general and if you
are not aware of the fact..."

"Quite avare, your excellency," suddenly shouted the colonel, touching
his horse and turning purple in the face. "Vill you be so goot to come
to ze front and see dat zis position iss no goot? I don't vish to
destroy my men for your pleasure!"

"You forget yourself, Colonel. I am not considering my own pleasure and
I won't allow it to be said!"

Taking the colonel's outburst as a challenge to his courage, the general
expanded his chest and rode, frowning, beside him to the front line, as
if their differences would be settled there amongst the bullets. They
reached the front, several bullets sped over them, and they halted in
silence. There was nothing fresh to be seen from the line, for from
where they had been before it had been evident that it was impossible
for cavalry to act among the bushes and broken ground, as well as that
the French were outflanking our left. The general and colonel looked
sternly and significantly at one another like two fighting cocks
preparing for battle, each vainly trying to detect signs of cowardice in
the other. Both passed the examination successfully. As there was
nothing to be said, and neither wished to give occasion for it to be
alleged that he had been the first to leave the range of fire, they
would have remained there for a long time testing each other's courage
had it not been that just then they heard the rattle of musketry and a
muffled shout almost behind them in the wood. The French had attacked
the men collecting wood in the copse. It was no longer possible for the
hussars to retreat with the infantry. They were cut off from the line of
retreat on the left by the French. However inconvenient the position, it
was now necessary to attack in order to cut a way through for
themselves.

The squadron in which Rostov was serving had scarcely time to mount
before it was halted facing the enemy. Again, as at the Enns bridge,
there was nothing between the squadron and the enemy, and again that
terrible dividing line of uncertainty and fear--resembling the line
separating the living from the dead--lay between them. All were
conscious of this unseen line, and the question whether they would cross
it or not, and how they would cross it, agitated them all.

The colonel rode to the front, angrily gave some reply to questions put
to him by the officers, and, like a man desperately insisting on having
his own way, gave an order. No one said anything definite, but the rumor
of an attack spread through the squadron. The command to form up rang
out and the sabers whizzed as they were drawn from their scabbards.
Still no one moved. The troops of the left flank, infantry and hussars
alike, felt that the commander did not himself know what to do, and this
irresolution communicated itself to the men.

"If only they would be quick!" thought Rostov, feeling that at last the
time had come to experience the joy of an attack of which he had so
often heard from his fellow hussars.

"Fo'ward, with God, lads!" rang out Denisov's voice. "At a twot
fo'ward!"

The horses' croups began to sway in the front line. Rook pulled at the
reins and started of his own accord.

Before him, on the right, Rostov saw the front lines of his hussars and
still farther ahead a dark line which he could not see distinctly but
took to be the enemy. Shots could be heard, but some way off.

"Faster!" came the word of command, and Rostov felt Rook's flanks
drooping as he broke into a gallop.

Rostov anticipated his horse's movements and became more and more
elated. He had noticed a solitary tree ahead of him. This tree had been
in the middle of the line that had seemed so terrible--and now he had
crossed that line and not only was there nothing terrible, but
everything was becoming more and more happy and animated. "Oh, how I
will slash at him!" thought Rostov, gripping the hilt of his saber.

"Hur-a-a-a-ah!" came a roar of voices. "Let anyone come my way now,"
thought Rostov driving his spurs into Rook and letting him go at a full
gallop so that he outstripped the others. Ahead, the enemy was already
visible. Suddenly something like a birch broom seemed to sweep over the
squadron. Rostov raised his saber, ready to strike, but at that instant
the trooper Nikitenko, who was galloping ahead, shot away from him, and
Rostov felt as in a dream that he continued to be carried forward with
unnatural speed but yet stayed on the same spot. From behind him
Bondarchuk, an hussar he knew, jolted against him and looked angrily at
him. Bondarchuk's horse swerved and galloped past.

"How is it I am not moving? I have fallen, I am killed!" Rostov asked
and answered at the same instant. He was alone in the middle of a field.
Instead of the moving horses and hussars' backs, he saw nothing before
him but the motionless earth and the stubble around him. There was warm
blood under his arm. "No, I am wounded and the horse is killed." Rook
tried to rise on his forelegs but fell back, pinning his rider's leg.
Blood was flowing from his head; he struggled but could not rise. Rostov
also tried to rise but fell back, his sabretache having become entangled
in the saddle. Where our men were, and where the French, he did not
know. There was no one near.

Having disentangled his leg, he rose. "Where, on which side, was now the
line that had so sharply divided the two armies?" he asked himself and
could not answer. "Can something bad have happened to me?" he wondered
as he got up: and at that moment he felt that something superfluous was
hanging on his benumbed left arm. The wrist felt as if it were not his.
He examined his hand carefully, vainly trying to find blood on it. "Ah,
here are people coming," he thought joyfully, seeing some men running
toward him. "They will help me!" In front came a man wearing a strange
shako and a blue cloak, swarthy, sunburned, and with a hooked nose. Then
came two more, and many more running behind. One of them said something
strange, not in Russian. In among the hindmost of these men wearing
similar shakos was a Russian hussar. He was being held by the arms and
his horse was being led behind him.

"It must be one of ours, a prisoner. Yes. Can it be that they will take
me too? Who are these men?" thought Rostov, scarcely believing his eyes.
"Can they be French?" He looked at the approaching Frenchmen, and though
but a moment before he had been galloping to get at them and hack them
to pieces, their proximity now seemed so awful that he could not believe
his eyes. "Who are they? Why are they running? Can they be coming at me?
And why? To kill me? Me whom everyone is so fond of?" He remembered his
mother's love for him, and his family's, and his friends', and the
enemy's intention to kill him seemed impossible. "But perhaps they may
do it!" For more than ten seconds he stood not moving from the spot or
realizing the situation. The foremost Frenchman, the one with the hooked
nose, was already so close that the expression of his face could be
seen. And the excited, alien face of that man, his bayonet hanging down,
holding his breath, and running so lightly, frightened Rostov. He seized
his pistol and, instead of firing it, flung it at the Frenchman and ran
with all his might toward the bushes. He did not now run with the
feeling of doubt and conflict with which he had trodden the Enns bridge,
but with the feeling of a hare fleeing from the hounds. One single
sentiment, that of fear for his young and happy life, possessed his
whole being. Rapidly leaping the furrows, he fled across the field with
the impetuosity he used to show at catchplay, now and then turning his
good-natured, pale, young face to look back. A shudder of terror went
through him: "No, better not look," he thought, but having reached the
bushes he glanced round once more. The French had fallen behind, and
just as he looked round the first man changed his run to a walk and,
turning, shouted something loudly to a comrade farther back. Rostov
paused. "No, there's some mistake," thought he. "They can't have wanted
to kill me." But at the same time, his left arm felt as heavy as if a
seventy-pound weight were tied to it. He could run no more. The
Frenchman also stopped and took aim. Rostov closed his eyes and stooped
down. One bullet and then another whistled past him. He mustered his
last remaining strength, took hold of his left hand with his right, and
reached the bushes. Behind these were some Russian sharpshooters.




CHAPTER XX

The infantry regiments that had been caught unawares in the outskirts of
the wood ran out of it, the different companies getting mixed, and
retreated as a disorderly crowd. One soldier, in his fear, uttered the
senseless cry, "Cut off!" that is so terrible in battle, and that word
infected the whole crowd with a feeling of panic.

"Surrounded! Cut off? We're lost!" shouted the fugitives.

The moment he heard the firing and the cry from behind, the general
realized that something dreadful had happened to his regiment, and the
thought that he, an exemplary officer of many years' service who had
never been to blame, might be held responsible at headquarters for
negligence or inefficiency so staggered him that, forgetting the
recalcitrant cavalry colonel, his own dignity as a general, and above
all quite forgetting the danger and all regard for self-preservation, he
clutched the crupper of his saddle and, spurring his horse, galloped to
the regiment under a hail of bullets which fell around, but fortunately
missed him. His one desire was to know what was happening and at any
cost correct, or remedy, the mistake if he had made one, so that he, an
exemplary officer of twenty-two years' service, who had never been
censured, should not be held to blame.

Having galloped safely through the French, he reached a field behind the
copse across which our men, regardless of orders, were running and
descending the valley. That moment of moral hesitation which decides the
fate of battles had arrived. Would this disorderly crowd of soldiers
attend to the voice of their commander, or would they, disregarding him,
continue their flight? Despite his desperate shouts that used to seem so
terrible to the soldiers, despite his furious purple countenance
distorted out of all likeness to his former self, and the flourishing of
his saber, the soldiers all continued to run, talking, firing into the
air, and disobeying orders. The moral hesitation which decided the fate
of battles was evidently culminating in a panic.

The general had a fit of coughing as a result of shouting and of the
powder smoke and stopped in despair. Everything seemed lost. But at that
moment the French who were attacking, suddenly and without any apparent
reason, ran back and disappeared from the outskirts, and Russian
sharpshooters showed themselves in the copse. It was Timokhin's company,
which alone had maintained its order in the wood and, having lain in
ambush in a ditch, now attacked the French unexpectedly. Timokhin, armed
only with a sword, had rushed at the enemy with such a desperate cry and
such mad, drunken determination that, taken by surprise, the French had
thrown down their muskets and run. Dolokhov, running beside Timokhin,
killed a Frenchman at close quarters and was the first to seize the
surrendering French officer by his collar. Our fugitives returned, the
battalions re-formed, and the French who had nearly cut our left flank
in half were for the moment repulsed. Our reserve units were able to
join up, and the fight was at an end. The regimental commander and Major
Ekonomov had stopped beside a bridge, letting the retreating companies
pass by them, when a soldier came up and took hold of the commander's
stirrup, almost leaning against him. The man was wearing a bluish coat
of broadcloth, he had no knapsack or cap, his head was bandaged, and
over his shoulder a French munition pouch was slung. He had an officer's
sword in his hand. The soldier was pale, his blue eyes looked impudently
into the commander's face, and his lips were smiling. Though the
commander was occupied in giving instructions to Major Ekonomov, he
could not help taking notice of the soldier.

"Your excellency, here are two trophies," said Dolokhov, pointing to the
French sword and pouch. "I have taken an officer prisoner. I stopped the
company." Dolokhov breathed heavily from weariness and spoke in abrupt
sentences. "The whole company can bear witness. I beg you will remember
this, your excellency!"

"All right, all right," replied the commander, and turned to Major
Ekonomov.

But Dolokhov did not go away; he untied the handkerchief around his
head, pulled it off, and showed the blood congealed on his hair.

"A bayonet wound. I remained at the front. Remember, your excellency!"

Tushin's battery had been forgotten and only at the very end of the
action did Prince Bagration, still hearing the cannonade in the center,
send his orderly staff officer, and later Prince Andrew also, to order
the battery to retire as quickly as possible. When the supports attached
to Tushin's battery had been moved away in the middle of the action by
someone's order, the battery had continued firing and was only not
captured by the French because the enemy could not surmise that anyone
could have the effrontery to continue firing from four quite undefended
guns. On the contrary, the energetic action of that battery led the
French to suppose that here--in the center--the main Russian forces were
concentrated. Twice they had attempted to attack this point, but on each
occasion had been driven back by grapeshot from the four isolated guns
on the hillock.

Soon after Prince Bagration had left him, Tushin had succeeded in
setting fire to Schon Grabern.

"Look at them scurrying! It's burning! Just see the smoke! Fine! Grand!
Look at the smoke, the smoke!" exclaimed the artillerymen, brightening
up.

All the guns, without waiting for orders, were being fired in the
direction of the conflagration. As if urging each other on, the soldiers
cried at each shot: "Fine! That's good! Look at it... Grand!" The fire,
fanned by the breeze, was rapidly spreading. The French columns that had
advanced beyond the village went back; but as though in revenge for this
failure, the enemy placed ten guns to the right of the village and began
firing them at Tushin's battery.

In their childlike glee, aroused by the fire and their luck in
successfully cannonading the French, our artillerymen only noticed this
battery when two balls, and then four more, fell among our guns, one
knocking over two horses and another tearing off a munition-wagon
driver's leg. Their spirits once roused were, however, not diminished,
but only changed character. The horses were replaced by others from a
reserve gun carriage, the wounded were carried away, and the four guns
were turned against the ten-gun battery. Tushin's companion officer had
been killed at the beginning of the engagement and within an hour
seventeen of the forty men of the guns' crews had been disabled, but the
artillerymen were still as merry and lively as ever. Twice they noticed
the French appearing below them, and then they fired grapeshot at them.

Little Tushin, moving feebly and awkwardly, kept telling his orderly to
"refill my pipe for that one!" and then, scattering sparks from it, ran
forward shading his eyes with his small hand to look at the French.

"Smack at 'em, lads!" he kept saying, seizing the guns by the wheels and
working the screws himself.

Amid the smoke, deafened by the incessant reports which always made him
jump, Tushin not taking his pipe from his mouth ran from gun to gun, now
aiming, now counting the charges, now giving orders about replacing dead
or wounded horses and harnessing fresh ones, and shouting in his feeble
voice, so high pitched and irresolute. His face grew more and more
animated. Only when a man was killed or wounded did he frown and turn
away from the sight, shouting angrily at the men who, as is always the
case, hesitated about lifting the injured or dead. The soldiers, for the
most part handsome fellows and, as is always the case in an artillery
company, a head and shoulders taller and twice as broad as their
officer--all looked at their commander like children in an embarrassing
situation, and the expression on his face was invariably reflected on
theirs.

Owing to the terrible uproar and the necessity for concentration and
activity, Tushin did not experience the slightest unpleasant sense of
fear, and the thought that he might be killed or badly wounded never
occurred to him. On the contrary, he became more and more elated. It
seemed to him that it was a very long time ago, almost a day, since he
had first seen the enemy and fired the first shot, and that the corner
of the field he stood on was well-known and familiar ground. Though he
thought of everything, considered everything, and did everything the
best of officers could do in his position, he was in a state akin to
feverish delirium or drunkenness.

From the deafening sounds of his own guns around him, the whistle and
thud of the enemy's cannon balls, from the flushed and perspiring faces
of the crew bustling round the guns, from the sight of the blood of men
and horses, from the little puffs of smoke on the enemy's side (always
followed by a ball flying past and striking the earth, a man, a gun, a
horse), from the sight of all these things a fantastic world of his own
had taken possession of his brain and at that moment afforded him
pleasure. The enemy's guns were in his fancy not guns but pipes from
which occasional puffs were blown by an invisible smoker.

"There... he's puffing again," muttered Tushin to himself, as a small
cloud rose from the hill and was borne in a streak to the left by the
wind.

"Now look out for the ball... we'll throw it back."

"What do you want, your honor?" asked an artilleryman, standing close
by, who heard him muttering.

"Nothing... only a shell..." he answered.

"Come along, our Matvevna!" he said to himself. "Matvevna" * was the
name his fancy gave to the farthest gun of the battery, which was large
and of an old pattern. The French swarming round their guns seemed to
him like ants. In that world, the handsome drunkard Number One of the
second gun's crew was "uncle"; Tushin looked at him more often than at
anyone else and took delight in his every movement. The sound of
musketry at the foot of the hill, now diminishing, now increasing,
seemed like someone's breathing. He listened intently to the ebb and
flow of these sounds.


* Daughter of Matthew.

"Ah! Breathing again, breathing!" he muttered to himself.

He imagined himself as an enormously tall, powerful man who was throwing
cannon balls at the French with both hands.

"Now then, Matvevna, dear old lady, don't let me down!" he was saying as
he moved from the gun, when a strange, unfamiliar voice called above his
head: "Captain Tushin! Captain!"

Tushin turned round in dismay. It was the staff officer who had turned
him out of the booth at Grunth. He was shouting in a gasping voice:

"Are you mad? You have twice been ordered to retreat, and you..."

"Why are they down on me?" thought Tushin, looking in alarm at his
superior.

"I... don't..." he muttered, holding up two fingers to his cap. "I..."

But the staff officer did not finish what he wanted to say. A cannon
ball, flying close to him, caused him to duck and bend over his horse.
He paused, and just as he was about to say something more, another ball
stopped him. He turned his horse and galloped off.

"Retire! All to retire!" he shouted from a distance.

The soldiers laughed. A moment later, an adjutant arrived with the same
order.

It was Prince Andrew. The first thing he saw on riding up to the space
where Tushin's guns were stationed was an unharnessed horse with a
broken leg, that lay screaming piteously beside the harnessed horses.
Blood was gushing from its leg as from a spring. Among the limbers lay
several dead men. One ball after another passed over as he approached
and he felt a nervous shudder run down his spine. But the mere thought
of being afraid roused him again. "I cannot be afraid," thought he, and
dismounted slowly among the guns. He delivered the order and did not
leave the battery. He decided to have the guns removed from their
positions and withdrawn in his presence. Together with Tushin, stepping
across the bodies and under a terrible fire from the French, he attended
to the removal of the guns.

"A staff officer was here a minute ago, but skipped off," said an
artilleryman to Prince Andrew. "Not like your honor!"

Prince Andrew said nothing to Tushin. They were both so busy as to seem
not to notice one another. When having limbered up the only two cannon
that remained uninjured out of the four, they began moving down the hill
(one shattered gun and one unicorn were left behind), Prince Andrew rode
up to Tushin.

"Well, till we meet again..." he said, holding out his hand to Tushin.

"Good-bye, my dear fellow," said Tushin. "Dear soul! Good-bye, my dear
fellow!" and for some unknown reason tears suddenly filled his eyes.




CHAPTER XXI

The wind had fallen and black clouds, merging with the powder smoke,
hung low over the field of battle on the horizon. It was growing dark
and the glow of two conflagrations was the more conspicuous. The
cannonade was dying down, but the rattle of musketry behind and on the
right sounded oftener and nearer. As soon as Tushin with his guns,
continually driving round or coming upon wounded men, was out of range
of fire and had descended into the dip, he was met by some of the staff,
among them the staff officer and Zherkov, who had been twice sent to
Tushin's battery but had never reached it. Interrupting one another,
they all gave, and transmitted, orders as to how to proceed,
reprimanding and reproaching him. Tushin gave no orders, and, silently--
fearing to speak because at every word he felt ready to weep without
knowing why--rode behind on his artillery nag. Though the orders were to
abandon the wounded, many of them dragged themselves after troops and
begged for seats on the gun carriages. The jaunty infantry officer who
just before the battle had rushed out of Tushin's wattle shed was laid,
with a bullet in his stomach, on "Matvevna's" carriage. At the foot of
the hill, a pale hussar cadet, supporting one hand with the other, came
up to Tushin and asked for a seat.

"Captain, for God's sake! I've hurt my arm," he said timidly. "For God's
sake... I can't walk. For God's sake!"

It was plain that this cadet had already repeatedly asked for a lift and
been refused. He asked in a hesitating, piteous voice.

"Tell them to give me a seat, for God's sake!"

"Give him a seat," said Tushin. "Lay a cloak for him to sit on, lad," he
said, addressing his favorite soldier. "And where is the wounded
officer?"

"He has been set down. He died," replied someone.

"Help him up. Sit down, dear fellow, sit down! Spread out the cloak,
Antonov."

The cadet was Rostov. With one hand he supported the other; he was pale
and his jaw trembled, shivering feverishly. He was placed on "Matvevna,"
the gun from which they had removed the dead officer. The cloak they
spread under him was wet with blood which stained his breeches and arm.

"What, are you wounded, my lad?" said Tushin, approaching the gun on
which Rostov sat.

"No, it's a sprain."

"Then what is this blood on the gun carriage?" inquired Tushin.

"It was the officer, your honor, stained it," answered the artilleryman,
wiping away the blood with his coat sleeve, as if apologizing for the
state of his gun.

It was all that they could do to get the guns up the rise aided by the
infantry, and having reached the village of Gruntersdorf they halted. It
had grown so dark that one could not distinguish the uniforms ten paces
off, and the firing had begun to subside. Suddenly, near by on the
right, shouting and firing were again heard. Flashes of shot gleamed in
the darkness. This was the last French attack and was met by soldiers
who had sheltered in the village houses. They all rushed out of the
village again, but Tushin's guns could not move, and the artillerymen,
Tushin, and the cadet exchanged silent glances as they awaited their
fate. The firing died down and soldiers, talking eagerly, streamed out
of a side street.

"Not hurt, Petrov?" asked one.

"We've given it 'em hot, mate! They won't make another push now," said
another.

"You couldn't see a thing. How they shot at their own fellows! Nothing
could be seen. Pitch-dark, brother! Isn't there something to drink?"

The French had been repulsed for the last time. And again and again in
the complete darkness Tushin's guns moved forward, surrounded by the
humming infantry as by a frame.

In the darkness, it seemed as though a gloomy unseen river was flowing
always in one direction, humming with whispers and talk and the sound of
hoofs and wheels. Amid the general rumble, the groans and voices of the
wounded were more distinctly heard than any other sound in the darkness
of the night. The gloom that enveloped the army was filled with their
groans, which seemed to melt into one with the darkness of the night.
After a while the moving mass became agitated, someone rode past on a
white horse followed by his suite, and said something in passing: "What
did he say? Where to, now? Halt, is it? Did he thank us?" came eager
questions from all sides. The whole moving mass began pressing closer
together and a report spread that they were ordered to halt: evidently
those in front had halted. All remained where they were in the middle of
the muddy road.

Fires were lighted and the talk became more audible. Captain Tushin,
having given orders to his company, sent a soldier to find a dressing
station or a doctor for the cadet, and sat down by a bonfire the
soldiers had kindled on the road. Rostov, too, dragged himself to the
fire. From pain, cold, and damp, a feverish shivering shook his whole
body. Drowsiness was irresistibly mastering him, but he kept awake by an
excruciating pain in his arm, for which he could find no satisfactory
position. He kept closing his eyes and then again looking at the fire,
which seemed to him dazzlingly red, and at the feeble, round-shouldered
figure of Tushin who was sitting cross-legged like a Turk beside him.
Tushin's large, kind, intelligent eyes were fixed with sympathy and
commiseration on Rostov, who saw that Tushin with his whole heart wished
to help him but could not.

From all sides were heard the footsteps and talk of the infantry, who
were walking, driving past, and settling down all around. The sound of
voices, the tramping feet, the horses' hoofs moving in mud, the
crackling of wood fires near and afar, merged into one tremulous rumble.

It was no longer, as before, a dark, unseen river flowing through the
gloom, but a dark sea swelling and gradually subsiding after a storm.
Rostov looked at and listened listlessly to what passed before and
around him. An infantryman came to the fire, squatted on his heels, held
his hands to the blaze, and turned away his face.

"You don't mind your honor?" he asked Tushin. "I've lost my company,
your honor. I don't know where... such bad luck!"

With the soldier, an infantry officer with a bandaged cheek came up to
the bonfire, and addressing Tushin asked him to have the guns moved a
trifle to let a wagon go past. After he had gone, two soldiers rushed to
the campfire. They were quarreling and fighting desperately, each trying
to snatch from the other a boot they were both holding on to.

"You picked it up?... I dare say! You're very smart!" one of them
shouted hoarsely.

Then a thin, pale soldier, his neck bandaged with a bloodstained leg
band, came up and in angry tones asked the artillerymen for water.

"Must one die like a dog?" said he.

Tushin told them to give the man some water. Then a cheerful soldier ran
up, begging a little fire for the infantry.

"A nice little hot torch for the infantry! Good luck to you, fellow
countrymen. Thanks for the fire--we'll return it with interest," said
he, carrying away into the darkness a glowing stick.

Next came four soldiers, carrying something heavy on a cloak, and passed
by the fire. One of them stumbled.

"Who the devil has put the logs on the road?" snarled he.

"He's dead--why carry him?" said another.

"Shut up!"

And they disappeared into the darkness with their load.

"Still aching?" Tushin asked Rostov in a whisper.

"Yes."

"Your honor, you're wanted by the general. He is in the hut here," said
a gunner, coming up to Tushin.

"Coming, friend."

Tushin rose and, buttoning his greatcoat and pulling it straight, walked
away from the fire.

Not far from the artillery campfire, in a hut that had been prepared for
him, Prince Bagration sat at dinner, talking with some commanding
officers who had gathered at his quarters. The little old man with the
half-closed eyes was there greedily gnawing a mutton bone, and the
general who had served blamelessly for twenty-two years, flushed by a
glass of vodka and the dinner; and the staff officer with the signet
ring, and Zherkov, uneasily glancing at them all, and Prince Andrew,
pale, with compressed lips and feverishly glittering eyes.

In a corner of the hut stood a standard captured from the French, and
the accountant with the naive face was feeling its texture, shaking his
head in perplexity--perhaps because the banner really interested him,
perhaps because it was hard for him, hungry as he was, to look on at a
dinner where there was no place for him. In the next hut there was a
French colonel who had been taken prisoner by our dragoons. Our officers
were flocking in to look at him. Prince Bagration was thanking the
individual commanders and inquiring into details of the action and our
losses. The general whose regiment had been inspected at Braunau was
informing the prince that as soon as the action began he had withdrawn
from the wood, mustered the men who were woodcutting, and, allowing the
French to pass him, had made a bayonet charge with two battalions and
had broken up the French troops.

"When I saw, your excellency, that their first battalion was
disorganized, I stopped in the road and thought: 'I'll let them come on
and will meet them with the fire of the whole battalion'--and that's
what I did."

The general had so wished to do this and was so sorry he had not managed
to do it that it seemed to him as if it had really happened. Perhaps it
might really have been so? Could one possibly make out amid all that
confusion what did or did not happen?

"By the way, your excellency, I should inform you," he continued--
remembering Dolokhov's conversation with Kutuzov and his last interview
with the gentleman-ranker--"that Private Dolokhov, who was reduced to
the ranks, took a French officer prisoner in my presence and
particularly distinguished himself."

"I saw the Pavlograd hussars attack there, your excellency," chimed in
Zherkov, looking uneasily around. He had not seen the hussars all that
day, but had heard about them from an infantry officer. "They broke up
two squares, your excellency."

Several of those present smiled at Zherkov's words, expecting one of his
usual jokes, but noticing that what he was saying redounded to the glory
of our arms and of the day's work, they assumed a serious expression,
though many of them knew that what he was saying was a lie devoid of any
foundation. Prince Bagration turned to the old colonel:

"Gentlemen, I thank you all; all arms have behaved heroically: infantry,
cavalry, and artillery. How was it that two guns were abandoned in the
center?" he inquired, searching with his eyes for someone. (Prince
Bagration did not ask about the guns on the left flank; he knew that all
the guns there had been abandoned at the very beginning of the action.)
"I think I sent you?" he added, turning to the staff officer on duty.

"One was damaged," answered the staff officer, "and the other I can't
understand. I was there all the time giving orders and had only just
left.... It is true that it was hot there," he added, modestly.

Someone mentioned that Captain Tushin was bivouacking close to the
village and had already been sent for.

"Oh, but you were there?" said Prince Bagration, addressing Prince
Andrew.

"Of course, we only just missed one another," said the staff officer,
with a smile to Bolkonski.

"I had not the pleasure of seeing you," said Prince Andrew, coldly and
abruptly.

All were silent. Tushin appeared at the threshold and made his way
timidly from behind the backs of the generals. As he stepped past the
generals in the crowded hut, feeling embarrassed as he always was by the
sight of his superiors, he did not notice the staff of the banner and
stumbled over it. Several of those present laughed.

"How was it a gun was abandoned?" asked Bagration, frowning, not so much
at the captain as at those who were laughing, among whom Zherkov laughed
loudest.

Only now, when he was confronted by the stern authorities, did his guilt
and the disgrace of having lost two guns and yet remaining alive present
themselves to Tushin in all their horror. He had been so excited that he
had not thought about it until that moment. The officers' laughter
confused him still more. He stood before Bagration with his lower jaw
trembling and was hardly able to mutter: "I don't know... your
excellency... I had no men... your excellency."

"You might have taken some from the covering troops."

Tushin did not say that there were no covering troops, though that was
perfectly true. He was afraid of getting some other officer into
trouble, and silently fixed his eyes on Bagration as a schoolboy who has
blundered looks at an examiner.

The silence lasted some time. Prince Bagration, apparently not wishing
to be severe, found nothing to say; the others did not venture to
intervene. Prince Andrew looked at Tushin from under his brows and his
fingers twitched nervously.

"Your excellency!" Prince Andrew broke the silence with his abrupt
voice, "you were pleased to send me to Captain Tushin's battery. I went
there and found two thirds of the men and horses knocked out, two guns
smashed, and no supports at all."

Prince Bagration and Tushin looked with equal intentness at Bolkonski,
who spoke with suppressed agitation.

"And, if your excellency will allow me to express my opinion," he
continued, "we owe today's success chiefly to the action of that battery
and the heroic endurance of Captain Tushin and his company," and without
awaiting a reply, Prince Andrew rose and left the table.

Prince Bagration looked at Tushin, evidently reluctant to show distrust
in Bolkonski's emphatic opinion yet not feeling able fully to credit it,
bent his head, and told Tushin that he could go. Prince Andrew went out
with him.

"Thank you; you saved me, my dear fellow!" said Tushin.

Prince Andrew gave him a look, but said nothing and went away. He felt
sad and depressed. It was all so strange, so unlike what he had hoped.

"Who are they? Why are they here? What do they want? And when will all
this end?" thought Rostov, looking at the changing shadows before him.
The pain in his arm became more and more intense. Irresistible
drowsiness overpowered him, red rings danced before his eyes, and the
impression of those voices and faces and a sense of loneliness merged
with the physical pain. It was they, these soldiers--wounded and
unwounded--it was they who were crushing, weighing down, and twisting
the sinews and scorching the flesh of his sprained arm and shoulder. To
rid himself of them he closed his eyes.

For a moment he dozed, but in that short interval innumerable things
appeared to him in a dream: his mother and her large white hand, Sonya's
thin little shoulders, Natasha's eyes and laughter, Denisov with his
voice and mustache, and Telyanin and all that affair with Telyanin and
Bogdanich. That affair was the same thing as this soldier with the harsh
voice, and it was that affair and this soldier that were so agonizingly,
incessantly pulling and pressing his arm and always dragging it in one
direction. He tried to get away from them, but they would not for an
instant let his shoulder move a hair's breadth. It would not ache--it
would be well--if only they did not pull it, but it was impossible to
get rid of them.

He opened his eyes and looked up. The black canopy of night hung less
than a yard above the glow of the charcoal. Flakes of falling snow were
fluttering in that light. Tushin had not returned, the doctor had not
come. He was alone now, except for a soldier who was sitting naked at
the other side of the fire, warming his thin yellow body.

"Nobody wants me!" thought Rostov. "There is no one to help me or pity
me. Yet I was once at home, strong, happy, and loved." He sighed and,
doing so, groaned involuntarily.

"Eh, is anything hurting you?" asked the soldier, shaking his shirt out
over the fire, and not waiting for an answer he gave a grunt and added:
"What a lot of men have been crippled today--frightful!"

Rostov did not listen to the soldier. He looked at the snowflakes
fluttering above the fire and remembered a Russian winter at his warm,
bright home, his fluffy fur coat, his quickly gliding sleigh, his
healthy body, and all the affection and care of his family. "And why did
I come here?" he wondered.

Next day the French army did not renew their attack, and the remnant of
Bagration's detachment was reunited to Kutuzov's army.

BOOK THREE: 1805




CHAPTER I

Prince Vasili was not a man who deliberately thought out his plans.
Still less did he think of injuring anyone for his own advantage. He was
merely a man of the world who had got on and to whom getting on had
become a habit. Schemes and devices for which he never rightly accounted
to himself, but which formed the whole interest of his life, were
constantly shaping themselves in his mind, arising from the
circumstances and persons he met. Of these plans he had not merely one
or two in his head but dozens, some only beginning to form themselves,
some approaching achievement, and some in course of disintegration. He
did not, for instance, say to himself: "This man now has influence, I
must gain his confidence and friendship and through him obtain a special
grant." Nor did he say to himself: "Pierre is a rich man, I must entice
him to marry my daughter and lend me the forty thousand rubles I need."
But when he came across a man of position his instinct immediately told
him that this man could be useful, and without any premeditation Prince
Vasili took the first opportunity to gain his confidence, flatter him,
become intimate with him, and finally make his request.

He had Pierre at hand in Moscow and procured for him an appointment as
Gentleman of the Bedchamber, which at that time conferred the status of
Councilor of State, and insisted on the young man accompanying him to
Petersburg and staying at his house. With apparent absent-mindedness,
yet with unhesitating assurance that he was doing the right thing,
Prince Vasili did everything to get Pierre to marry his daughter. Had he
thought out his plans beforehand he could not have been so natural and
shown such unaffected familiarity in intercourse with everybody both
above and below him in social standing. Something always drew him toward
those richer and more powerful than himself and he had rare skill in
seizing the most opportune moment for making use of people.

Pierre, on unexpectedly becoming Count Bezukhov and a rich man, felt
himself after his recent loneliness and freedom from cares so beset and
preoccupied that only in bed was he able to be by himself. He had to
sign papers, to present himself at government offices, the purpose of
which was not clear to him, to question his chief steward, to visit his
estate near Moscow, and to receive many people who formerly did not even
wish to know of his existence but would now have been offended and
grieved had he chosen not to see them. These different people--
businessmen, relations, and acquaintances alike--were all disposed to
treat the young heir in the most friendly and flattering manner: they
were all evidently firmly convinced of Pierre's noble qualities. He was
always hearing such words as: "With your remarkable kindness," or, "With
your excellent heart," "You are yourself so honorable Count," or, "Were
he as clever as you," and so on, till he began sincerely to believe in
his own exceptional kindness and extraordinary intelligence, the more so
as in the depth of his heart it had always seemed to him that he really
was very kind and intelligent. Even people who had formerly been
spiteful toward him and evidently unfriendly now became gentle and
affectionate. The angry eldest princess, with the long waist and hair
plastered down like a doll's, had come into Pierre's room after the
funeral. With drooping eyes and frequent blushes she told him she was
very sorry about their past misunderstandings and did not now feel she
had a right to ask him for anything, except only for permission, after
the blow she had received, to remain for a few weeks longer in the house
she so loved and where she had sacrificed so much. She could not refrain
from weeping at these words. Touched that this statuesque princess could
so change, Pierre took her hand and begged her forgiveness, without
knowing what for. From that day the eldest princess quite changed toward
Pierre and began knitting a striped scarf for him.

"Do this for my sake, mon cher; after all, she had to put up with a
great deal from the deceased," said Prince Vasili to him, handing him a
deed to sign for the princess' benefit.

Prince Vasili had come to the conclusion that it was necessary to throw
this bone--a bill for thirty thousand rubles--to the poor princess that
it might not occur to her to speak of his share in the affair of the
inlaid portfolio. Pierre signed the deed and after that the princess
grew still kinder. The younger sisters also became affectionate to him,
especially the youngest, the pretty one with the mole, who often made
him feel confused by her smiles and her own confusion when meeting him.

It seemed so natural to Pierre that everyone should like him, and it
would have seemed so unnatural had anyone disliked him, that he could
not but believe in the sincerity of those around him. Besides, he had no
time to ask himself whether these people were sincere or not. He was
always busy and always felt in a state of mild and cheerful
intoxication. He felt as though he were the center of some important and
general movement; that something was constantly expected of him, that if
he did not do it he would grieve and disappoint many people, but if he
did this and that, all would be well; and he did what was demanded of
him, but still that happy result always remained in the future.

More than anyone else, Prince Vasili took possession of Pierre's affairs
and of Pierre himself in those early days. From the death of Count
Bezukhov he did not let go his hold of the lad. He had the air of a man
oppressed by business, weary and suffering, who yet would not, for
pity's sake, leave this helpless youth who, after all, was the son of
his old friend and the possessor of such enormous wealth, to the caprice
of fate and the designs of rogues. During the few days he spent in
Moscow after the death of Count Bezukhov, he would call Pierre, or go to
him himself, and tell him what ought to be done in a tone of weariness
and assurance, as if he were adding every time: "You know I am
overwhelmed with business and it is purely out of charity that I trouble
myself about you, and you also know quite well that what I propose is
the only thing possible."

"Well, my dear fellow, tomorrow we are off at last," said Prince Vasili
one day, closing his eyes and fingering Pierre's elbow, speaking as if
he were saying something which had long since been agreed upon and could
not now be altered. "We start tomorrow and I'm giving you a place in my
carriage. I am very glad. All our important business here is now
settled, and I ought to have been off long ago. Here is something I have
received from the chancellor. I asked him for you, and you have been
entered in the diplomatic corps and made a Gentleman of the Bedchamber.
The diplomatic career now lies open before you."

Notwithstanding the tone of wearied assurance with which these words
were pronounced, Pierre, who had so long been considering his career,
wished to make some suggestion. But Prince Vasili interrupted him in the
special deep cooing tone, precluding the possibility of interrupting his
speech, which he used in extreme cases when special persuasion was
needed.

"Mais, mon cher, I did this for my own sake, to satisfy my conscience,
and there is nothing to thank me for. No one has ever complained yet of
being too much loved; and besides, you are free, you could throw it up
tomorrow. But you will see everything for yourself when you get to
Petersburg. It is high time for you to get away from these terrible
recollections." Prince Vasili sighed. "Yes, yes, my boy. And my valet
can go in your carriage. Ah! I was nearly forgetting," he added. "You
know, mon cher, your father and I had some accounts to settle, so I have
received what was due from the Ryazan estate and will keep it; you won't
require it. We'll go into the accounts later."

By "what was due from the Ryazan estate" Prince Vasili meant several
thousand rubles quitrent received from Pierre's peasants, which the
prince had retained for himself.

In Petersburg, as in Moscow, Pierre found the same atmosphere of
gentleness and affection. He could not refuse the post, or rather the
rank (for he did nothing), that Prince Vasili had procured for him, and
acquaintances, invitations, and social occupations were so numerous
that, even more than in Moscow, he felt a sense of bewilderment, bustle,
and continual expectation of some good, always in front of him but never
attained.

Of his former bachelor acquaintances many were no longer in Petersburg.
The Guards had gone to the front; Dolokhov had been reduced to the
ranks; Anatole was in the army somewhere in the provinces; Prince Andrew
was abroad; so Pierre had not the opportunity to spend his nights as he
used to like to spend them, or to open his mind by intimate talks with a
friend older than himself and whom he respected. His whole time was
taken up with dinners and balls and was spent chiefly at Prince Vasili's
house in the company of the stout princess, his wife, and his beautiful
daughter Helene.

Like the others, Anna Pavlovna Scherer showed Pierre the change of
attitude toward him that had taken place in society.

Formerly in Anna Pavlovna's presence, Pierre had always felt that what
he was saying was out of place, tactless and unsuitable, that remarks
which seemed to him clever while they formed in his mind became foolish
as soon as he uttered them, while on the contrary Hippolyte's stupidest
remarks came out clever and apt. Now everything Pierre said was
charmant. Even if Anna Pavlovna did not say so, he could see that she
wished to and only refrained out of regard for his modesty.

In the beginning of the winter of 1805-6 Pierre received one of Anna
Pavlovna's usual pink notes with an invitation to which was added: "You
will find the beautiful Helene here, whom it is always delightful to
see."

When he read that sentence, Pierre felt for the first time that some
link which other people recognized had grown up between himself and
Helene, and that thought both alarmed him, as if some obligation were
being imposed on him which he could not fulfill, and pleased him as an
entertaining supposition.

Anna Pavlovna's "At Home" was like the former one, only the novelty she
offered her guests this time was not Mortemart, but a diplomatist fresh
from Berlin with the very latest details of the Emperor Alexander's
visit to Potsdam, and of how the two august friends had pledged
themselves in an indissoluble alliance to uphold the cause of justice
against the enemy of the human race. Anna Pavlovna received Pierre with
a shade of melancholy, evidently relating to the young man's recent loss
by the death of Count Bezukhov (everyone constantly considered it a duty
to assure Pierre that he was greatly afflicted by the death of the
father he had hardly known), and her melancholy was just like the august
melancholy she showed at the mention of her most august Majesty the
Empress Marya Fedorovna. Pierre felt flattered by this. Anna Pavlovna
arranged the different groups in her drawing room with her habitual
skill. The large group, in which were Prince Vasili and the generals,
had the benefit of the diplomat. Another group was at the tea table.
Pierre wished to join the former, but Anna Pavlovna--who was in the
excited condition of a commander on a battlefield to whom thousands of
new and brilliant ideas occur which there is hardly time to put in
action--seeing Pierre, touched his sleeve with her finger, saying:

"Wait a bit, I have something in view for you this evening." (She
glanced at Helene and smiled at her.) "My dear Helene, be charitable to
my poor aunt who adores you. Go and keep her company for ten minutes.
And that it will not be too dull, here is the dear count who will not
refuse to accompany you."

The beauty went to the aunt, but Anna Pavlovna detained Pierre, looking
as if she had to give some final necessary instructions.

"Isn't she exquisite?" she said to Pierre, pointing to the stately
beauty as she glided away. "And how she carries herself! For so young a
girl, such tact, such masterly perfection of manner! It comes from her
heart. Happy the man who wins her! With her the least worldly of men
would occupy a most brilliant position in society. Don't you think so? I
only wanted to know your opinion," and Anna Pavlovna let Pierre go.

Pierre, in reply, sincerely agreed with her as to Helene's perfection of
manner. If he ever thought of Helene, it was just of her beauty and her
remarkable skill in appearing silently dignified in society.

The old aunt received the two young people in her corner, but seemed
desirous of hiding her adoration for Helene and inclined rather to show
her fear of Anna Pavlovna. She looked at her niece, as if inquiring what
she was to do with these people. On leaving them, Anna Pavlovna again
touched Pierre's sleeve, saying: "I hope you won't say that it is dull
in my house again," and she glanced at Helene.

Helene smiled, with a look implying that she did not admit the
possibility of anyone seeing her without being enchanted. The aunt
coughed, swallowed, and said in French that she was very pleased to see
Helene, then she turned to Pierre with the same words of welcome and the
same look. In the middle of a dull and halting conversation, Helene
turned to Pierre with the beautiful bright smile that she gave to
everyone. Pierre was so used to that smile, and it had so little meaning
for him, that he paid no attention to it. The aunt was just speaking of
a collection of snuffboxes that had belonged to Pierre's father, Count
Bezukhov, and showed them her own box. Princess Helene asked to see the
portrait of the aunt's husband on the box lid.

"That is probably the work of Vinesse," said Pierre, mentioning a
celebrated miniaturist, and he leaned over the table to take the
snuffbox while trying to hear what was being said at the other table.

He half rose, meaning to go round, but the aunt handed him the snuffbox,
passing it across Helene's back. Helene stooped forward to make room,
and looked round with a smile. She was, as always at evening parties,
wearing a dress such as was then fashionable, cut very low at front and
back. Her bust, which had always seemed like marble to Pierre, was so
close to him that his shortsighted eyes could not but perceive the
living charm of her neck and shoulders, so near to his lips that he need
only have bent his head a little to have touched them. He was conscious
of the warmth of her body, the scent of perfume, and the creaking of her
corset as she moved. He did not see her marble beauty forming a complete
whole with her dress, but all the charm of her body only covered by her
garments. And having once seen this he could not help being aware of it,
just as we cannot renew an illusion we have once seen through.

"So you have never noticed before how beautiful I am?" Helene seemed to
say. "You had not noticed that I am a woman? Yes, I am a woman who may
belong to anyone--to you too," said her glance. And at that moment
Pierre felt that Helene not only could, but must, be his wife, and that
it could not be otherwise.

He knew this at that moment as surely as if he had been standing at the
altar with her. How and when this would be he did not know, he did not
even know if it would be a good thing (he even felt, he knew not why,
that it would be a bad thing), but he knew it would happen.

Pierre dropped his eyes, lifted them again, and wished once more to see
her as a distant beauty far removed from him, as he had seen her every
day until then, but he could no longer do it. He could not, any more
than a man who has been looking at a tuft of steppe grass through the
mist and taking it for a tree can again take it for a tree after he has
once recognized it to be a tuft of grass. She was terribly close to him.
She already had power over him, and between them there was no longer any
barrier except the barrier of his own will.

"Well, I will leave you in your little corner," came Anna Pavlovna's
voice, "I see you are all right there."

And Pierre, anxiously trying to remember whether he had done anything
reprehensible, looked round with a blush. It seemed to him that everyone
knew what had happened to him as he knew it himself.

A little later when he went up to the large circle, Anna Pavlovna said
to him: "I hear you are refitting your Petersburg house?"

This was true. The architect had told him that it was necessary, and
Pierre, without knowing why, was having his enormous Petersburg house
done up.

"That's a good thing, but don't move from Prince Vasili's. It is good to
have a friend like the prince," she said, smiling at Prince Vasili. "I
know something about that. Don't I? And you are still so young. You need
advice. Don't be angry with me for exercising an old woman's privilege."

She paused, as women always do, expecting something after they have
mentioned their age. "If you marry it will be a different thing," she
continued, uniting them both in one glance. Pierre did not look at
Helene nor she at him. But she was just as terribly close to him. He
muttered something and colored.

When he got home he could not sleep for a long time for thinking of what
had happened. What had happened? Nothing. He had merely understood that
the woman he had known as a child, of whom when her beauty was mentioned
he had said absent-mindedly: "Yes, she's good looking," he had
understood that this woman might belong to him.

"But she's stupid. I have myself said she is stupid," he thought. "There
is something nasty, something wrong, in the feeling she excites in me. I
have been told that her brother Anatole was in love with her and she
with him, that there was quite a scandal and that that's why he was sent
away. Hippolyte is her brother... Prince Vasili is her father... It's
bad...." he reflected, but while he was thinking this (the reflection
was still incomplete), he caught himself smiling and was conscious that
another line of thought had sprung up, and while thinking of her
worthlessness he was also dreaming of how she would be his wife, how she
would love him become quite different, and how all he had thought and
heard of her might be false. And he again saw her not as the daughter of
Prince Vasili, but visualized her whole body only veiled by its gray
dress. "But no! Why did this thought never occur to me before?" and
again he told himself that it was impossible, that there would be
something unnatural, and as it seemed to him dishonorable, in this
marriage. He recalled her former words and looks and the words and looks
of those who had seen them together. He recalled Anna Pavlovna's words
and looks when she spoke to him about his house, recalled thousands of
such hints from Prince Vasili and others, and was seized by terror lest
he had already, in some way, bound himself to do something that was
evidently wrong and that he ought not to do. But at the very time he was
expressing this conviction to himself, in another part of his mind her
image rose in all its womanly beauty.




CHAPTER II

In November, 1805, Prince Vasili had to go on a tour of inspection in
four different provinces. He had arranged this for himself so as to
visit his neglected estates at the same time and pick up his son Anatole
where his regiment was stationed, and take him to visit Prince Nicholas
Bolkonski in order to arrange a match for him with the daughter of that
rich old man. But before leaving home and undertaking these new affairs,
Prince Vasili had to settle matters with Pierre, who, it is true, had
latterly spent whole days at home, that is, in Prince Vasili's house
where he was staying, and had been absurd, excited, and foolish in
Helene's presence (as a lover should be), but had not yet proposed to
her.

"This is all very fine, but things must be settled," said Prince Vasili
to himself, with a sorrowful sigh, one morning, feeling that Pierre who
was under such obligations to him ("But never mind that") was not
behaving very well in this matter. "Youth, frivolity... well, God be
with him," thought he, relishing his own goodness of heart, "but it must
be brought to a head. The day after tomorrow will be Lelya's name day. I
will invite two or three people, and if he does not understand what he
ought to do then it will be my affair--yes, my affair. I am her father."

Six weeks after Anna Pavlovna's "At Home" and after the sleepless night
when he had decided that to marry Helene would be a calamity and that he
ought to avoid her and go away, Pierre, despite that decision, had not
left Prince Vasili's and felt with terror that in people's eyes he was
every day more and more connected with her, that it was impossible for
him to return to his former conception of her, that he could not break
away from her, and that though it would be a terrible thing he would
have to unite his fate with hers. He might perhaps have been able to
free himself but that Prince Vasili (who had rarely before given
receptions) now hardly let a day go by without having an evening party
at which Pierre had to be present unless he wished to spoil the general
pleasure and disappoint everyone's expectation. Prince Vasili, in the
rare moments when he was at home, would take Pierre's hand in passing
and draw it downwards, or absent-mindedly hold out his wrinkled, clean-
shaven cheek for Pierre to kiss and would say: "Till tomorrow," or, "Be
in to dinner or I shall not see you," or, "I am staying in for your
sake," and so on. And though Prince Vasili, when he stayed in (as he
said) for Pierre's sake, hardly exchanged a couple of words with him,
Pierre felt unable to disappoint him. Every day he said to himself one
and the same thing: "It is time I understood her and made up my mind
what she really is. Was I mistaken before, or am I mistaken now? No, she
is not stupid, she is an excellent girl," he sometimes said to himself
"she never makes a mistake, never says anything stupid. She says little,
but what she does say is always clear and simple, so she is not stupid.
She never was abashed and is not abashed now, so she cannot be a bad
woman!" He had often begun to make reflections or think aloud in her
company, and she had always answered him either by a brief but
appropriate remark--showing that it did not interest her--or by a silent
look and smile which more palpably than anything else showed Pierre her
superiority. She was right in regarding all arguments as nonsense in
comparison with that smile.

She always addressed him with a radiantly confiding smile meant for him
alone, in which there was something more significant than in the general
smile that usually brightened her face. Pierre knew that everyone was
waiting for him to say a word and cross a certain line, and he knew that
sooner or later he would step across it, but an incomprehensible terror
seized him at the thought of that dreadful step. A thousand times during
that month and a half while he felt himself drawn nearer and nearer to
that dreadful abyss, Pierre said to himself: "What am I doing? I need
resolution. Can it be that I have none?"

He wished to take a decision, but felt with dismay that in this matter
he lacked that strength of will which he had known in himself and really
possessed. Pierre was one of those who are only strong when they feel
themselves quite innocent, and since that day when he was overpowered by
a feeling of desire while stooping over the snuffbox at Anna Pavlovna's,
an unacknowledged sense of the guilt of that desire paralyzed his will.

On Helene's name day, a small party of just their own people--as his
wife said--met for supper at Prince Vasili's. All these friends and
relations had been given to understand that the fate of the young girl
would be decided that evening. The visitors were seated at supper.
Princess Kuragina, a portly imposing woman who had once been handsome,
was sitting at the head of the table. On either side of her sat the more
important guests--an old general and his wife, and Anna Pavlovna
Scherer. At the other end sat the younger and less important guests, and
there too sat the members of the family, and Pierre and Helene, side by
side. Prince Vasili was not having any supper: he went round the table
in a merry mood, sitting down now by one, now by another, of the guests.
To each of them he made some careless and agreeable remark except to
Pierre and Helene, whose presence he seemed not to notice. He enlivened
the whole party. The wax candles burned brightly, the silver and crystal
gleamed, so did the ladies' toilets and the gold and silver of the men's
epaulets; servants in scarlet liveries moved round the table, the
clatter of plates, knives, and glasses mingled with the animated hum of
several conversations. At one end of the table, the old chamberlain was
heard assuring an old baroness that he loved her passionately, at which
she laughed; at the other could be heard the story of the misfortunes of
some Mary Viktorovna or other. At the center of the table, Prince Vasili
attracted everybody's attention. With a facetious smile on his face, he
was telling the ladies about last Wednesday's meeting of the Imperial
Council, at which Sergey Kuzmich Vyazmitinov, the new military governor
general of Petersburg, had received and read the then famous rescript of
the Emperor Alexander from the army to Sergey Kuzmich, in which the
Emperor said that he was receiving from all sides declarations of the
people's loyalty, that the declaration from Petersburg gave him
particular pleasure, and that he was proud to be at the head of such a
nation and would endeavor to be worthy of it. This rescript began with
the words: "Sergey Kuzmich, From all sides reports reach me," etc.

"Well, and so he never got farther than: 'Sergey Kuzmich'?" asked one of
the ladies.

"Exactly, not a hair's breadth farther," answered Prince Vasili,
laughing, "'Sergey Kuzmich... From all sides... From all sides... Sergey
Kuzmich...' Poor Vyazmitinov could not get any farther! He began the
rescript again and again, but as soon as he uttered 'Sergey' he sobbed,
'Kuz-mi-ch,' tears, and 'From all sides' was smothered in sobs and he
could get no farther. And again his handkerchief, and again: 'Sergey
Kuzmich, From all sides,'... and tears, till at last somebody else was
asked to read it."

"Kuzmich... From all sides... and then tears," someone repeated
laughing.

"Don't be unkind," cried Anna Pavlovna from her end of the table holding
up a threatening finger. "He is such a worthy and excellent man, our
dear Vyazmitinov...."

Everybody laughed a great deal. At the head of the table, where the
honored guests sat, everyone seemed to be in high spirits and under the
influence of a variety of exciting sensations. Only Pierre and Helene
sat silently side by side almost at the bottom of the table, a
suppressed smile brightening both their faces, a smile that had nothing
to do with Sergey Kuzmich--a smile of bashfulness at their own feelings.
But much as all the rest laughed, talked, and joked, much as they
enjoyed their Rhine wine, saute, and ices, and however they avoided
looking at the young couple, and heedless and unobservant as they seemed
of them, one could feel by the occasional glances they gave that the
story about Sergey Kuzmich, the laughter, and the food were all a
pretense, and that the whole attention of that company was directed to--
Pierre and Helene. Prince Vasili mimicked the sobbing of Sergey Kuzmich
and at the same time his eyes glanced toward his daughter, and while he
laughed the expression on his face clearly said: "Yes... it's getting
on, it will all be settled today." Anna Pavlovna threatened him on
behalf of "our dear Vyazmitinov," and in her eyes, which, for an
instant, glanced at Pierre, Prince Vasili read a congratulation on his
future son-in-law and on his daughter's happiness. The old princess
sighed sadly as she offered some wine to the old lady next to her and
glanced angrily at her daughter, and her sigh seemed to say: "Yes,
there's nothing left for you and me but to sip sweet wine, my dear, now
that the time has come for these young ones to be thus boldly,
provocatively happy." "And what nonsense all this is that I am saying!"
thought a diplomatist, glancing at the happy faces of the lovers.
"That's happiness!"

Into the insignificant, trifling, and artificial interests uniting that
society had entered the simple feeling of the attraction of a healthy
and handsome young man and woman for one another. And this human feeling
dominated everything else and soared above all their affected chatter.
Jests fell flat, news was not interesting, and the animation was
evidently forced. Not only the guests but even the footmen waiting at
table seemed to feel this, and they forgot their duties as they looked
at the beautiful Helene with her radiant face and at the red, broad, and
happy though uneasy face of Pierre. It seemed as if the very light of
the candles was focused on those two happy faces alone.

Pierre felt that he was the center of it all, and this both pleased and
embarrassed him. He was like a man entirely absorbed in some occupation.
He did not see, hear, or understand anything clearly. Only now and then
detached ideas and impressions from the world of reality shot
unexpectedly through his mind.

"So it is all finished!" he thought. "And how has it all happened? How
quickly! Now I know that not because of her alone, nor of myself alone,
but because of everyone, it must inevitably come about. They are all
expecting it, they are so sure that it will happen that I cannot, I
cannot, disappoint them. But how will it be? I do not know, but it will
certainly happen!" thought Pierre, glancing at those dazzling shoulders
close to his eyes.

Or he would suddenly feel ashamed of he knew not what. He felt it
awkward to attract everyone's attention and to be considered a lucky man
and, with his plain face, to be looked on as a sort of Paris possessed
of a Helen. "But no doubt it always is and must be so!" he consoled
himself. "And besides, what have I done to bring it about? How did it
begin? I traveled from Moscow with Prince Vasili. Then there was
nothing. So why should I not stay at his house? Then I played cards with
her and picked up her reticule and drove out with her. How did it begin,
when did it all come about?" And here he was sitting by her side as her
betrothed, seeing, hearing, feeling her nearness, her breathing, her
movements, her beauty. Then it would suddenly seem to him that it was
not she but he was so unusually beautiful, and that that was why they
all looked so at him, and flattered by this general admiration he would
expand his chest, raise his head, and rejoice at his good fortune.
Suddenly he heard a familiar voice repeating something to him a second
time. But Pierre was so absorbed that he did not understand what was
said.

"I am asking you when you last heard from Bolkonski," repeated Prince
Vasili a third time. "How absent-minded you are, my dear fellow."

Prince Vasili smiled, and Pierre noticed that everyone was smiling at
him and Helene. "Well, what of it, if you all know it?" thought Pierre.
"What of it? It's the truth!" and he himself smiled his gentle childlike
smile, and Helene smiled too.

"When did you get the letter? Was it from Olmutz?" repeated Prince
Vasili, who pretended to want to know this in order to settle a dispute.

"How can one talk or think of such trifles?" thought Pierre.

"Yes, from Olmutz," he answered, with a sigh.

After supper Pierre with his partner followed the others into the
drawing room. The guests began to disperse, some without taking leave of
Helene. Some, as if unwilling to distract her from an important
occupation, came up to her for a moment and made haste to go away,
refusing to let her see them off. The diplomatist preserved a mournful
silence as he left the drawing room. He pictured the vanity of his
diplomatic career in comparison with Pierre's happiness. The old general
grumbled at his wife when she asked how his leg was. "Oh, the old fool,"
he thought. "That Princess Helene will be beautiful still when she's
fifty."

"I think I may congratulate you," whispered Anna Pavlovna to the old
princess, kissing her soundly. "If I hadn't this headache I'd have
stayed longer."

The old princess did not reply, she was tormented by jealousy of her
daughter's happiness.

While the guests were taking their leave Pierre remained for a long time
alone with Helene in the little drawing room where they were sitting. He
had often before, during the last six weeks, remained alone with her,
but had never spoken to her of love. Now he felt that it was inevitable,
but he could not make up his mind to take the final step. He felt
ashamed; he felt that he was occupying someone else's place here beside
Helene. "This happiness is not for you," some inner voice whispered to
him. "This happiness is for those who have not in them what there is in
you."

But, as he had to say something, he began by asking her whether she was
satisfied with the party. She replied in her usual simple manner that
this name day of hers had been one of the pleasantest she had ever had.

Some of the nearest relatives had not yet left. They were sitting in the
large drawing room. Prince Vasili came up to Pierre with languid
footsteps. Pierre rose and said it was getting late. Prince Vasili gave
him a look of stern inquiry, as though what Pierre had just said was so
strange that one could not take it in. But then the expression of
severity changed, and he drew Pierre's hand downwards, made him sit
down, and smiled affectionately.

"Well, Lelya?" he asked, turning instantly to his daughter and
addressing her with the careless tone of habitual tenderness natural to
parents who have petted their children from babyhood, but which Prince
Vasili had only acquired by imitating other parents.

And he again turned to Pierre.

"Sergey Kuzmich--From all sides-" he said, unbuttoning the top button of
his waistcoat.

Pierre smiled, but his smile showed that he knew it was not the story
about Sergey Kuzmich that interested Prince Vasili just then, and Prince
Vasili saw that Pierre knew this. He suddenly muttered something and
went away. It seemed to Pierre that even the prince was disconcerted.
The sight of the discomposure of that old man of the world touched
Pierre: he looked at Helene and she too seemed disconcerted, and her
look seemed to say: "Well, it is your own fault."

"The step must be taken but I cannot, I cannot!" thought Pierre, and he
again began speaking about indifferent matters, about Sergey Kuzmich,
asking what the point of the story was as he had not heard it properly.
Helene answered with a smile that she too had missed it.

When Prince Vasili returned to the drawing room, the princess, his wife,
was talking in low tones to the elderly lady about Pierre.

"Of course, it is a very brilliant match, but happiness, my dear..."

"Marriages are made in heaven," replied the elderly lady.

Prince Vasili passed by, seeming not to hear the ladies, and sat down on
a sofa in a far corner of the room. He closed his eyes and seemed to be
dozing. His head sank forward and then he roused himself.

"Aline," he said to his wife, "go and see what they are about."

The princess went up to the door, passed by it with a dignified and
indifferent air, and glanced into the little drawing room. Pierre and
Helene still sat talking just as before.

"Still the same," she said to her husband.

Prince Vasili frowned, twisting his mouth, his cheeks quivered and his
face assumed the coarse, unpleasant expression peculiar to him. Shaking
himself, he rose, threw back his head, and with resolute steps went past
the ladies into the little drawing room. With quick steps he went
joyfully up to Pierre. His face was so unusually triumphant that Pierre
rose in alarm on seeing it.

"Thank God!" said Prince Vasili. "My wife has told me everything!" (He
put one arm around Pierre and the other around his daughter.)--"My dear
boy... Lelya... I am very pleased." (His voice trembled.) "I loved your
father... and she will make you a good wife... God bless you!..."

He embraced his daughter, and then again Pierre, and kissed him with his
malodorous mouth. Tears actually moistened his cheeks.

"Princess, come here!" he shouted.

The old princess came in and also wept. The elderly lady was using her
handkerchief too. Pierre was kissed, and he kissed the beautiful
Helene's hand several times. After a while they were left alone again.

"All this had to be and could not be otherwise," thought Pierre, "so it
is useless to ask whether it is good or bad. It is good because it's
definite and one is rid of the old tormenting doubt." Pierre held the
hand of his betrothed in silence, looking at her beautiful bosom as it
rose and fell.

"Helene!" he said aloud and paused.

"Something special is always said in such cases," he thought, but could
not remember what it was that people say. He looked at her face. She
drew nearer to him. Her face flushed.

"Oh, take those off... those..." she said, pointing to his spectacles.

Pierre took them off, and his eyes, besides the strange look eyes have
from which spectacles have just been removed, had also a frightened and
inquiring look. He was about to stoop over her hand and kiss it, but
with a rapid, almost brutal movement of her head, she intercepted his
lips and met them with her own. Her face struck Pierre, by its altered,
unpleasantly excited expression.

"It is too late now, it's done; besides I love her," thought Pierre.

"Je vous aime!" * he said, remembering what has to be said at such
moments: but his words sounded so weak that he felt ashamed of himself.


* "I love you."

Six weeks later he was married, and settled in Count Bezukhov's large,
newly furnished Petersburg house, the happy possessor, as people said,
of a wife who was a celebrated beauty and of millions of money.




CHAPTER III

Old Prince Nicholas Bolkonski received a letter from Prince Vasili in
November, 1805, announcing that he and his son would be paying him a
visit. "I am starting on a journey of inspection, and of course I shall
think nothing of an extra seventy miles to come and see you at the same
time, my honored benefactor," wrote Prince Vasili. "My son Anatole is
accompanying me on his way to the army, so I hope you will allow him
personally to express the deep respect that, emulating his father, he
feels for you."

"It seems that there will be no need to bring Mary out, suitors are
coming to us of their own accord," incautiously remarked the little
princess on hearing the news.

Prince Nicholas frowned, but said nothing.

A fortnight after the letter Prince Vasili's servants came one evening
in advance of him, and he and his son arrived next day.

Old Bolkonski had always had a poor opinion of Prince Vasili's
character, but more so recently, since in the new reigns of Paul and
Alexander Prince Vasili had risen to high position and honors. And now,
from the hints contained in his letter and given by the little princess,
he saw which way the wind was blowing, and his low opinion changed into
a feeling of contemptuous ill will. He snorted whenever he mentioned
him. On the day of Prince Vasili's arrival, Prince Bolkonski was
particularly discontented and out of temper. Whether he was in a bad
temper because Prince Vasili was coming, or whether his being in a bad
temper made him specially annoyed at Prince Vasili's visit, he was in a
bad temper, and in the morning Tikhon had already advised the architect
not to go to the prince with his report.

"Do you hear how he's walking?" said Tikhon, drawing the architect's
attention to the sound of the prince's footsteps. "Stepping flat on his
heels--we know what that means...."

However, at nine o'clock the prince, in his velvet coat with a sable
collar and cap, went out for his usual walk. It had snowed the day
before and the path to the hothouse, along which the prince was in the
habit of walking, had been swept: the marks of the broom were still
visible in the snow and a shovel had been left sticking in one of the
soft snowbanks that bordered both sides of the path. The prince went
through the conservatories, the serfs' quarters, and the outbuildings,
frowning and silent.

"Can a sleigh pass?" he asked his overseer, a venerable man, resembling
his master in manners and looks, who was accompanying him back to the
house.

"The snow is deep. I am having the avenue swept, your honor."

The prince bowed his head and went up to the porch. "God be thanked,"
thought the overseer, "the storm has blown over!"

"It would have been hard to drive up, your honor," he added. "I heard,
your honor, that a minister is coming to visit your honor."

The prince turned round to the overseer and fixed his eyes on him,
frowning.

"What? A minister? What minister? Who gave orders?" he said in his
shrill, harsh voice. "The road is not swept for the princess my
daughter, but for a minister! For me, there are no ministers!"

"Your honor, I thought..."

"You thought!" shouted the prince, his words coming more and more
rapidly and indistinctly. "You thought!... Rascals! Blackguards!... I'll
teach you to think!" and lifting his stick he swung it and would have
hit Alpatych, the overseer, had not the latter instinctively avoided the
blow. "Thought... Blackguards..." shouted the prince rapidly.

But although Alpatych, frightened at his own temerity in avoiding the
stroke, came up to the prince, bowing his bald head resignedly before
him, or perhaps for that very reason, the prince, though he continued to
shout: "Blackguards!... Throw the snow back on the road!" did not lift
his stick again but hurried into the house.

Before dinner, Princess Mary and Mademoiselle Bourienne, who knew that
the prince was in a bad humor, stood awaiting him; Mademoiselle
Bourienne with a radiant face that said: "I know nothing, I am the same
as usual," and Princess Mary pale, frightened, and with downcast eyes.
What she found hardest to bear was to know that on such occasions she
ought to behave like Mademoiselle Bourienne, but could not. She thought:
"If I seem not to notice he will think that I do not sympathize with
him; if I seem sad and out of spirits myself, he will say (as he has
done before) that I'm in the dumps."

The prince looked at his daughter's frightened face and snorted.

"Fool... or dummy!" he muttered.

"And the other one is not here. They've been telling tales," he thought-
-referring to the little princess who was not in the dining room.

"Where is the princess?" he asked. "Hiding?"

"She is not very well," answered Mademoiselle Bourienne with a bright
smile, "so she won't come down. It is natural in her state."

"Hm! Hm!" muttered the prince, sitting down.

His plate seemed to him not quite clean, and pointing to a spot he flung
it away. Tikhon caught it and handed it to a footman. The little
princess was not unwell, but had such an overpowering fear of the prince
that, hearing he was in a bad humor, she had decided not to appear.

"I am afraid for the baby," she said to Mademoiselle Bourienne: "Heaven
knows what a fright might do."

In general at Bald Hills the little princess lived in constant fear, and
with a sense of antipathy to the old prince which she did not realize
because the fear was so much the stronger feeling. The prince
reciprocated this antipathy, but it was overpowered by his contempt for
her. When the little princess had grown accustomed to life at Bald
Hills, she took a special fancy to Mademoiselle Bourienne, spent whole
days with her, asked her to sleep in her room, and often talked with her
about the old prince and criticized him.

"So we are to have visitors, mon prince?" remarked Mademoiselle
Bourienne, unfolding her white napkin with her rosy fingers. "His
Excellency Prince Vasili Kuragin and his son, I understand?" she said
inquiringly.

"Hm!--his excellency is a puppy.... I got him his appointment in the
service," said the prince disdainfully. "Why his son is coming I don't
understand. Perhaps Princess Elizabeth and Princess Mary know. I don't
want him." (He looked at his blushing daughter.) "Are you unwell today?
Eh? Afraid of the 'minister' as that idiot Alpatych called him this
morning?"

"No, mon pere."

Though Mademoiselle Bourienne had been so unsuccessful in her choice of
a subject, she did not stop talking, but chattered about the
conservatories and the beauty of a flower that had just opened, and
after the soup the prince became more genial.

After dinner, he went to see his daughter-in-law. The little princess
was sitting at a small table, chattering with Masha, her maid. She grew
pale on seeing her father-in-law.

She was much altered. She was now plain rather than pretty. Her cheeks
had sunk, her lip was drawn up, and her eyes drawn down.

"Yes, I feel a kind of oppression," she said in reply to the prince's
question as to how she felt.

"Do you want anything?"

"No, merci, mon pere."

"Well, all right, all right."

He left the room and went to the waiting room where Alpatych stood with
bowed head.

"Has the snow been shoveled back?"

"Yes, your excellency. Forgive me for heaven's sake... It was only my
stupidity."

"All right, all right," interrupted the prince, and laughing his
unnatural way, he stretched out his hand for Alpatych to kiss, and then
proceeded to his study.

Prince Vasili arrived that evening. He was met in the avenue by coachmen
and footmen, who, with loud shouts, dragged his sleighs up to one of the
lodges over the road purposely laden with snow.

Prince Vasili and Anatole had separate rooms assigned to them.

Anatole, having taken off his overcoat, sat with arms akimbo before a
table on a corner of which he smilingly and absent-mindedly fixed his
large and handsome eyes. He regarded his whole life as a continual round
of amusement which someone for some reason had to provide for him. And
he looked on this visit to a churlish old man and a rich and ugly
heiress in the same way. All this might, he thought, turn out very well
and amusingly. "And why not marry her if she really has so much money?
That never does any harm," thought Anatole.

He shaved and scented himself with the care and elegance which had
become habitual to him and, his handsome head held high, entered his
father's room with the good-humored and victorious air natural to him.
Prince Vasili's two valets were busy dressing him, and he looked round
with much animation and cheerfully nodded to his son as the latter
entered, as if to say: "Yes, that's how I want you to look."

"I say, Father, joking apart, is she very hideous?" Anatole asked, as if
continuing a conversation the subject of which had often been mentioned
during the journey.

"Enough! What nonsense! Above all, try to be respectful and cautious
with the old prince."

"If he starts a row I'll go away," said Prince Anatole. "I can't bear
those old men! Eh?"

"Remember, for you everything depends on this."

In the meantime, not only was it known in the maidservants' rooms that
the minister and his son had arrived, but the appearance of both had
been minutely described. Princess Mary was sitting alone in her room,
vainly trying to master her agitation.

"Why did they write, why did Lise tell me about it? It can never
happen!" she said, looking at herself in the glass. "How shall I enter
the drawing room? Even if I like him I can't now be myself with him."
The mere thought of her father's look filled her with terror. The little
princess and Mademoiselle Bourienne had already received from Masha, the
lady's maid, the necessary report of how handsome the minister's son
was, with his rosy cheeks and dark eyebrows, and with what difficulty
the father had dragged his legs upstairs while the son had followed him
like an eagle, three steps at a time. Having received this information,
the little princess and Mademoiselle Bourienne, whose chattering voices
had reached her from the corridor, went into Princess Mary's room.

"You know they've come, Marie?" said the little princess, waddling in,
and sinking heavily into an armchair.

She was no longer in the loose gown she generally wore in the morning,
but had on one of her best dresses. Her hair was carefully done and her
face was animated, which, however, did not conceal its sunken and faded
outlines. Dressed as she used to be in Petersburg society, it was still
more noticeable how much plainer she had become. Some unobtrusive touch
had been added to Mademoiselle Bourienne's toilet which rendered her
fresh and pretty face yet more attractive.

"What! Are you going to remain as you are, dear princess?" she began.
"They'll be announcing that the gentlemen are in the drawing room and we
shall have to go down, and you have not smartened yourself up at all!"

The little princess got up, rang for the maid, and hurriedly and merrily
began to devise and carry out a plan of how Princess Mary should be
dressed. Princess Mary's self-esteem was wounded by the fact that the
arrival of a suitor agitated her, and still more so by both her
companions' not having the least conception that it could be otherwise.
To tell them that she felt ashamed for herself and for them would be to
betray her agitation, while to decline their offers to dress her would
prolong their banter and insistence. She flushed, her beautiful eyes
grew dim, red blotches came on her face, and it took on the unattractive
martyrlike expression it so often wore, as she submitted herself to
Mademoiselle Bourienne and Lise. Both these women quite sincerely tried
to make her look pretty. She was so plain that neither of them could
think of her as a rival, so they began dressing her with perfect
sincerity, and with the naive and firm conviction women have that dress
can make a face pretty.

"No really, my dear, this dress is not pretty," said Lise, looking
sideways at Princess Mary from a little distance. "You have a maroon
dress, have it fetched. Really! You know the fate of your whole life may
be at stake. But this one is too light, it's not becoming!"

It was not the dress, but the face and whole figure of Princess Mary
that was not pretty, but neither Mademoiselle Bourienne nor the little
princess felt this; they still thought that if a blue ribbon were placed
in the hair, the hair combed up, and the blue scarf arranged lower on
the best maroon dress, and so on, all would be well. They forgot that
the frightened face and the figure could not be altered, and that
however they might change the setting and adornment of that face, it
would still remain piteous and plain. After two or three changes to
which Princess Mary meekly submitted, just as her hair had been arranged
on the top of her head (a style that quite altered and spoiled her
looks) and she had put on a maroon dress with a pale-blue scarf, the
little princess walked twice round her, now adjusting a fold of the
dress with her little hand, now arranging the scarf and looking at her
with her head bent first on one side and then on the other.

"No, it will not do," she said decidedly, clasping her hands. "No, Mary,
really this dress does not suit you. I prefer you in your little gray
everyday dress. Now please, do it for my sake. Katie," she said to the
maid, "bring the princess her gray dress, and you'll see, Mademoiselle
Bourienne, how I shall arrange it," she added, smiling with a foretaste
of artistic pleasure.

But when Katie brought the required dress, Princess Mary remained
sitting motionless before the glass, looking at her face, and saw in the
mirror her eyes full of tears and her mouth quivering, ready to burst
into sobs.

"Come, dear princess," said Mademoiselle Bourienne, "just one more
little effort."

The little princess, taking the dress from the maid, came up to Princess
Mary.

"Well, now we'll arrange something quite simple and becoming," she said.

The three voices, hers, Mademoiselle Bourienne's, and Katie's, who was
laughing at something, mingled in a merry sound, like the chirping of
birds.

"No, leave me alone," said Princess Mary.

Her voice sounded so serious and so sad that the chirping of the birds
was silenced at once. They looked at the beautiful, large, thoughtful
eyes full of tears and of thoughts, gazing shiningly and imploringly at
them, and understood that it was useless and even cruel to insist.

"At least, change your coiffure," said the little princess. "Didn't I
tell you," she went on, turning reproachfully to Mademoiselle Bourienne,
"Mary's is a face which such a coiffure does not suit in the least. Not
in the least! Please change it."

"Leave me alone, please leave me alone! It is all quite the same to me,"
answered a voice struggling with tears.

Mademoiselle Bourienne and the little princess had to own to themselves
that Princess Mary in this guise looked very plain, worse than usual,
but it was too late. She was looking at them with an expression they
both knew, an expression thoughtful and sad. This expression in Princess
Mary did not frighten them (she never inspired fear in anyone), but they
knew that when it appeared on her face, she became mute and was not to
be shaken in her determination.

"You will change it, won't you?" said Lise. And as Princess Mary gave no
answer, she left the room.

Princess Mary was left alone. She did not comply with Lise's request,
she not only left her hair as it was, but did not even look in her
glass. Letting her arms fall helplessly, she sat with downcast eyes and
pondered. A husband, a man, a strong dominant and strangely attractive
being rose in her imagination, and carried her into a totally different
happy world of his own. She fancied a child, her own--such as she had
seen the day before in the arms of her nurse's daughter--at her own
breast, the husband standing by and gazing tenderly at her and the
child. "But no, it is impossible, I am too ugly," she thought.

"Please come to tea. The prince will be out in a moment," came the
maid's voice at the door.

She roused herself, and felt appalled at what she had been thinking, and
before going down she went into the room where the icons hung and, her
eyes fixed on the dark face of a large icon of the Saviour lit by a
lamp, she stood before it with folded hands for a few moments. A painful
doubt filled her soul. Could the joy of love, of earthly love for a man,
be for her? In her thoughts of marriage Princess Mary dreamed of
happiness and of children, but her strongest, most deeply hidden longing
was for earthly love. The more she tried to hide this feeling from
others and even from herself, the stronger it grew. "O God," she said,
"how am I to stifle in my heart these temptations of the devil? How am I
to renounce forever these vile fancies, so as peacefully to fulfill Thy
will?" And scarcely had she put that question than God gave her the
answer in her own heart. "Desire nothing for thyself, seek nothing, be
not anxious or envious. Man's future and thy own fate must remain hidden
from thee, but live so that thou mayest be ready for anything. If it be
God's will to prove thee in the duties of marriage, be ready to fulfill
His will." With this consoling thought (but yet with a hope for the
fulfillment of her forbidden earthly longing) Princess Mary sighed, and
having crossed herself went down, thinking neither of her gown and
coiffure nor of how she would go in nor of what she would say. What
could all that matter in comparison with the will of God, without Whose
care not a hair of man's head can fall?




CHAPTER IV

When Princess Mary came down, Prince Vasili and his son were already in
the drawing room, talking to the little princess and Mademoiselle
Bourienne. When she entered with her heavy step, treading on her heels,
the gentlemen and Mademoiselle Bourienne rose and the little princess,
indicating her to the gentlemen, said: "Voila Marie!" Princess Mary saw
them all and saw them in detail. She saw Prince Vasili's face, serious
for an instant at the sight of her, but immediately smiling again, and
the little princess curiously noting the impression "Marie" produced on
the visitors. And she saw Mademoiselle Bourienne, with her ribbon and
pretty face, and her unusually animated look which was fixed on him, but
him she could not see, she only saw something large, brilliant, and
handsome moving toward her as she entered the room. Prince Vasili
approached first, and she kissed the bold forehead that bent over her
hand and answered his question by saying that, on the contrary, she
remembered him quite well. Then Anatole came up to her. She still could
not see him. She only felt a soft hand taking hers firmly, and she
touched with her lips a white forehead, over which was beautiful light-
brown hair smelling of pomade. When she looked up at him she was struck
by his beauty. Anatole stood with his right thumb under a button of his
uniform, his chest expanded and his back drawn in, slightly swinging one
foot, and, with his head a little bent, looked with beaming face at the
princess without speaking and evidently not thinking about her at all.
Anatole was not quick-witted, nor ready or eloquent in conversation, but
he had the faculty, so invaluable in society, of composure and
imperturbable self-possession. If a man lacking in self-confidence
remains dumb on a first introduction and betrays a consciousness of the
impropriety of such silence and an anxiety to find something to say, the
effect is bad. But Anatole was dumb, swung his foot, and smilingly
examined the princess' hair. It was evident that he could be silent in
this way for a very long time. "If anyone finds this silence
inconvenient, let him talk, but I don't want to," he seemed to say.
Besides this, in his behavior to women Anatole had a manner which
particularly inspires in them curiosity, awe, and even love--a
supercilious consciousness of his own superiority. It was as if he said
to them: "I know you, I know you, but why should I bother about you?
You'd be only too glad, of course." Perhaps he did not really think this
when he met women--even probably he did not, for in general he thought
very little--but his looks and manner gave that impression. The princess
felt this, and as if wishing to show him that she did not even dare
expect to interest him, she turned to his father. The conversation was
general and animated, thanks to Princess Lise's voice and little downy
lip that lifted over her white teeth. She met Prince Vasili with that
playful manner often employed by lively chatty people, and consisting in
the assumption that between the person they so address and themselves
there are some semi-private, long-established jokes and amusing
reminiscences, though no such reminiscences really exist--just as none
existed in this case. Prince Vasili readily adopted her tone and the
little princess also drew Anatole, whom she hardly knew, into these
amusing recollections of things that had never occurred. Mademoiselle
Bourienne also shared them and even Princess Mary felt herself
pleasantly made to share in these merry reminiscences.

"Here at least we shall have the benefit of your company all to
ourselves, dear prince," said the little princess (of course, in French)
to Prince Vasili. "It's not as at Annette's * receptions where you
always ran away; you remember cette chere Annette!"


* Anna Pavlovna.

"Ah, but you won't talk politics to me like Annette!"

"And our little tea table?"

"Oh, yes!"

"Why is it you were never at Annette's?" the little princess asked
Anatole. "Ah, I know, I know," she said with a sly glance, "your brother
Hippolyte told me about your goings on. Oh!" and she shook her finger at
him, "I have even heard of your doings in Paris!"

"And didn't Hippolyte tell you?" asked Prince Vasili, turning to his son
and seizing the little princess' arm as if she would have run away and
he had just managed to catch her, "didn't he tell you how he himself was
pining for the dear princess, and how she showed him the door? Oh, she
is a pearl among women, Princess," he added, turning to Princess Mary.

When Paris was mentioned, Mademoiselle Bourienne for her part seized the
opportunity of joining in the general current of recollections.

She took the liberty of inquiring whether it was long since Anatole had
left Paris and how he had liked that city. Anatole answered the
Frenchwoman very readily and, looking at her with a smile, talked to her
about her native land. When he saw the pretty little Bourienne, Anatole
came to the conclusion that he would not find Bald Hills dull either.
"Not at all bad!" he thought, examining her, "not at all bad, that
little companion! I hope she will bring her along with her when we're
married, la petite est gentille." *


* The little one is charming.

The old prince dressed leisurely in his study, frowning and considering
what he was to do. The coming of these visitors annoyed him. "What are
Prince Vasili and that son of his to me? Prince Vasili is a shallow
braggart and his son, no doubt, is a fine specimen," he grumbled to
himself. What angered him was that the coming of these visitors revived
in his mind an unsettled question he always tried to stifle, one about
which he always deceived himself. The question was whether he could ever
bring himself to part from his daughter and give her to a husband. The
prince never directly asked himself that question, knowing beforehand
that he would have to answer it justly, and justice clashed not only
with his feelings but with the very possibility of life. Life without
Princess Mary, little as he seemed to value her, was unthinkable to him.
"And why should she marry?" he thought. "To be unhappy for certain.
There's Lise, married to Andrew--a better husband one would think could
hardly be found nowadays--but is she contented with her lot? And who
would marry Marie for love? Plain and awkward! They'll take her for her
connections and wealth. Are there no women living unmarried, and even
the happier for it?" So thought Prince Bolkonski while dressing, and yet
the question he was always putting off demanded an immediate answer.
Prince Vasili had brought his son with the evident intention of
proposing, and today or tomorrow he would probably ask for an answer.
His birth and position in society were not bad. "Well, I've nothing
against it," the prince said to himself, "but he must be worthy of her.
And that is what we shall see."

"That is what we shall see! That is what we shall see!" he added aloud.

He entered the drawing room with his usual alert step, glancing rapidly
round the company. He noticed the change in the little princess' dress,
Mademoiselle Bourienne's ribbon, Princess Mary's unbecoming coiffure,
Mademoiselle Bourienne's and Anatole's smiles, and the loneliness of his
daughter amid the general conversation. "Got herself up like a fool!" he
thought, looking irritably at her. "She is shameless, and he ignores
her!"

He went straight up to Prince Vasili.

"Well! How d'ye do? How d'ye do? Glad to see you!"

"Friendship laughs at distance," began Prince Vasili in his usual rapid,
self-confident, familiar tone. "Here is my second son; please love and
befriend him."

Prince Bolkonski surveyed Anatole.

"Fine young fellow! Fine young fellow!" he said. "Well, come and kiss
me," and he offered his cheek.

Anatole kissed the old man, and looked at him with curiosity and perfect
composure, waiting for a display of the eccentricities his father had
told him to expect.

Prince Bolkonski sat down in his usual place in the corner of the sofa
and, drawing up an armchair for Prince Vasili, pointed to it and began
questioning him about political affairs and news. He seemed to listen
attentively to what Prince Vasili said, but kept glancing at Princess
Mary.

"And so they are writing from Potsdam already?" he said, repeating
Prince Vasili's last words. Then rising, he suddenly went up to his
daughter.

"Is it for visitors you've got yourself up like that, eh?" said he.
"Fine, very fine! You have done up your hair in this new way for the
visitors, and before the visitors I tell you that in future you are
never to dare to change your way of dress without my consent."

"It was my fault, mon pere," interceded the little princess, with a
blush.

"You must do as you please," said Prince Bolkonski, bowing to his
daughter-in-law, "but she need not make a fool of herself, she's plain
enough as it is."

And he sat down again, paying no more attention to his daughter, who was
reduced to tears.

"On the contrary, that coiffure suits the princess very well," said
Prince Vasili.

"Now you, young prince, what's your name?" said Prince Bolkonski,
turning to Anatole, "come here, let us talk and get acquainted."

"Now the fun begins," thought Anatole, sitting down with a smile beside
the old prince.

"Well, my dear boy, I hear you've been educated abroad, not taught to
read and write by the deacon, like your father and me. Now tell me, my
dear boy, are you serving in the Horse Guards?" asked the old man,
scrutinizing Anatole closely and intently.

"No, I have been transferred to the line," said Anatole, hardly able to
restrain his laughter.

"Ah! That's a good thing. So, my dear boy, you wish to serve the Tsar
and the country? It is wartime. Such a fine fellow must serve. Well, are
you off to the front?"

"No, Prince, our regiment has gone to the front, but I am attached...
what is it I am attached to, Papa?" said Anatole, turning to his father
with a laugh.

"A splendid soldier, splendid! 'What am I attached to!' Ha, ha, ha!"
laughed Prince Bolkonski, and Anatole laughed still louder. Suddenly
Prince Bolkonski frowned.

"You may go," he said to Anatole.

Anatole returned smiling to the ladies.

"And so you've had him educated abroad, Prince Vasili, haven't you?"
said the old prince to Prince Vasili.

"I have done my best for him, and I can assure you the education there
is much better than ours."

"Yes, everything is different nowadays, everything is changed. The lad's
a fine fellow, a fine fellow! Well, come with me now." He took Prince
Vasili's arm and led him to his study. As soon as they were alone
together, Prince Vasili announced his hopes and wishes to the old
prince.

"Well, do you think I shall prevent her, that I can't part from her?"
said the old prince angrily. "What an idea! I'm ready for it tomorrow!
Only let me tell you, I want to know my son-in-law better. You know my
principles--everything aboveboard? I will ask her tomorrow in your
presence; if she is willing, then he can stay on. He can stay and I'll
see." The old prince snorted. "Let her marry, it's all the same to me!"
he screamed in the same piercing tone as when parting from his son.

"I will tell you frankly," said Prince Vasili in the tone of a crafty
man convinced of the futility of being cunning with so keen-sighted a
companion. "You know, you see right through people. Anatole is no
genius, but he is an honest, goodhearted lad; an excellent son or
kinsman."

"All right, all right, we'll see!"

As always happens when women lead lonely lives for any length of time
without male society, on Anatole's appearance all the three women of
Prince Bolkonski's household felt that their life had not been real till
then. Their powers of reasoning, feeling, and observing immediately
increased tenfold, and their life, which seemed to have been passed in
darkness, was suddenly lit up by a new brightness, full of significance.

Princess Mary grew quite unconscious of her face and coiffure. The
handsome open face of the man who might perhaps be her husband absorbed
all her attention. He seemed to her kind, brave, determined, manly, and
magnanimous. She felt convinced of that. Thousands of dreams of a future
family life continually rose in her imagination. She drove them away and
tried to conceal them.

"But am I not too cold with him?" thought the princess. "I try to be
reserved because in the depth of my soul I feel too near to him already,
but then he cannot know what I think of him and may imagine that I do
not like him."

And Princess Mary tried, but could not manage, to be cordial to her new
guest. "Poor girl, she's devilish ugly!" thought Anatole.

Mademoiselle Bourienne, also roused to great excitement by Anatole's
arrival, thought in another way. Of course, she, a handsome young woman
without any definite position, without relations or even a country, did
not intend to devote her life to serving Prince Bolkonski, to reading
aloud to him and being friends with Princess Mary. Mademoiselle
Bourienne had long been waiting for a Russian prince who, able to
appreciate at a glance her superiority to the plain, badly dressed,
ungainly Russian princesses, would fall in love with her and carry her
off; and here at last was a Russian prince. Mademoiselle Bourienne knew
a story, heard from her aunt but finished in her own way, which she
liked to repeat to herself. It was the story of a girl who had been
seduced, and to whom her poor mother (sa pauvre mere) appeared, and
reproached her for yielding to a man without being married. Mademoiselle
Bourienne was often touched to tears as in imagination she told this
story to him, her seducer. And now he, a real Russian prince, had
appeared. He would carry her away and then sa pauvre mere would appear
and he would marry her. So her future shaped itself in Mademoiselle
Bourienne's head at the very time she was talking to Anatole about
Paris. It was not calculation that guided her (she did not even for a
moment consider what she should do), but all this had long been familiar
to her, and now that Anatole had appeared it just grouped itself around
him and she wished and tried to please him as much as possible.

The little princess, like an old war horse that hears the trumpet,
unconsciously and quite forgetting her condition, prepared for the
familiar gallop of coquetry, without any ulterior motive or any
struggle, but with naive and lighthearted gaiety.

Although in female society Anatole usually assumed the role of a man
tired of being run after by women, his vanity was flattered by the
spectacle of his power over these three women. Besides that, he was
beginning to feel for the pretty and provocative Mademoiselle Bourienne
that passionate animal feeling which was apt to master him with great
suddenness and prompt him to the coarsest and most reckless actions.

After tea, the company went into the sitting room and Princess Mary was
asked to play on the clavichord. Anatole, laughing and in high spirits,
came and leaned on his elbows, facing her and beside Mademoiselle
Bourienne. Princess Mary felt his look with a painfully joyous emotion.
Her favorite sonata bore her into a most intimately poetic world and the
look she felt upon her made that world still more poetic. But Anatole's
expression, though his eyes were fixed on her, referred not to her but
to the movements of Mademoiselle Bourienne's little foot, which he was
then touching with his own under the clavichord. Mademoiselle Bourienne
was also looking at Princess Mary, and in her lovely eyes there was a
look of fearful joy and hope that was also new to the princess.

"How she loves me!" thought Princess Mary. "How happy I am now, and how
happy I may be with such a friend and such a husband! Husband? Can it be
possible?" she thought, not daring to look at his face, but still
feeling his eyes gazing at her.

In the evening, after supper, when all were about to retire, Anatole
kissed Princess Mary's hand. She did not know how she found the courage,
but she looked straight into his handsome face as it came near to her
shortsighted eyes. Turning from Princess Mary he went up and kissed
Mademoiselle Bourienne's hand. (This was not etiquette, but then he did
everything so simply and with such assurance!) Mademoiselle Bourienne
flushed, and gave the princess a frightened look.

"What delicacy!" thought the princess. "Is it possible that Amelie"
(Mademoiselle Bourienne) "thinks I could be jealous of her, and not
value her pure affection and devotion to me?" She went up to her and
kissed her warmly. Anatole went up to kiss the little princess' hand.

"No! No! No! When your father writes to tell me that you are behaving
well I will give you my hand to kiss. Not till then!" she said. And
smilingly raising a finger at him, she left the room.




CHAPTER V

They all separated, but, except Anatole who fell asleep as soon as he
got into bed, all kept awake a long time that night.

"Is he really to be my husband, this stranger who is so kind--yes, kind,
that is the chief thing," thought Princess Mary; and fear, which she had
seldom experienced, came upon her. She feared to look round, it seemed
to her that someone was there standing behind the screen in the dark
corner. And this someone was he--the devil--and he was also this man
with the white forehead, black eyebrows, and red lips.

She rang for her maid and asked her to sleep in her room.

Mademoiselle Bourienne walked up and down the conservatory for a long
time that evening, vainly expecting someone, now smiling at someone, now
working herself up to tears with the imaginary words of her pauvre mere
rebuking her for her fall.

The little princess grumbled to her maid that her bed was badly made.
She could not lie either on her face or on her side. Every position was
awkward and uncomfortable, and her burden oppressed her now more than
ever because Anatole's presence had vividly recalled to her the time
when she was not like that and when everything was light and gay. She
sat in an armchair in her dressing jacket and nightcap and Katie, sleepy
and disheveled, beat and turned the heavy feather bed for the third
time, muttering to herself.

"I told you it was all lumps and holes!" the little princess repeated.
"I should be glad enough to fall asleep, so it's not my fault!" and her
voice quivered like that of a child about to cry.

The old prince did not sleep either. Tikhon, half asleep, heard him
pacing angrily about and snorting. The old prince felt as though he had
been insulted through his daughter. The insult was the more pointed
because it concerned not himself but another, his daughter, whom he
loved more than himself. He kept telling himself that he would consider
the whole matter and decide what was right and how he should act, but
instead of that he only excited himself more and more.

"The first man that turns up--she forgets her father and everything
else, runs upstairs and does up her hair and wags her tail and is unlike
herself! Glad to throw her father over! And she knew I should notice it.
Fr... fr... fr! And don't I see that that idiot had eyes only for
Bourienne--I shall have to get rid of her. And how is it she has not
pride enough to see it? If she has no pride for herself she might at
least have some for my sake! She must be shown that the blockhead thinks
nothing of her and looks only at Bourienne. No, she has no pride... but
I'll let her see...."

The old prince knew that if he told his daughter she was making a
mistake and that Anatole meant to flirt with Mademoiselle Bourienne,
Princess Mary's self-esteem would be wounded and his point (not to be
parted from her) would be gained, so pacifying himself with this
thought, he called Tikhon and began to undress.

"What devil brought them here?" thought he, while Tikhon was putting the
nightshirt over his dried-up old body and gray-haired chest. "I never
invited them. They came to disturb my life--and there is not much of it
left."

"Devil take 'em!" he muttered, while his head was still covered by the
shirt.

Tikhon knew his master's habit of sometimes thinking aloud, and
therefore met with unaltered looks the angrily inquisitive expression of
the face that emerged from the shirt.

"Gone to bed?" asked the prince.

Tikhon, like all good valets, instinctively knew the direction of his
master's thoughts. He guessed that the question referred to Prince
Vasili and his son.

"They have gone to bed and put out their lights, your excellency."

"No good... no good..." said the prince rapidly, and thrusting his feet
into his slippers and his arms into the sleeves of his dressing gown, he
went to the couch on which he slept.

Though no words had passed between Anatole and Mademoiselle Bourienne,
they quite understood one another as to the first part of their romance,
up to the appearance of the pauvre mere; they understood that they had
much to say to one another in private and so they had been seeking an
opportunity since morning to meet one another alone. When Princess Mary
went to her father's room at the usual hour, Mademoiselle Bourienne and
Anatole met in the conservatory.

Princess Mary went to the door of the study with special trepidation. It
seemed to her that not only did everybody know that her fate would be
decided that day, but that they also knew what she thought about it. She
read this in Tikhon's face and in that of Prince Vasili's valet, who
made her a low bow when she met him in the corridor carrying hot water.

The old prince was very affectionate and careful in his treatment of his
daughter that morning. Princess Mary well knew this painstaking
expression of her father's. His face wore that expression when his dry
hands clenched with vexation at her not understanding a sum in
arithmetic, when rising from his chair he would walk away from her,
repeating in a low voice the same words several times over.

He came to the point at once, treating her ceremoniously.

"I have had a proposition made me concerning you," he said with an
unnatural smile. "I expect you have guessed that Prince Vasili has not
come and brought his pupil with him" (for some reason Prince Bolkonski
referred to Anatole as a "pupil") "for the sake of my beautiful eyes.
Last night a proposition was made me on your account and, as you know my
principles, I refer it to you."

"How am I to understand you, mon pere?" said the princess, growing pale
and then blushing.

"How understand me!" cried her father angrily. "Prince Vasili finds you
to his taste as a daughter-in-law and makes a proposal to you on his
pupil's behalf. That's how it's to be understood! 'How understand
it'!... And I ask you!"

"I do not know what you think, Father," whispered the princess.

"I? I? What of me? Leave me out of the question. I'm not going to get
married. What about you? That's what I want to know."

The princess saw that her father regarded the matter with disapproval,
but at that moment the thought occurred to her that her fate would be
decided now or never. She lowered her eyes so as not to see the gaze
under which she felt that she could not think, but would only be able to
submit from habit, and she said: "I wish only to do your will, but if I
had to express my own desire..." She had no time to finish. The old
prince interrupted her.

"That's admirable!" he shouted. "He will take you with your dowry and
take Mademoiselle Bourienne into the bargain. She'll be the wife, while
you..."

The prince stopped. He saw the effect these words had produced on his
daughter. She lowered her head and was ready to burst into tears.

"Now then, now then, I'm only joking!" he said. "Remember this,
Princess, I hold to the principle that a maiden has a full right to
choose. I give you freedom. Only remember that your life's happiness
depends on your decision. Never mind me!"

"But I do not know, Father!"

"There's no need to talk! He receives his orders and will marry you or
anybody; but you are free to choose.... Go to your room, think it over,
and come back in an hour and tell me in his presence: yes or no. I know
you will pray over it. Well, pray if you like, but you had better think
it over. Go! Yes or no, yes or no, yes or no!" he still shouted when the
princess, as if lost in a fog, had already staggered out of the study.

Her fate was decided and happily decided. But what her father had said
about Mademoiselle Bourienne was dreadful. It was untrue to be sure, but
still it was terrible, and she could not help thinking of it. She was
going straight on through the conservatory, neither seeing nor hearing
anything, when suddenly the well-known whispering of Mademoiselle
Bourienne aroused her. She raised her eyes, and two steps away saw
Anatole embracing the Frenchwoman and whispering something to her. With
a horrified expression on his handsome face, Anatole looked at Princess
Mary, but did not at once take his arm from the waist of Mademoiselle
Bourienne who had not yet seen her.

"Who's that? Why? Wait a moment!" Anatole's face seemed to say. Princess
Mary looked at them in silence. She could not understand it. At last
Mademoiselle Bourienne gave a scream and ran away. Anatole bowed to
Princess Mary with a gay smile, as if inviting her to join in a laugh at
this strange incident, and then shrugging his shoulders went to the door
that led to his own apartments.

An hour later, Tikhon came to call Princess Mary to the old prince; he
added that Prince Vasili was also there. When Tikhon came to her
Princess Mary was sitting on the sofa in her room, holding the weeping
Mademoiselle Bourienne in her arms and gently stroking her hair. The
princess' beautiful eyes with all their former calm radiance were
looking with tender affection and pity at Mademoiselle Bourienne's
pretty face.

"No, Princess, I have lost your affection forever!" said Mademoiselle
Bourienne.

"Why? I love you more than ever," said Princess Mary, "and I will try to
do all I can for your happiness."

"But you despise me. You who are so pure can never understand being so
carried away by passion. Oh, only my poor mother..."

"I quite understand," answered Princess Mary, with a sad smile. "Calm
yourself, my dear. I will go to my father," she said, and went out.

Prince Vasili, with one leg thrown high over the other and a snuffbox in
his hand, was sitting there with a smile of deep emotion on his face, as
if stirred to his heart's core and himself regretting and laughing at
his own sensibility, when Princess Mary entered. He hurriedly took a
pinch of snuff.

"Ah, my dear, my dear!" he began, rising and taking her by both hands.
Then, sighing, he added: "My son's fate is in your hands. Decide, my
dear, good, gentle Marie, whom I have always loved as a daughter!"

He drew back and a real tear appeared in his eye.

"Fr... fr..." snorted Prince Bolkonski. "The prince is making a
proposition to you in his pupil's--I mean, his son's--name. Do you wish
or not to be Prince Anatole Kuragin's wife? Reply: yes or no," he
shouted, "and then I shall reserve the right to state my opinion also.
Yes, my opinion, and only my opinion," added Prince Bolkonski, turning
to Prince Vasili and answering his imploring look. "Yes, or no?"

"My desire is never to leave you, Father, never to separate my life from
yours. I don't wish to marry," she answered positively, glancing at
Prince Vasili and at her father with her beautiful eyes.

"Humbug! Nonsense! Humbug, humbug, humbug!" cried Prince Bolkonski,
frowning and taking his daughter's hand; he did not kiss her, but only
bending his forehead to hers just touched it, and pressed her hand so
that she winced and uttered a cry.

Prince Vasili rose.

"My dear, I must tell you that this is a moment I shall never, never
forget. But, my dear, will you not give us a little hope of touching
this heart, so kind and generous? Say 'perhaps'... The future is so
long. Say 'perhaps.'"

"Prince, what I have said is all there is in my heart. I thank you for
the honor, but I shall never be your son's wife."

"Well, so that's finished, my dear fellow! I am very glad to have seen
you. Very glad! Go back to your rooms, Princess. Go!" said the old
prince. "Very, very glad to have seen you," repeated he, embracing
Prince Vasili.

"My vocation is a different one," thought Princess Mary. "My vocation is
to be happy with another kind of happiness, the happiness of love and
self-sacrifice. And cost what it may, I will arrange poor Amelie's
happiness, she loves him so passionately, and so passionately repents. I
will do all I can to arrange the match between them. If he is not rich I
will give her the means; I will ask my father and Andrew. I shall be so
happy when she is his wife. She is so unfortunate, a stranger, alone,
helpless! And, oh God, how passionately she must love him if she could
so far forget herself! Perhaps I might have done the same!..." thought
Princess Mary.




CHAPTER VI

It was long since the Rostovs had news of Nicholas. Not till midwinter
was the count at last handed a letter addressed in his son's
handwriting. On receiving it, he ran on tiptoe to his study in alarm and
haste, trying to escape notice, closed the door, and began to read the
letter.

Anna Mikhaylovna, who always knew everything that passed in the house,
on hearing of the arrival of the letter went softly into the room and
found the count with it in his hand, sobbing and laughing at the same
time.

Anna Mikhaylovna, though her circumstances had improved, was still
living with the Rostovs.

"My dear friend?" said she, in a tone of pathetic inquiry, prepared to
sympathize in any way.

The count sobbed yet more.

"Nikolenka... a letter... wa... a... s... wounded... my darling boy...
the countess... promoted to be an officer... thank God... How tell the
little countess!"

Anna Mikhaylovna sat down beside him, with her own handkerchief wiped
the tears from his eyes and from the letter, then having dried her own
eyes she comforted the count, and decided that at dinner and till
teatime she would prepare the countess, and after tea, with God's help,
would inform her.

At dinner Anna Mikhaylovna talked the whole time about the war news and
about Nikolenka, twice asked when the last letter had been received from
him, though she knew that already, and remarked that they might very
likely be getting a letter from him that day. Each time that these hints
began to make the countess anxious and she glanced uneasily at the count
and at Anna Mikhaylovna, the latter very adroitly turned the
conversation to insignificant matters. Natasha, who, of the whole
family, was the most gifted with a capacity to feel any shades of
intonation, look, and expression, pricked up her ears from the beginning
of the meal and was certain that there was some secret between her
father and Anna Mikhaylovna, that it had something to do with her
brother, and that Anna Mikhaylovna was preparing them for it. Bold as
she was, Natasha, who knew how sensitive her mother was to anything
relating to Nikolenka, did not venture to ask any questions at dinner,
but she was too excited to eat anything and kept wriggling about on her
chair regardless of her governess' remarks. After dinner, she rushed
head long after Anna Mikhaylovna and, dashing at her, flung herself on
her neck as soon as she overtook her in the sitting room.

"Auntie, darling, do tell me what it is!"

"Nothing, my dear."

"No, dearest, sweet one, honey, I won't give up--I know you know
something."

Anna Mikhaylovna shook her head.

"You are a little slyboots," she said.

"A letter from Nikolenka! I'm sure of it!" exclaimed Natasha, reading
confirmation in Anna Mikhaylovna's face.

"But for God's sake, be careful, you know how it may affect your mamma."

"I will, I will, only tell me! You won't? Then I will go and tell at
once."

Anna Mikhaylovna, in a few words, told her the contents of the letter,
on condition that she should tell no one.

"No, on my true word of honor," said Natasha, crossing herself, "I won't
tell anyone!" and she ran off at once to Sonya.

"Nikolenka... wounded... a letter," she announced in gleeful triumph.

"Nicholas!" was all Sonya said, instantly turning white.

Natasha, seeing the impression the news of her brother's wound produced
on Sonya, felt for the first time the sorrowful side of the news.

She rushed to Sonya, hugged her, and began to cry.

"A little wound, but he has been made an officer; he is well now, he
wrote himself," said she through her tears.

"There now! It's true that all you women are crybabies," remarked Petya,
pacing the room with large, resolute strides. "Now I'm very glad, very
glad indeed, that my brother has distinguished himself so. You are all
blubberers and understand nothing."

Natasha smiled through her tears.

"You haven't read the letter?" asked Sonya.

"No, but she said that it was all over and that he's now an officer."

"Thank God!" said Sonya, crossing herself. "But perhaps she deceived
you. Let us go to Mamma."

Petya paced the room in silence for a time.

"If I'd been in Nikolenka's place I would have killed even more of those
Frenchmen," he said. "What nasty brutes they are! I'd have killed so
many that there'd have been a heap of them."

"Hold your tongue, Petya, what a goose you are!"

"I'm not a goose, but they are who cry about trifles," said Petya.

"Do you remember him?" Natasha suddenly asked, after a moment's silence.

Sonya smiled.

"Do I remember Nicholas?"

"No, Sonya, but do you remember so that you remember him perfectly,
remember everything?" said Natasha, with an expressive gesture,
evidently wishing to give her words a very definite meaning. "I remember
Nikolenka too, I remember him well," she said. "But I don't remember
Boris. I don't remember him a bit."

"What! You don't remember Boris?" asked Sonya in surprise.

"It's not that I don't remember--I know what he is like, but not as I
remember Nikolenka. Him--I just shut my eyes and remember, but Boris...
No!" (She shut her eyes.) "No! there's nothing at all."

"Oh, Natasha!" said Sonya, looking ecstatically and earnestly at her
friend as if she did not consider her worthy to hear what she meant to
say and as if she were saying it to someone else, with whom joking was
out of the question, "I am in love with your brother once for all and,
whatever may happen to him or to me, shall never cease to love him as
long as I live."

Natasha looked at Sonya with wondering and inquisitive eyes, and said
nothing. She felt that Sonya was speaking the truth, that there was such
love as Sonya was speaking of. But Natasha had not yet felt anything
like it. She believed it could be, but did not understand it.

"Shall you write to him?" she asked.

Sonya became thoughtful. The question of how to write to Nicholas, and
whether she ought to write, tormented her. Now that he was already an
officer and a wounded hero, would it be right to remind him of herself
and, as it might seem, of the obligations to her he had taken on
himself?

"I don't know. I think if he writes, I will write too," she said,
blushing.

"And you won't feel ashamed to write to him?"

Sonya smiled.

"No."

"And I should be ashamed to write to Boris. I'm not going to."

"Why should you be ashamed?"

"Well, I don't know. It's awkward and would make me ashamed."

"And I know why she'd be ashamed," said Petya, offended by Natasha's
previous remark. "It's because she was in love with that fat one in
spectacles" (that was how Petya described his namesake, the new Count
Bezukhov) "and now she's in love with that singer" (he meant Natasha's
Italian singing master), "that's why she's ashamed!"

"Petya, you're a stupid!" said Natasha.

"Not more stupid than you, madam," said the nine-year-old Petya, with
the air of an old brigadier.

The countess had been prepared by Anna Mikhaylovna's hints at dinner. On
retiring to her own room, she sat in an armchair, her eyes fixed on a
miniature portrait of her son on the lid of a snuffbox, while the tears
kept coming into her eyes. Anna Mikhaylovna, with the letter, came on
tiptoe to the countess' door and paused.

"Don't come in," she said to the old count who was following her. "Come
later." And she went in, closing the door behind her.

The count put his ear to the keyhole and listened.

At first he heard the sound of indifferent voices, then Anna
Mikhaylovna's voice alone in a long speech, then a cry, then silence,
then both voices together with glad intonations, and then footsteps.
Anna Mikhaylovna opened the door. Her face wore the proud expression of
a surgeon who has just performed a difficult operation and admits the
public to appreciate his skill.

"It is done!" she said to the count, pointing triumphantly to the
countess, who sat holding in one hand the snuffbox with its portrait and
in the other the letter, and pressing them alternately to her lips.

When she saw the count, she stretched out her arms to him, embraced his
bald head, over which she again looked at the letter and the portrait,
and in order to press them again to her lips, she slightly pushed away
the bald head. Vera, Natasha, Sonya, and Petya now entered the room, and
the reading of the letter began. After a brief description of the
campaign and the two battles in which he had taken part, and his
promotion, Nicholas said that he kissed his father's and mother's hands
asking for their blessing, and that he kissed Vera, Natasha, and Petya.
Besides that, he sent greetings to Monsieur Schelling, Madame Schoss,
and his old nurse, and asked them to kiss for him "dear Sonya, whom he
loved and thought of just the same as ever." When she heard this Sonya
blushed so that tears came into her eyes and, unable to bear the looks
turned upon her, ran away into the dancing hall, whirled round it at
full speed with her dress puffed out like a balloon, and, flushed and
smiling, plumped down on the floor. The countess was crying.

"Why are you crying, Mamma?" asked Vera. "From all he says one should be
glad and not cry."

This was quite true, but the count, the countess, and Natasha looked at
her reproachfully. "And who is it she takes after?" thought the
countess.

Nicholas' letter was read over hundreds of times, and those who were
considered worthy to hear it had to come to the countess, for she did
not let it out of her hands. The tutors came, and the nurses, and
Dmitri, and several acquaintances, and the countess reread the letter
each time with fresh pleasure and each time discovered in it fresh
proofs of Nikolenka's virtues. How strange, how extraordinary, how
joyful it seemed, that her son, the scarcely perceptible motion of whose
tiny limbs she had felt twenty years ago within her, that son about whom
she used to have quarrels with the too indulgent count, that son who had
first learned to say "pear" and then "granny," that this son should now
be away in a foreign land amid strange surroundings, a manly warrior
doing some kind of man's work of his own, without help or guidance. The
universal experience of ages, showing that children do grow
imperceptibly from the cradle to manhood, did not exist for the
countess. Her son's growth toward manhood, at each of its stages, had
seemed as extraordinary to her as if there had never existed the
millions of human beings who grew up in the same way. As twenty years
before, it seemed impossible that the little creature who lived
somewhere under her heart would ever cry, suck her breast, and begin to
speak, so now she could not believe that that little creature could be
this strong, brave man, this model son and officer that, judging by this
letter, he now was.

"What a style! How charmingly he describes!" said she, reading the
descriptive part of the letter. "And what a soul! Not a word about
himself.... Not a word! About some Denisov or other, though he himself,
I dare say, is braver than any of them. He says nothing about his
sufferings. What a heart! How like him it is! And how he has remembered
everybody! Not forgetting anyone. I always said when he was only so
high--I always said...."

For more than a week preparations were being made, rough drafts of
letters to Nicholas from all the household were written and copied out,
while under the supervision of the countess and the solicitude of the
count, money and all things necessary for the uniform and equipment of
the newly commissioned officer were collected. Anna Mikhaylovna,
practical woman that she was, had even managed by favor with army
authorities to secure advantageous means of communication for herself
and her son. She had opportunities of sending her letters to the Grand
Duke Constantine Pavlovich, who commanded the Guards. The Rostovs
supposed that The Russian Guards, Abroad, was quite a definite address,
and that if a letter reached the Grand Duke in command of the Guards
there was no reason why it should not reach the Pavlograd regiment,
which was presumably somewhere in the same neighborhood. And so it was
decided to send the letters and money by the Grand Duke's courier to
Boris and Boris was to forward them to Nicholas. The letters were from
the old count, the countess, Petya, Vera, Natasha, and Sonya, and
finally there were six thousand rubles for his outfit and various other
things the old count sent to his son.




CHAPTER VII

On the twelfth of November, Kutuzov's active army, in camp before
Olmutz, was preparing to be reviewed next day by the two Emperors--the
Russian and the Austrian. The Guards, just arrived from Russia, spent
the night ten miles from Olmutz and next morning were to come straight
to the review, reaching the field at Olmutz by ten o'clock.

That day Nicholas Rostov received a letter from Boris, telling him that
the Ismaylov regiment was quartered for the night ten miles from Olmutz
and that he wanted to see him as he had a letter and money for him.
Rostov was particularly in need of money now that the troops, after
their active service, were stationed near Olmutz and the camp swarmed
with well-provisioned sutlers and Austrian Jews offering all sorts of
tempting wares. The Pavlograds held feast after feast, celebrating
awards they had received for the campaign, and made expeditions to
Olmutz to visit a certain Caroline the Hungarian, who had recently
opened a restaurant there with girls as waitresses. Rostov, who had just
celebrated his promotion to a cornetcy and bought Denisov's horse,
Bedouin, was in debt all round, to his comrades and the sutlers. On
receiving Boris' letter he rode with a fellow officer to Olmutz, dined
there, drank a bottle of wine, and then set off alone to the Guards'
camp to find his old playmate. Rostov had not yet had time to get his
uniform. He had on a shabby cadet jacket, decorated with a soldier's
cross, equally shabby cadet's riding breeches lined with worn leather,
and an officer's saber with a sword knot. The Don horse he was riding
was one he had bought from a Cossack during the campaign, and he wore a
crumpled hussar cap stuck jauntily back on one side of his head. As he
rode up to the camp he thought how he would impress Boris and all his
comrades of the Guards by his appearance--that of a fighting hussar who
had been under fire.

The Guards had made their whole march as if on a pleasure trip, parading
their cleanliness and discipline. They had come by easy stages, their
knapsacks conveyed on carts, and the Austrian authorities had provided
excellent dinners for the officers at every halting place. The regiments
had entered and left the town with their bands playing, and by the Grand
Duke's orders the men had marched all the way in step (a practice on
which the Guards prided themselves), the officers on foot and at their
proper posts. Boris had been quartered, and had marched all the way,
with Berg who was already in command of a company. Berg, who had
obtained his captaincy during the campaign, had gained the confidence of
his superiors by his promptitude and accuracy and had arranged his money
matters very satisfactorily. Boris, during the campaign, had made the
acquaintance of many persons who might prove useful to him, and by a
letter of recommendation he had brought from Pierre had become
acquainted with Prince Andrew Bolkonski, through whom he hoped to obtain
a post on the commander-in-chief's staff. Berg and Boris, having rested
after yesterday's march, were sitting, clean and neatly dressed, at a
round table in the clean quarters allotted to them, playing chess. Berg
held a smoking pipe between his knees. Boris, in the accurate way
characteristic of him, was building a little pyramid of chessmen with
his delicate white fingers while awaiting Berg's move, and watched his
opponent's face, evidently thinking about the game as he always thought
only of whatever he was engaged on.

"Well, how are you going to get out of that?" he remarked.

"We'll try to," replied Berg, touching a pawn and then removing his
hand.

At that moment the door opened.

"Here he is at last!" shouted Rostov. "And Berg too! Oh, you
petisenfans, allay cushay dormir!" he exclaimed, imitating his Russian
nurse's French, at which he and Boris used to laugh long ago.

"Dear me, how you have changed!"

Boris rose to meet Rostov, but in doing so did not omit to steady and
replace some chessmen that were falling. He was about to embrace his
friend, but Nicholas avoided him. With that peculiar feeling of youth,
that dread of beaten tracks, and wish to express itself in a manner
different from that of its elders which is often insincere, Nicholas
wished to do something special on meeting his friend. He wanted to pinch
him, push him, do anything but kiss him--a thing everybody did. But
notwithstanding this, Boris embraced him in a quiet, friendly way and
kissed him three times.

They had not met for nearly half a year and, being at the age when young
men take their first steps on life's road, each saw immense changes in
the other, quite a new reflection of the society in which they had taken
those first steps. Both had changed greatly since they last met and both
were in a hurry to show the changes that had taken place in them.

"Oh, you damned dandies! Clean and fresh as if you'd been to a fete, not
like us sinners of the line," cried Rostov, with martial swagger and
with baritone notes in his voice, new to Boris, pointing to his own mud-
bespattered breeches. The German landlady, hearing Rostov's loud voice,
popped her head in at the door.

"Eh, is she pretty?" he asked with a wink.

"Why do you shout so? You'll frighten them!" said Boris. "I did not
expect you today," he added. "I only sent you the note yesterday by
Bolkonski--an adjutant of Kutuzov's, who's a friend of mine. I did not
think he would get it to you so quickly.... Well, how are you? Been
under fire already?" asked Boris.

Without answering, Rostov shook the soldier's Cross of St. George
fastened to the cording of his uniform and, indicating a bandaged arm,
glanced at Berg with a smile.

"As you see," he said.

"Indeed? Yes, yes!" said Boris, with a smile. "And we too have had a
splendid march. You know, of course, that His Imperial Highness rode
with our regiment all the time, so that we had every comfort and every
advantage. What receptions we had in Poland! What dinners and balls! I
can't tell you. And the Tsarevich was very gracious to all our
officers."

And the two friends told each other of their doings, the one of his
hussar revels and life in the fighting line, the other of the pleasures
and advantages of service under members of the Imperial family.

"Oh, you Guards!" said Rostov. "I say, send for some wine."

Boris made a grimace.

"If you really want it," said he.

He went to his bed, drew a purse from under the clean pillow, and sent
for wine.

"Yes, and I have some money and a letter to give you," he added.

Rostov took the letter and, throwing the money on the sofa, put both
arms on the table and began to read. After reading a few lines, he
glanced angrily at Berg, then, meeting his eyes, hid his face behind the
letter.

"Well, they've sent you a tidy sum," said Berg, eying the heavy purse
that sank into the sofa. "As for us, Count, we get along on our pay. I
can tell you for myself..."

"I say, Berg, my dear fellow," said Rostov, "when you get a letter from
home and meet one of your own people whom you want to talk everything
over with, and I happen to be there, I'll go at once, to be out of your
way! Do go somewhere, anywhere... to the devil!" he exclaimed, and
immediately seizing him by the shoulder and looking amiably into his
face, evidently wishing to soften the rudeness of his words, he added,
"Don't be hurt, my dear fellow; you know I speak from my heart as to an
old acquaintance."

"Oh, don't mention it, Count! I quite understand," said Berg, getting up
and speaking in a muffled and guttural voice.

"Go across to our hosts: they invited you," added Boris.

Berg put on the cleanest of coats, without a spot or speck of dust,
stood before a looking glass and brushed the hair on his temples
upwards, in the way affected by the Emperor Alexander, and, having
assured himself from the way Rostov looked at it that his coat had been
noticed, left the room with a pleasant smile.

"Oh dear, what a beast I am!" muttered Rostov, as he read the letter.

"Why?"

"Oh, what a pig I am, not to have written and to have given them such a
fright! Oh, what a pig I am!" he repeated, flushing suddenly. "Well,
have you sent Gabriel for some wine? All right let's have some!"

In the letter from his parents was enclosed a letter of recommendation
to Bagration which the old countess at Anna Mikhaylovna's advice had
obtained through an acquaintance and sent to her son, asking him to take
it to its destination and make use of it.

"What nonsense! Much I need it!" said Rostov, throwing the letter under
the table.

"Why have you thrown that away?" asked Boris.

"It is some letter of recommendation... what the devil do I want it
for!"

"Why 'What the devil'?" said Boris, picking it up and reading the
address. "This letter would be of great use to you."

"I want nothing, and I won't be anyone's adjutant."

"Why not?" inquired Boris.

"It's a lackey's job!"

"You are still the same dreamer, I see," remarked Boris, shaking his
head.

"And you're still the same diplomatist! But that's not the point...
Come, how are you?" asked Rostov.

"Well, as you see. So far everything's all right, but I confess I should
much like to be an adjutant and not remain at the front."

"Why?"

"Because when once a man starts on military service, he should try to
make as successful a career of it as possible."

"Oh, that's it!" said Rostov, evidently thinking of something else.

He looked intently and inquiringly into his friend's eyes, evidently
trying in vain to find the answer to some question.

Old Gabriel brought in the wine.

"Shouldn't we now send for Berg?" asked Boris. "He would drink with you.
I can't."

"Well, send for him... and how do you get on with that German?" asked
Rostov, with a contemptuous smile.

"He is a very, very nice, honest, and pleasant fellow," answered Boris.

Again Rostov looked intently into Boris' eyes and sighed. Berg returned,
and over the bottle of wine conversation between the three officers
became animated. The Guardsmen told Rostov of their march and how they
had been made much of in Russia, Poland, and abroad. They spoke of the
sayings and doings of their commander, the Grand Duke, and told stories
of his kindness and irascibility. Berg, as usual, kept silent when the
subject did not relate to himself, but in connection with the stories of
the Grand Duke's quick temper he related with gusto how in Galicia he
had managed to deal with the Grand Duke when the latter made a tour of
the regiments and was annoyed at the irregularity of a movement. With a
pleasant smile Berg related how the Grand Duke had ridden up to him in a
violent passion, shouting: "Arnauts!" ("Arnauts" was the Tsarevich's
favorite expression when he was in a rage) and called for the company
commander.

"Would you believe it, Count, I was not at all alarmed, because I knew I
was right. Without boasting, you know, I may say that I know the Army
Orders by heart and know the Regulations as well as I do the Lord's
Prayer. So, Count, there never is any negligence in my company, and so
my conscience was at ease. I came forward...." (Berg stood up and showed
how he presented himself, with his hand to his cap, and really it would
have been difficult for a face to express greater respect and self-
complacency than his did.) "Well, he stormed at me, as the saying is,
stormed and stormed and stormed! It was not a matter of life but rather
of death, as the saying is. 'Albanians!' and 'devils!' and 'To
Siberia!'" said Berg with a sagacious smile. "I knew I was in the right
so I kept silent; was not that best, Count?... 'Hey, are you dumb?' he
shouted. Still I remained silent. And what do you think, Count? The next
day it was not even mentioned in the Orders of the Day. That's what
keeping one's head means. That's the way, Count," said Berg, lighting
his pipe and emitting rings of smoke.

"Yes, that was fine," said Rostov, smiling.

But Boris noticed that he was preparing to make fun of Berg, and
skillfully changed the subject. He asked him to tell them how and where
he got his wound. This pleased Rostov and he began talking about it, and
as he went on became more and more animated. He told them of his Schon
Grabern affair, just as those who have taken part in a battle generally
do describe it, that is, as they would like it to have been, as they
have heard it described by others, and as sounds well, but not at all as
it really was. Rostov was a truthful young man and would on no account
have told a deliberate lie. He began his story meaning to tell
everything just as it happened, but imperceptibly, involuntarily, and
inevitably he lapsed into falsehood. If he had told the truth to his
hearers--who like himself had often heard stories of attacks and had
formed a definite idea of what an attack was and were expecting to hear
just such a story--they would either not have believed him or, still
worse, would have thought that Rostov was himself to blame since what
generally happens to the narrators of cavalry attacks had not happened
to him. He could not tell them simply that everyone went at a trot and
that he fell off his horse and sprained his arm and then ran as hard as
he could from a Frenchman into the wood. Besides, to tell everything as
it really happened, it would have been necessary to make an effort of
will to tell only what happened. It is very difficult to tell the truth,
and young people are rarely capable of it. His hearers expected a story
of how beside himself and all aflame with excitement, he had flown like
a storm at the square, cut his way in, slashed right and left, how his
saber had tasted flesh and he had fallen exhausted, and so on. And so he
told them all that.

In the middle of his story, just as he was saying: "You cannot imagine
what a strange frenzy one experiences during an attack," Prince Andrew,
whom Boris was expecting, entered the room. Prince Andrew, who liked to
help young men, was flattered by being asked for his assistance and
being well disposed toward Boris, who had managed to please him the day
before, he wished to do what the young man wanted. Having been sent with
papers from Kutuzov to the Tsarevich, he looked in on Boris, hoping to
find him alone. When he came in and saw an hussar of the line recounting
his military exploits (Prince Andrew could not endure that sort of man),
he gave Boris a pleasant smile, frowned as with half-closed eyes he
looked at Rostov, bowed slightly and wearily, and sat down languidly on
the sofa: he felt it unpleasant to have dropped in on bad company.
Rostov flushed up on noticing this, but he did not care, this was a mere
stranger. Glancing, however, at Boris, he saw that he too seemed ashamed
of the hussar of the line.

In spite of Prince Andrew's disagreeable, ironical tone, in spite of the
contempt with which Rostov, from his fighting army point of view,
regarded all these little adjutants on the staff of whom the newcomer
was evidently one, Rostov felt confused, blushed, and became silent.
Boris inquired what news there might be on the staff, and what, without
indiscretion, one might ask about our plans.

"We shall probably advance," replied Bolkonski, evidently reluctant to
say more in the presence of a stranger.

Berg took the opportunity to ask, with great politeness, whether, as was
rumored, the allowance of forage money to captains of companies would be
doubled. To this Prince Andrew answered with a smile that he could give
no opinion on such an important government order, and Berg laughed
gaily.

"As to your business," Prince Andrew continued, addressing Boris, "we
will talk of it later" (and he looked round at Rostov). "Come to me
after the review and we will do what is possible."

And, having glanced round the room, Prince Andrew turned to Rostov,
whose state of unconquerable childish embarrassment now changing to
anger he did not condescend to notice, and said: "I think you were
talking of the Schon Grabern affair? Were you there?"

"I was there," said Rostov angrily, as if intending to insult the aide-
de-camp.

Bolkonski noticed the hussar's state of mind, and it amused him. With a
slightly contemptuous smile, he said: "Yes, there are many stories now
told about that affair!"

"Yes, stories!" repeated Rostov loudly, looking with eyes suddenly grown
furious, now at Boris, now at Bolkonski. "Yes, many stories! But our
stories are the stories of men who have been under the enemy's fire! Our
stories have some weight, not like the stories of those fellows on the
staff who get rewards without doing anything!"

"Of whom you imagine me to be one?" said Prince Andrew, with a quiet and
particularly amiable smile.

A strange feeling of exasperation and yet of respect for this man's
self-possession mingled at that moment in Rostov's soul.

"I am not talking about you," he said, "I don't know you and, frankly, I
don't want to. I am speaking of the staff in general."

"And I will tell you this," Prince Andrew interrupted in a tone of quiet
authority, "you wish to insult me, and I am ready to agree with you that
it would be very easy to do so if you haven't sufficient self-respect,
but admit that the time and place are very badly chosen. In a day or two
we shall all have to take part in a greater and more serious duel, and
besides, Drubetskoy, who says he is an old friend of yours, is not at
all to blame that my face has the misfortune to displease you. However,"
he added rising, "you know my name and where to find me, but don't
forget that I do not regard either myself or you as having been at all
insulted, and as a man older than you, my advice is to let the matter
drop. Well then, on Friday after the review I shall expect you,
Drubetskoy. Au revoir!" exclaimed Prince Andrew, and with a bow to them
both he went out.

Only when Prince Andrew was gone did Rostov think of what he ought to
have said. And he was still more angry at having omitted to say it. He
ordered his horse at once and, coldly taking leave of Boris, rode home.
Should he go to headquarters next day and challenge that affected
adjutant, or really let the matter drop, was the question that worried
him all the way. He thought angrily of the pleasure he would have at
seeing the fright of that small and frail but proud man when covered by
his pistol, and then he felt with surprise that of all the men he knew
there was none he would so much like to have for a friend as that very
adjutant whom he so hated.




CHAPTER VIII

The day after Rostov had been to see Boris, a review was held of the
Austrian and Russian troops, both those freshly arrived from Russia and
those who had been campaigning under Kutuzov. The two Emperors, the
Russian with his heir the Tsarevich, and the Austrian with the Archduke,
inspected the allied army of eighty thousand men.

From early morning the smart clean troops were on the move, forming up
on the field before the fortress. Now thousands of feet and bayonets
moved and halted at the officers' command, turned with banners flying,
formed up at intervals, and wheeled round other similar masses of
infantry in different uniforms; now was heard the rhythmic beat of hoofs
and the jingling of showy cavalry in blue, red, and green braided
uniforms, with smartly dressed bandsmen in front mounted on black, roan,
or gray horses; then again, spreading out with the brazen clatter of the
polished shining cannon that quivered on the gun carriages and with the
smell of linstocks, came the artillery which crawled between the
infantry and cavalry and took up its appointed position. Not only the
generals in full parade uniforms, with their thin or thick waists drawn
in to the utmost, their red necks squeezed into their stiff collars, and
wearing scarves and all their decorations, not only the elegant, pomaded
officers, but every soldier with his freshly washed and shaven face and
his weapons clean and polished to the utmost, and every horse groomed
till its coat shone like satin and every hair of its wetted mane lay
smooth--felt that no small matter was happening, but an important and
solemn affair. Every general and every soldier was conscious of his own
insignificance, aware of being but a drop in that ocean of men, and yet
at the same time was conscious of his strength as a part of that
enormous whole.

From early morning strenuous activities and efforts had begun and by ten
o'clock all had been brought into due order. The ranks were drawn up on
the vast field. The whole army was extended in three lines: the cavalry
in front, behind it the artillery, and behind that again the infantry.

A space like a street was left between each two lines of troops. The
three parts of that army were sharply distinguished: Kutuzov's fighting
army (with the Pavlograds on the right flank of the front); those
recently arrived from Russia, both Guards and regiments of the line; and
the Austrian troops. But they all stood in the same lines, under one
command, and in a like order.

Like wind over leaves ran an excited whisper: "They're coming! They're
coming!" Alarmed voices were heard, and a stir of final preparation
swept over all the troops.

From the direction of Olmutz in front of them, a group was seen
approaching. And at that moment, though the day was still, a light gust
of wind blowing over the army slightly stirred the streamers on the
lances and the unfolded standards fluttered against their staffs. It
looked as if by that slight motion the army itself was expressing its
joy at the approach of the Emperors. One voice was heard shouting: "Eyes
front!" Then, like the crowing of cocks at sunrise, this was repeated by
others from various sides and all became silent.

In the deathlike stillness only the tramp of horses was heard. This was
the Emperors' suites. The Emperors rode up to the flank, and the
trumpets of the first cavalry regiment played the general march. It
seemed as though not the trumpeters were playing, but as if the army
itself, rejoicing at the Emperors' approach, had naturally burst into
music. Amid these sounds, only the youthful kindly voice of the Emperor
Alexander was clearly heard. He gave the words of greeting, and the
first regiment roared "Hurrah!" so deafeningly, continuously, and
joyfully that the men themselves were awed by their multitude and the
immensity of the power they constituted.

Rostov, standing in the front lines of Kutuzov's army which the Tsar
approached first, experienced the same feeling as every other man in
that army: a feeling of self-forgetfulness, a proud consciousness of
might, and a passionate attraction to him who was the cause of this
triumph.

He felt that at a single word from that man all this vast mass (and he
himself an insignificant atom in it) would go through fire and water,
commit crime, die, or perform deeds of highest heroism, and so he could
not but tremble and his heart stand still at the imminence of that word.

"Hurrah! Hurrah! Hurrah!" thundered from all sides, one regiment after
another greeting the Tsar with the strains of the march, and then
"Hurrah!"... Then the general march, and again "Hurrah! Hurrah!" growing
ever stronger and fuller and merging into a deafening roar.

Till the Tsar reached it, each regiment in its silence and immobility
seemed like a lifeless body, but as soon as he came up it became alive,
its thunder joining the roar of the whole line along which he had
already passed. Through the terrible and deafening roar of those voices,
amid the square masses of troops standing motionless as if turned to
stone, hundreds of riders composing the suites moved carelessly but
symmetrically and above all freely, and in front of them two men--the
Emperors. Upon them the undivided, tensely passionate attention of that
whole mass of men was concentrated.

The handsome young Emperor Alexander, in the uniform of the Horse
Guards, wearing a cocked hat with its peaks front and back, with his
pleasant face and resonant though not loud voice, attracted everyone's
attention.

Rostov was not far from the trumpeters, and with his keen sight had
recognized the Tsar and watched his approach. When he was within twenty
paces, and Nicholas could clearly distinguish every detail of his
handsome, happy young face, he experienced a feeling of tenderness and
ecstasy such as he had never before known. Every trait and every
movement of the Tsar's seemed to him enchanting.

Stopping in front of the Pavlograds, the Tsar said something in French
to the Austrian Emperor and smiled.

Seeing that smile, Rostov involuntarily smiled himself and felt a still
stronger flow of love for his sovereign. He longed to show that love in
some way and knowing that this was impossible was ready to cry. The Tsar
called the colonel of the regiment and said a few words to him.

"Oh God, what would happen to me if the Emperor spoke to me?" thought
Rostov. "I should die of happiness!"

The Tsar addressed the officers also: "I thank you all, gentlemen, I
thank you with my whole heart." To Rostov every word sounded like a
voice from heaven. How gladly would he have died at once for his Tsar!

"You have earned the St. George's standards and will be worthy of them."

"Oh, to die, to die for him," thought Rostov.

The Tsar said something more which Rostov did not hear, and the
soldiers, straining their lungs, shouted "Hurrah!"

Rostov too, bending over his saddle, shouted "Hurrah!" with all his
might, feeling that he would like to injure himself by that shout, if
only to express his rapture fully.

The Tsar stopped a few minutes in front of the hussars as if undecided.

"How can the Emperor be undecided?" thought Rostov, but then even this
indecision appeared to him majestic and enchanting, like everything else
the Tsar did.

That hesitation lasted only an instant. The Tsar's foot, in the narrow
pointed boot then fashionable, touched the groin of the bobtailed bay
mare he rode, his hand in a white glove gathered up the reins, and he
moved off accompanied by an irregularly swaying sea of aides-de-camp.
Farther and farther he rode away, stopping at other regiments, till at
last only his white plumes were visible to Rostov from amid the suites
that surrounded the Emperors.

Among the gentlemen of the suite, Rostov noticed Bolkonski, sitting his
horse indolently and carelessly. Rostov recalled their quarrel of
yesterday and the question presented itself whether he ought or ought
not to challenge Bolkonski. "Of course not!" he now thought. "Is it
worth thinking or speaking of it at such a moment? At a time of such
love, such rapture, and such self-sacrifice, what do any of our quarrels
and affronts matter? I love and forgive everybody now."

When the Emperor had passed nearly all the regiments, the troops began a
ceremonial march past him, and Rostov on Bedouin, recently purchased
from Denisov, rode past too, at the rear of his squadron--that is, alone
and in full view of the Emperor.

Before he reached him, Rostov, who was a splendid horseman, spurred
Bedouin twice and successfully put him to the showy trot in which the
animal went when excited. Bending his foaming muzzle to his chest, his
tail extended, Bedouin, as if also conscious of the Emperor's eye upon
him, passed splendidly, lifting his feet with a high and graceful
action, as if flying through the air without touching the ground.

Rostov himself, his legs well back and his stomach drawn in and feeling
himself one with his horse, rode past the Emperor with a frowning but
blissful face "like a vewy devil," as Denisov expressed it.

"Fine fellows, the Pavlograds!" remarked the Emperor.

"My God, how happy I should be if he ordered me to leap into the fire
this instant!" thought Rostov.

When the review was over, the newly arrived officers, and also
Kutuzov's, collected in groups and began to talk about the awards, about
the Austrians and their uniforms, about their lines, about Bonaparte,
and how badly the latter would fare now, especially if the Essen corps
arrived and Prussia took our side.

But the talk in every group was chiefly about the Emperor Alexander. His
every word and movement was described with ecstasy.

They all had but one wish: to advance as soon as possible against the
enemy under the Emperor's command. Commanded by the Emperor himself they
could not fail to vanquish anyone, be it whom it might: so thought
Rostov and most of the officers after the review.

All were then more confident of victory than the winning of two battles
would have made them.




CHAPTER IX

The day after the review, Boris, in his best uniform and with his
comrade Berg's best wishes for success, rode to Olmutz to see Bolkonski,
wishing to profit by his friendliness and obtain for himself the best
post he could--preferably that of adjutant to some important personage,
a position in the army which seemed to him most attractive. "It is all
very well for Rostov, whose father sends him ten thousand rubles at a
time, to talk about not wishing to cringe to anybody and not be anyone's
lackey, but I who have nothing but my brains have to make a career and
must not miss opportunities, but must avail myself of them!" he
reflected.

He did not find Prince Andrew in Olmutz that day, but the appearance of
the town where the headquarters and the diplomatic corps were stationed
and the two Emperors were living with their suites, households, and
courts only strengthened his desire to belong to that higher world.

He knew no one, and despite his smart Guardsman's uniform, all these
exalted personages passing in the streets in their elegant carriages
with their plumes, ribbons, and medals, both courtiers and military men,
seemed so immeasurably above him, an insignificant officer of the
Guards, that they not only did not wish to, but simply could not, be
aware of his existence. At the quarters of the commander-in-chief,
Kutuzov, where he inquired for Bolkonski, all the adjutants and even the
orderlies looked at him as if they wished to impress on him that a great
many officers like him were always coming there and that everybody was
heartily sick of them. In spite of this, or rather because of it, next
day, November 15, after dinner he again went to Olmutz and, entering the
house occupied by Kutuzov, asked for Bolkonski. Prince Andrew was in and
Boris was shown into a large hall probably formerly used for dancing,
but in which five beds now stood, and furniture of various kinds: a
table, chairs, and a clavichord. One adjutant, nearest the door, was
sitting at the table in a Persian dressing gown, writing. Another, the
red, stout Nesvitski, lay on a bed with his arms under his head,
laughing with an officer who had sat down beside him. A third was
playing a Viennese waltz on the clavichord, while a fourth, lying on the
clavichord, sang the tune. Bolkonski was not there. None of these
gentlemen changed his position on seeing Boris. The one who was writing
and whom Boris addressed turned round crossly and told him Bolkonski was
on duty and that he should go through the door on the left into the
reception room if he wished to see him. Boris thanked him and went to
the reception room, where he found some ten officers and generals.

When he entered, Prince Andrew, his eyes drooping contemptuously (with
that peculiar expression of polite weariness which plainly says, "If it
were not my duty I would not talk to you for a moment"), was listening
to an old Russian general with decorations, who stood very erect, almost
on tiptoe, with a soldier's obsequious expression on his purple face,
reporting something.

"Very well, then, be so good as to wait," said Prince Andrew to the
general, in Russian, speaking with the French intonation he affected
when he wished to speak contemptuously, and noticing Boris, Prince
Andrew, paying no more heed to the general who ran after him imploring
him to hear something more, nodded and turned to him with a cheerful
smile.

At that moment Boris clearly realized what he had before surmised, that
in the army, besides the subordination and discipline prescribed in the
military code, which he and the others knew in the regiment, there was
another, more important, subordination, which made this tight-laced,
purple-faced general wait respectfully while Captain Prince Andrew, for
his own pleasure, chose to chat with Lieutenant Drubetskoy. More than
ever was Boris resolved to serve in future not according to the written
code, but under this unwritten law. He felt now that merely by having
been recommended to Prince Andrew he had already risen above the general
who at the front had the power to annihilate him, a lieutenant of the
Guards. Prince Andrew came up to him and took his hand.

"I am very sorry you did not find me in yesterday. I was fussing about
with Germans all day. We went with Weyrother to survey the dispositions.
When Germans start being accurate, there's no end to it!"

Boris smiled, as if he understood what Prince Andrew was alluding to as
something generally known. But it was the first time he had heard
Weyrother's name, or even the term "dispositions."

"Well, my dear fellow, so you still want to be an adjutant? I have been
thinking about you."

"Yes, I was thinking"--for some reason Boris could not help blushing--
"of asking the commander-in-chief. He has had a letter from Prince
Kuragin about me. I only wanted to ask because I fear the Guards won't
be in action," he added as if in apology.

"All right, all right. We'll talk it over," replied Prince Andrew. "Only
let me report this gentleman's business, and I shall be at your
disposal."

While Prince Andrew went to report about the purple-faced general, that
gentleman--evidently not sharing Boris' conception of the advantages of
the unwritten code of subordination--looked so fixedly at the
presumptuous lieutenant who had prevented his finishing what he had to
say to the adjutant that Boris felt uncomfortable. He turned away and
waited impatiently for Prince Andrew's return from the commander-in-
chief's room.

"You see, my dear fellow, I have been thinking about you," said Prince
Andrew when they had gone into the large room where the clavichord was.
"It's no use your going to the commander-in-chief. He would say a lot of
pleasant things, ask you to dinner" ("That would not be bad as regards
the unwritten code," thought Boris), "but nothing more would come of it.
There will soon be a battalion of us aides-de-camp and adjutants! But
this is what we'll do: I have a good friend, an adjutant general and an
excellent fellow, Prince Dolgorukov; and though you may not know it, the
fact is that now Kutuzov with his staff and all of us count for nothing.
Everything is now centered round the Emperor. So we will go to
Dolgorukov; I have to go there anyhow and I have already spoken to him
about you. We shall see whether he cannot attach you to himself or find
a place for you somewhere nearer the sun."

Prince Andrew always became specially keen when he had to guide a young
man and help him to worldly success. Under cover of obtaining help of
this kind for another, which from pride he would never accept for
himself, he kept in touch with the circle which confers success and
which attracted him. He very readily took up Boris' cause and went with
him to Dolgorukov.

It was late in the evening when they entered the palace at Olmutz
occupied by the Emperors and their retinues.

That same day a council of war had been held in which all the members of
the Hofkriegsrath and both Emperors took part. At that council, contrary
to the views of the old generals Kutuzov and Prince Schwartzenberg, it
had been decided to advance immediately and give battle to Bonaparte.
The council of war was just over when Prince Andrew accompanied by Boris
arrived at the palace to find Dolgorukov. Everyone at headquarters was
still under the spell of the day's council, at which the party of the
young had triumphed. The voices of those who counseled delay and advised
waiting for something else before advancing had been so completely
silenced and their arguments confuted by such conclusive evidence of the
advantages of attacking that what had been discussed at the council--the
coming battle and the victory that would certainly result from it--no
longer seemed to be in the future but in the past. All the advantages
were on our side. Our enormous forces, undoubtedly superior to
Napoleon's, were concentrated in one place, the troops inspired by the
Emperors' presence were eager for action. The strategic position where
the operations would take place was familiar in all its details to the
Austrian General Weyrother: a lucky accident had ordained that the
Austrian army should maneuver the previous year on the very fields where
the French had now to be fought; the adjacent locality was known and
shown in every detail on the maps, and Bonaparte, evidently weakened,
was undertaking nothing.

Dolgorukov, one of the warmest advocates of an attack, had just returned
from the council, tired and exhausted but eager and proud of the victory
that had been gained. Prince Andrew introduced his protege, but Prince
Dolgorukov politely and firmly pressing his hand said nothing to Boris
and, evidently unable to suppress the thoughts which were uppermost in
his mind at that moment, addressed Prince Andrew in French.

"Ah, my dear fellow, what a battle we have gained! God grant that the
one that will result from it will be as victorious! However, dear
fellow," he said abruptly and eagerly, "I must confess to having been
unjust to the Austrians and especially to Weyrother. What exactitude,
what minuteness, what knowledge of the locality, what foresight for
every eventuality, every possibility even to the smallest detail! No, my
dear fellow, no conditions better than our present ones could have been
devised. This combination of Austrian precision with Russian valor--what
more could be wished for?"

"So the attack is definitely resolved on?" asked Bolkonski.

"And do you know, my dear fellow, it seems to me that Bonaparte has
decidedly lost bearings, you know that a letter was received from him
today for the Emperor." Dolgorukov smiled significantly.

"Is that so? And what did he say?" inquired Bolkonski.

"What can he say? Tra-di-ri-di-ra and so on... merely to gain time. I
tell you he is in our hands, that's certain! But what was most amusing,"
he continued, with a sudden, good-natured laugh, "was that we could not
think how to address the reply! If not as 'Consul' and of course not as
'Emperor,' it seemed to me it should be to 'General Bonaparte.'"

"But between not recognizing him as Emperor and calling him General
Bonaparte, there is a difference," remarked Bolkonski.

"That's just it," interrupted Dolgorukov quickly, laughing. "You know
Bilibin--he's a very clever fellow. He suggested addressing him as
'Usurper and Enemy of Mankind.'"

Dolgorukov laughed merrily.

"Only that?" said Bolkonski.

"All the same, it was Bilibin who found a suitable form for the address.
He is a wise and clever fellow."

"What was it?"

"To the Head of the French Government... Au chef du gouvernement
francais," said Dolgorukov, with grave satisfaction. "Good, wasn't it?"

"Yes, but he will dislike it extremely," said Bolkonski.

"Oh yes, very much! My brother knows him, he's dined with him--the
present Emperor--more than once in Paris, and tells me he never met a
more cunning or subtle diplomatist--you know, a combination of French
adroitness and Italian play-acting! Do you know the tale about him and
Count Markov? Count Markov was the only man who knew how to handle him.
You know the story of the handkerchief? It is delightful!"

And the talkative Dolgorukov, turning now to Boris, now to Prince
Andrew, told how Bonaparte wishing to test Markov, our ambassador,
purposely dropped a handkerchief in front of him and stood looking at
Markov, probably expecting Markov to pick it up for him, and how Markov
immediately dropped his own beside it and picked it up without touching
Bonaparte's.

"Delightful!" said Bolkonski. "But I have come to you, Prince, as a
petitioner on behalf of this young man. You see..." but before Prince
Andrew could finish, an aide-de-camp came in to summon Dolgorukov to the
Emperor.

"Oh, what a nuisance," said Dolgorukov, getting up hurriedly and
pressing the hands of Prince Andrew and Boris. "You know I should be
very glad to do all in my power both for you and for this dear young
man." Again he pressed the hand of the latter with an expression of
good-natured, sincere, and animated levity. "But you see... another
time!"

Boris was excited by the thought of being so close to the higher powers
as he felt himself to be at that moment. He was conscious that here he
was in contact with the springs that set in motion the enormous
movements of the mass of which in his regiment he felt himself a tiny,
obedient, and insignificant atom. They followed Prince Dolgorukov out
into the corridor and met--coming out of the door of the Emperor's room
by which Dolgorukov had entered--a short man in civilian clothes with a
clever face and sharply projecting jaw which, without spoiling his face,
gave him a peculiar vivacity and shiftiness of expression. This short
man nodded to Dolgorukov as to an intimate friend and stared at Prince
Andrew with cool intensity, walking straight toward him and evidently
expecting him to bow or to step out of his way. Prince Andrew did
neither: a look of animosity appeared on his face and the other turned
away and went down the side of the corridor.

"Who was that?" asked Boris.

"He is one of the most remarkable, but to me most unpleasant of men--the
Minister of Foreign Affairs, Prince Adam Czartoryski.... It is such men
as he who decide the fate of nations," added Bolkonski with a sigh he
could not suppress, as they passed out of the palace.

Next day, the army began its campaign, and up to the very battle of
Austerlitz, Boris was unable to see either Prince Andrew or Dolgorukov
again and remained for a while with the Ismaylov regiment.




CHAPTER X

At dawn on the sixteenth of November, Denisov's squadron, in which
Nicholas Rostov served and which was in Prince Bagration's detachment,
moved from the place where it had spent the night, advancing into action
as arranged, and after going behind other columns for about two thirds
of a mile was stopped on the highroad. Rostov saw the Cossacks and then
the first and second squadrons of hussars and infantry battalions and
artillery pass by and go forward and then Generals Bagration and
Dolgorukov ride past with their adjutants. All the fear before action
which he had experienced as previously, all the inner struggle to
conquer that fear, all his dreams of distinguishing himself as a true
hussar in this battle, had been wasted. Their squadron remained in
reserve and Nicholas Rostov spent that day in a dull and wretched mood.
At nine in the morning, he heard firing in front and shouts of hurrah,
and saw wounded being brought back (there were not many of them), and at
last he saw how a whole detachment of French cavalry was brought in,
convoyed by a sotnya of Cossacks. Evidently the affair was over and,
though not big, had been a successful engagement. The men and officers
returning spoke of a brilliant victory, of the occupation of the town of
Wischau and the capture of a whole French squadron. The day was bright
and sunny after a sharp night frost, and the cheerful glitter of that
autumn day was in keeping with the news of victory which was conveyed,
not only by the tales of those who had taken part in it, but also by the
joyful expression on the faces of soldiers, officers, generals, and
adjutants, as they passed Rostov going or coming. And Nicholas, who had
vainly suffered all the dread that precedes a battle and had spent that
happy day in inactivity, was all the more depressed.

"Come here, Wostov. Let's dwink to dwown our gwief!" shouted Denisov,
who had settled down by the roadside with a flask and some food.

The officers gathered round Denisov's canteen, eating and talking.

"There! They are bringing another!" cried one of the officers,
indicating a captive French dragoon who was being brought in on foot by
two Cossacks.

One of them was leading by the bridle a fine large French horse he had
taken from the prisoner.

"Sell us that horse!" Denisov called out to the Cossacks.

"If you like, your honor!"

The officers got up and stood round the Cossacks and their prisoner. The
French dragoon was a young Alsatian who spoke French with a German
accent. He was breathless with agitation, his face was red, and when he
heard some French spoken he at once began speaking to the officers,
addressing first one, then another. He said he would not have been
taken, it was not his fault but the corporal's who had sent him to seize
some horsecloths, though he had told him the Russians were there. And at
every word he added: "But don't hurt my little horse!" and stroked the
animal. It was plain that he did not quite grasp where he was. Now he
excused himself for having been taken prisoner and now, imagining
himself before his own officers, insisted on his soldierly discipline
and zeal in the service. He brought with him into our rearguard all the
freshness of atmosphere of the French army, which was so alien to us.

The Cossacks sold the horse for two gold pieces, and Rostov, being the
richest of the officers now that he had received his money, bought it.

"But don't hurt my little horse!" said the Alsatian good-naturedly to
Rostov when the animal was handed over to the hussar.

Rostov smilingly reassured the dragoon and gave him money.

"Alley! Alley!" said the Cossack, touching the prisoner's arm to make
him go on.

"The Emperor! The Emperor!" was suddenly heard among the hussars.

All began to run and bustle, and Rostov saw coming up the road behind
him several riders with white plumes in their hats. In a moment everyone
was in his place, waiting.

Rostov did not know or remember how he ran to his place and mounted.
Instantly his regret at not having been in action and his dejected mood
amid people of whom he was weary had gone, instantly every thought of
himself had vanished. He was filled with happiness at his nearness to
the Emperor. He felt that this nearness by itself made up to him for the
day he had lost. He was happy as a lover when the longed-for moment of
meeting arrives. Not daring to look round and without looking round, he
was ecstatically conscious of his approach. He felt it not only from the
sound of the hoofs of the approaching cavalcade, but because as he drew
near everything grew brighter, more joyful, more significant, and more
festive around him. Nearer and nearer to Rostov came that sun shedding
beams of mild and majestic light around, and already he felt himself
enveloped in those beams, he heard his voice, that kindly, calm, and
majestic voice that was yet so simple! And as if in accord with Rostov's
feeling, there was a deathly stillness amid which was heard the
Emperor's voice.

"The Pavlograd hussars?" he inquired.

"The reserves, sire!" replied a voice, a very human one compared to that
which had said: "The Pavlograd hussars?"

The Emperor drew level with Rostov and halted. Alexander's face was even
more beautiful than it had been three days before at the review. It
shone with such gaiety and youth, such innocent youth, that it suggested
the liveliness of a fourteen-year-old boy, and yet it was the face of
the majestic Emperor. Casually, while surveying the squadron, the
Emperor's eyes met Rostov's and rested on them for not more than two
seconds. Whether or no the Emperor understood what was going on in
Rostov's soul (it seemed to Rostov that he understood everything), at
any rate his light-blue eyes gazed for about two seconds into Rostov's
face. A gentle, mild light poured from them. Then all at once he raised
his eyebrows, abruptly touched his horse with his left foot, and
galloped on.

The younger Emperor could not restrain his wish to be present at the
battle and, in spite of the remonstrances of his courtiers, at twelve
o'clock left the third column with which he had been and galloped toward
the vanguard. Before he came up with the hussars, several adjutants met
him with news of the successful result of the action.

This battle, which consisted in the capture of a French squadron, was
represented as a brilliant victory over the French, and so the Emperor
and the whole army, especially while the smoke hung over the
battlefield, believed that the French had been defeated and were
retreating against their will. A few minutes after the Emperor had
passed, the Pavlograd division was ordered to advance. In Wischau
itself, a petty German town, Rostov saw the Emperor again. In the market
place, where there had been some rather heavy firing before the
Emperor's arrival, lay several killed and wounded soldiers whom there
had not been time to move. The Emperor, surrounded by his suite of
officers and courtiers, was riding a bobtailed chestnut mare, a
different one from that which he had ridden at the review, and bending
to one side he gracefully held a gold lorgnette to his eyes and looked
at a soldier who lay prone, with blood on his uncovered head. The
wounded soldier was so dirty, coarse, and revolting that his proximity
to the Emperor shocked Rostov. Rostov saw how the Emperor's rather round
shoulders shuddered as if a cold shiver had run down them, how his left
foot began convulsively tapping the horse's side with the spur, and how
the well-trained horse looked round unconcerned and did not stir. An
adjutant, dismounting, lifted the soldier under the arms to place him on
a stretcher that had been brought. The soldier groaned.

"Gently, gently! Can't you do it more gently?" said the Emperor
apparently suffering more than the dying soldier, and he rode away.

Rostov saw tears filling the Emperor's eyes and heard him, as he was
riding away, say to Czartoryski: "What a terrible thing war is: what a
terrible thing! Quelle terrible chose que la guerre!"

The troops of the vanguard were stationed before Wischau, within sight
of the enemy's lines, which all day long had yielded ground to us at the
least firing. The Emperor's gratitude was announced to the vanguard,
rewards were promised, and the men received a double ration of vodka.
The campfires crackled and the soldiers' songs resounded even more
merrily than on the previous night. Denisov celebrated his promotion to
the rank of major, and Rostov, who had already drunk enough, at the end
of the feast proposed the Emperor's health. "Not 'our Sovereign, the
Emperor,' as they say at official dinners," said he, "but the health of
our Sovereign, that good, enchanting, and great man! Let us drink to his
health and to the certain defeat of the French!"

"If we fought before," he said, "not letting the French pass, as at
Schon Grabern, what shall we not do now when he is at the front? We will
all die for him gladly! Is it not so, gentlemen? Perhaps I am not saying
it right, I have drunk a good deal--but that is how I feel, and so do
you too! To the health of Alexander the First! Hurrah!"

"Hurrah!" rang the enthusiastic voices of the officers.

And the old cavalry captain, Kirsten, shouted enthusiastically and no
less sincerely than the twenty-year-old Rostov.

When the officers had emptied and smashed their glasses, Kirsten filled
others and, in shirt sleeves and breeches, went glass in hand to the
soldiers' bonfires and with his long gray mustache, his white chest
showing under his open shirt, he stood in a majestic pose in the light
of the campfire, waving his uplifted arm.

"Lads! here's to our Sovereign, the Emperor, and victory over our
enemies! Hurrah!" he exclaimed in his dashing, old, hussar's baritone.

The hussars crowded round and responded heartily with loud shouts.

Late that night, when all had separated, Denisov with his short hand
patted his favorite, Rostov, on the shoulder.

"As there's no one to fall in love with on campaign, he's fallen in love
with the Tsar," he said.

"Denisov, don't make fun of it!" cried Rostov. "It is such a lofty,
beautiful feeling, such a..."

"I believe it, I believe it, fwiend, and I share and appwove..."

"No, you don't understand!"

And Rostov got up and went wandering among the campfires, dreaming of
what happiness it would be to die--not in saving the Emperor's life (he
did not even dare to dream of that), but simply to die before his eyes.
He really was in love with the Tsar and the glory of the Russian arms
and the hope of future triumph. And he was not the only man to
experience that feeling during those memorable days preceding the battle
of Austerlitz: nine tenths of the men in the Russian army were then in
love, though less ecstatically, with their Tsar and the glory of the
Russian arms.




CHAPTER XI

The next day the Emperor stopped at Wischau, and Villier, his physician,
was repeatedly summoned to see him. At headquarters and among the troops
near by the news spread that the Emperor was unwell. He ate nothing and
had slept badly that night, those around him reported. The cause of this
indisposition was the strong impression made on his sensitive mind by
the sight of the killed and wounded.

At daybreak on the seventeenth, a French officer who had come with a
flag of truce, demanding an audience with the Russian Emperor, was
brought into Wischau from our outposts. This officer was Savary. The
Emperor had only just fallen asleep and so Savary had to wait. At midday
he was admitted to the Emperor, and an hour later he rode off with
Prince Dolgorukov to the advanced post of the French army.

It was rumored that Savary had been sent to propose to Alexander a
meeting with Napoleon. To the joy and pride of the whole army, a
personal interview was refused, and instead of the Sovereign, Prince
Dolgorukov, the victor at Wischau, was sent with Savary to negotiate
with Napoleon if, contrary to expectations, these negotiations were
actuated by a real desire for peace.

Toward evening Dolgorukov came back, went straight to the Tsar, and
remained alone with him for a long time.

On the eighteenth and nineteenth of November, the army advanced two
days' march and the enemy's outposts after a brief interchange of shots
retreated. In the highest army circles from midday on the nineteenth, a
great, excitedly bustling activity began which lasted till the morning
of the twentieth, when the memorable battle of Austerlitz was fought.

Till midday on the nineteenth, the activity--the eager talk, running to
and fro, and dispatching of adjutants--was confined to the Emperor's
headquarters. But on the afternoon of that day, this activity reached
Kutuzov's headquarters and the staffs of the commanders of columns. By
evening, the adjutants had spread it to all ends and parts of the army,
and in the night from the nineteenth to the twentieth, the whole eighty
thousand allied troops rose from their bivouacs to the hum of voices,
and the army swayed and started in one enormous mass six miles long.

The concentrated activity which had begun at the Emperor's headquarters
in the morning and had started the whole movement that followed was like
the first movement of the main wheel of a large tower clock. One wheel
slowly moved, another was set in motion, and a third, and wheels began
to revolve faster and faster, levers and cogwheels to work, chimes to
play, figures to pop out, and the hands to advance with regular motion
as a result of all that activity.

Just as in the mechanism of a clock, so in the mechanism of the military
machine, an impulse once given leads to the final result; and just as
indifferently quiescent till the moment when motion is transmitted to
them are the parts of the mechanism which the impulse has not yet
reached. Wheels creak on their axles as the cogs engage one another and
the revolving pulleys whirr with the rapidity of their movement, but a
neighboring wheel is as quiet and motionless as though it were prepared
to remain so for a hundred years; but the moment comes when the lever
catches it and obeying the impulse that wheel begins to creak and joins
in the common motion the result and aim of which are beyond its ken.

Just as in a clock, the result of the complicated motion of innumerable
wheels and pulleys is merely a slow and regular movement of the hands
which show the time, so the result of all the complicated human
activities of 160,000 Russians and French--all their passions, desires,
remorse, humiliations, sufferings, outbursts of pride, fear, and
enthusiasm--was only the loss of the battle of Austerlitz, the so-called
battle of the three Emperors--that is to say, a slow movement of the
hand on the dial of human history.

Prince Andrew was on duty that day and in constant attendance on the
commander-in-chief.

At six in the evening, Kutuzov went to the Emperor's headquarters and
after staying but a short time with the Tsar went to see the grand
marshal of the court, Count Tolstoy.

Bolkonski took the opportunity to go in to get some details of the
coming action from Dolgorukov. He felt that Kutuzov was upset and
dissatisfied about something and that at headquarters they were
dissatisfied with him, and also that at the Emperor's headquarters
everyone adopted toward him the tone of men who know something others do
not know: he therefore wished to speak to Dolgorukov.

"Well, how d'you do, my dear fellow?" said Dolgorukov, who was sitting
at tea with Bilibin. "The fete is for tomorrow. How is your old fellow?
Out of sorts?"

"I won't say he is out of sorts, but I fancy he would like to be heard."

"But they heard him at the council of war and will hear him when he
talks sense, but to temporize and wait for something now when Bonaparte
fears nothing so much as a general battle is impossible."

"Yes, you have seen him?" said Prince Andrew. "Well, what is Bonaparte
like? How did he impress you?"

"Yes, I saw him, and am convinced that he fears nothing so much as a
general engagement," repeated Dolgorukov, evidently prizing this general
conclusion which he had arrived at from his interview with Napoleon. "If
he weren't afraid of a battle why did he ask for that interview? Why
negotiate, and above all why retreat, when to retreat is so contrary to
his method of conducting war? Believe me, he is afraid, afraid of a
general battle. His hour has come! Mark my words!"

"But tell me, what is he like, eh?" said Prince Andrew again.

"He is a man in a gray overcoat, very anxious that I should call him
'Your Majesty,' but who, to his chagrin, got no title from me! That's
the sort of man he is, and nothing more," replied Dolgorukov, looking
round at Bilibin with a smile.

"Despite my great respect for old Kutuzov," he continued, "we should be
a nice set of fellows if we were to wait about and so give him a chance
to escape, or to trick us, now that we certainly have him in our hands!
No, we mustn't forget Suvorov and his rule--not to put yourself in a
position to be attacked, but yourself to attack. Believe me in war the
energy of young men often shows the way better than all the experience
of old Cunctators."

"But in what position are we going to attack him? I have been at the
outposts today and it is impossible to say where his chief forces are
situated," said Prince Andrew.

He wished to explain to Dolgorukov a plan of attack he had himself
formed.

"Oh, that is all the same," Dolgorukov said quickly, and getting up he
spread a map on the table. "All eventualities have been foreseen. If he
is standing before Brunn..."

And Prince Dolgorukov rapidly but indistinctly explained Weyrother's
plan of a flanking movement.

Prince Andrew began to reply and to state his own plan, which might have
been as good as Weyrother's, but for the disadvantage that Weyrother's
had already been approved. As soon as Prince Andrew began to demonstrate
the defects of the latter and the merits of his own plan, Prince
Dolgorukov ceased to listen to him and gazed absent-mindedly not at the
map, but at Prince Andrew's face.

"There will be a council of war at Kutuzov's tonight, though; you can
say all this there," remarked Dolgorukov.

"I will do so," said Prince Andrew, moving away from the map.

"Whatever are you bothering about, gentlemen?" said Bilibin, who, till
then, had listened with an amused smile to their conversation and now
was evidently ready with a joke. "Whether tomorrow brings victory or
defeat, the glory of our Russian arms is secure. Except your Kutuzov,
there is not a single Russian in command of a column! The commanders
are: Herr General Wimpfen, le Comte de Langeron, le Prince de
Lichtenstein, le Prince, de Hohenlohe, and finally Prishprish, and so on
like all those Polish names."

"Be quiet, backbiter!" said Dolgorukov. "It is not true; there are now
two Russians, Miloradovich, and Dokhturov, and there would be a third,
Count Arakcheev, if his nerves were not too weak."

"However, I think General Kutuzov has come out," said Prince Andrew. "I
wish you good luck and success, gentlemen!" he added and went out after
shaking hands with Dolgorukov and Bilibin.

On the way home, Prince Andrew could not refrain from asking Kutuzov,
who was sitting silently beside him, what he thought of tomorrow's
battle.

Kutuzov looked sternly at his adjutant and, after a pause, replied: "I
think the battle will be lost, and so I told Count Tolstoy and asked him
to tell the Emperor. What do you think he replied? 'But, my dear
general, I am engaged with rice and cutlets, look after military matters
yourself!' Yes... That was the answer I got!"




CHAPTER XII

Shortly after nine o'clock that evening, Weyrother drove with his plans
to Kutuzov's quarters where the council of war was to be held. All the
commanders of columns were summoned to the commander-in-chief's and with
the exception of Prince Bagration, who declined to come, were all there
at the appointed time.

Weyrother, who was in full control of the proposed battle, by his
eagerness and briskness presented a marked contrast to the dissatisfied
and drowsy Kutuzov, who reluctantly played the part of chairman and
president of the council of war. Weyrother evidently felt himself to be
at the head of a movement that had already become unrestrainable. He was
like a horse running downhill harnessed to a heavy cart. Whether he was
pulling it or being pushed by it he did not know, but rushed along at
headlong speed with no time to consider what this movement might lead
to. Weyrother had been twice that evening to the enemy's picket line to
reconnoiter personally, and twice to the Emperors, Russian and Austrian,
to report and explain, and to his headquarters where he had dictated the
dispositions in German, and now, much exhausted, he arrived at
Kutuzov's.

He was evidently so busy that he even forgot to be polite to the
commander in chief. He interrupted him, talked rapidly and indistinctly,
without looking at the man he was addressing, and did not reply to
questions put to him. He was bespattered with mud and had a pitiful,
weary, and distracted air, though at the same time he was haughty and
self-confident.

Kutuzov was occupying a nobleman's castle of modest dimensions near
Ostralitz. In the large drawing room which had become the commander in
chief's office were gathered Kutuzov himself, Weyrother, and the members
of the council of war. They were drinking tea, and only awaited Prince
Bagration to begin the council. At last Bagration's orderly came with
the news that the prince could not attend. Prince Andrew came in to
inform the commander-in-chief of this and, availing himself of
permission previously given him by Kutuzov to be present at the council,
he remained in the room.

"Since Prince Bagration is not coming, we may begin," said Weyrother,
hurriedly rising from his seat and going up to the table on which an
enormous map of the environs of Brunn was spread out.

Kutuzov, with his uniform unbuttoned so that his fat neck bulged over
his collar as if escaping, was sitting almost asleep in a low chair,
with his podgy old hands resting symmetrically on its arms. At the sound
of Weyrother's voice, he opened his one eye with an effort.

"Yes, yes, if you please! It is already late," said he, and nodding his
head he let it droop and again closed his eye.

If at first the members of the council thought that Kutuzov was
pretending to sleep, the sounds his nose emitted during the reading that
followed proved that the commander-in-chief at that moment was absorbed
by a far more serious matter than a desire to show his contempt for the
dispositions or anything else--he was engaged in satisfying the
irresistible human need for sleep. He really was asleep. Weyrother, with
the gesture of a man too busy to lose a moment, glanced at Kutuzov and,
having convinced himself that he was asleep, took up a paper and in a
loud, monotonous voice began to read out the dispositions for the
impending battle, under a heading which he also read out:

"Dispositions for an attack on the enemy position behind Kobelnitz and
Sokolnitz, November 30, 1805."

The dispositions were very complicated and difficult. They began as
follows:

"As the enemy's left wing rests on wooded hills and his right extends
along Kobelnitz and Sokolnitz behind the ponds that are there, while we,
on the other hand, with our left wing by far outflank his right, it is
advantageous to attack the enemy's latter wing especially if we occupy
the villages of Sokolnitz and Kobelnitz, whereby we can both fall on his
flank and pursue him over the plain between Schlappanitz and the
Thuerassa forest, avoiding the defiles of Schlappanitz and Bellowitz
which cover the enemy's front. For this object it is necessary that...
The first column marches... The second column marches... The third
column marches..." and so on, read Weyrother.

The generals seemed to listen reluctantly to the difficult dispositions.
The tall, fair-haired General Buxhowden stood, leaning his back against
the wall, his eyes fixed on a burning candle, and seemed not to listen
or even to wish to be thought to listen. Exactly opposite Weyrother,
with his glistening wide-open eyes fixed upon him and his mustache
twisted upwards, sat the ruddy Miloradovich in a military pose, his
elbows turned outwards, his hands on his knees, and his shoulders
raised. He remained stubbornly silent, gazing at Weyrother's face, and
only turned away his eyes when the Austrian chief of staff finished
reading. Then Miloradovich looked round significantly at the other
generals. But one could not tell from that significant look whether he
agreed or disagreed and was satisfied or not with the arrangements. Next
to Weyrother sat Count Langeron who, with a subtle smile that never left
his typically southern French face during the whole time of the reading,
gazed at his delicate fingers which rapidly twirled by its corners a
gold snuffbox on which was a portrait. In the middle of one of the
longest sentences, he stopped the rotary motion of the snuffbox, raised
his head, and with inimical politeness lurking in the corners of his
thin lips interrupted Weyrother, wishing to say something. But the
Austrian general, continuing to read, frowned angrily and jerked his
elbows, as if to say: "You can tell me your views later, but now be so
good as to look at the map and listen." Langeron lifted his eyes with an
expression of perplexity, turned round to Miloradovich as if seeking an
explanation, but meeting the latter's impressive but meaningless gaze
drooped his eyes sadly and again took to twirling his snuffbox.

"A geography lesson!" he muttered as if to himself, but loud enough to
be heard.

Przebyszewski, with respectful but dignified politeness, held his hand
to his ear toward Weyrother, with the air of a man absorbed in
attention. Dohkturov, a little man, sat opposite Weyrother, with an
assiduous and modest mien, and stooping over the outspread map
conscientiously studied the dispositions and the unfamiliar locality. He
asked Weyrother several times to repeat words he had not clearly heard
and the difficult names of villages. Weyrother complied and Dohkturov
noted them down.

When the reading which lasted more than an hour was over, Langeron again
brought his snuffbox to rest and, without looking at Weyrother or at
anyone in particular, began to say how difficult it was to carry out
such a plan in which the enemy's position was assumed to be known,
whereas it was perhaps not known, since the enemy was in movement.
Langeron's objections were valid but it was obvious that their chief aim
was to show General Weyrother--who had read his dispositions with as
much self-confidence as if he were addressing school children--that he
had to do, not with fools, but with men who could teach him something in
military matters.

When the monotonous sound of Weyrother's voice ceased, Kutuzov opened
his eye as a miller wakes up when the soporific drone of the mill wheel
is interrupted. He listened to what Langeron said, as if remarking, "So
you are still at that silly business!" quickly closed his eye again, and
let his head sink still lower.

Langeron, trying as virulently as possible to sting Weyrother's vanity
as author of the military plan, argued that Bonaparte might easily
attack instead of being attacked, and so render the whole of this plan
perfectly worthless. Weyrother met all objections with a firm and
contemptuous smile, evidently prepared beforehand to meet all objections
be they what they might.

"If he could attack us, he would have done so today," said he.

"So you think he is powerless?" said Langeron.

"He has forty thousand men at most," replied Weyrother, with the smile
of a doctor to whom an old wife wishes to explain the treatment of a
case.

"In that case he is inviting his doom by awaiting our attack," said
Langeron, with a subtly ironical smile, again glancing round for support
to Miloradovich who was near him.

But Miloradovich was at that moment evidently thinking of anything
rather than of what the generals were disputing about.

"Ma foi!" said he, "tomorrow we shall see all that on the battlefield."

Weyrother again gave that smile which seemed to say that to him it was
strange and ridiculous to meet objections from Russian generals and to
have to prove to them what he had not merely convinced himself of, but
had also convinced the sovereign Emperors of.

"The enemy has quenched his fires and a continual noise is heard from
his camp," said he. "What does that mean? Either he is retreating, which
is the only thing we need fear, or he is changing his position." (He
smiled ironically.) "But even if he also took up a position in the
Thuerassa, he merely saves us a great deal of trouble and all our
arrangements to the minutest detail remain the same."

"How is that?..." began Prince Andrew, who had for long been waiting an
opportunity to express his doubts.

Kutuzov here woke up, coughed heavily, and looked round at the generals.

"Gentlemen, the dispositions for tomorrow--or rather for today, for it
is past midnight--cannot now be altered," said he. "You have heard them,
and we shall all do our duty. But before a battle, there is nothing more
important..." he paused, "than to have a good sleep."

He moved as if to rise. The generals bowed and retired. It was past
midnight. Prince Andrew went out.

The council of war, at which Prince Andrew had not been able to express
his opinion as he had hoped to, left on him a vague and uneasy
impression. Whether Dolgorukov and Weyrother, or Kutuzov, Langeron, and
the others who did not approve of the plan of attack, were right--he did
not know. "But was it really not possible for Kutuzov to state his views
plainly to the Emperor? Is it possible that on account of court and
personal considerations tens of thousands of lives, and my life, my
life," he thought, "must be risked?"

"Yes, it is very likely that I shall be killed tomorrow," he thought.
And suddenly, at this thought of death, a whole series of most distant,
most intimate, memories rose in his imagination: he remembered his last
parting from his father and his wife; he remembered the days when he
first loved her. He thought of her pregnancy and felt sorry for her and
for himself, and in a nervously emotional and softened mood he went out
of the hut in which he was billeted with Nesvitski and began to walk up
and down before it.

The night was foggy and through the fog the moonlight gleamed
mysteriously. "Yes, tomorrow, tomorrow!" he thought. "Tomorrow
everything may be over for me! All these memories will be no more, none
of them will have any meaning for me. Tomorrow perhaps, even certainly,
I have a presentiment that for the first time I shall have to show all I
can do." And his fancy pictured the battle, its loss, the concentration
of fighting at one point, and the hesitation of all the commanders. And
then that happy moment, that Toulon for which he had so long waited,
presents itself to him at last. He firmly and clearly expresses his
opinion to Kutuzov, to Weyrother, and to the Emperors. All are struck by
the justness of his views, but no one undertakes to carry them out, so
he takes a regiment, a division-stipulates that no one is to interfere
with his arrangements--leads his division to the decisive point, and
gains the victory alone. "But death and suffering?" suggested another
voice. Prince Andrew, however, did not answer that voice and went on
dreaming of his triumphs. The dispositions for the next battle are
planned by him alone. Nominally he is only an adjutant on Kutuzov's
staff, but he does everything alone. The next battle is won by him
alone. Kutuzov is removed and he is appointed... "Well and then?" asked
the other voice. "If before that you are not ten times wounded, killed,
or betrayed, well... what then?..." "Well then," Prince Andrew answered
himself, "I don't know what will happen and don't want to know, and
can't, but if I want this--want glory, want to be known to men, want to
be loved by them, it is not my fault that I want it and want nothing but
that and live only for that. Yes, for that alone! I shall never tell
anyone, but, oh God! what am I to do if I love nothing but fame and
men's esteem? Death, wounds, the loss of family--I fear nothing. And
precious and dear as many persons are to me--father, sister, wife--those
dearest to me--yet dreadful and unnatural as it seems, I would give them
all at once for a moment of glory, of triumph over men, of love from men
I don't know and never shall know, for the love of these men here," he
thought, as he listened to voices in Kutuzov's courtyard. The voices
were those of the orderlies who were packing up; one voice, probably a
coachman's, was teasing Kutuzov's old cook whom Prince Andrew knew, and
who was called Tit. He was saying, "Tit, I say, Tit!"

"Well?" returned the old man.

"Go, Tit, thresh a bit!" said the wag.

"Oh, go to the devil!" called out a voice, drowned by the laughter of
the orderlies and servants.

"All the same, I love and value nothing but triumph over them all, I
value this mystic power and glory that is floating here above me in this
mist!"




CHAPTER XIII

That same night, Rostov was with a platoon on skirmishing duty in front
of Bagration's detachment. His hussars were placed along the line in
couples and he himself rode along the line trying to master the
sleepiness that kept coming over him. An enormous space, with our army's
campfires dimly glowing in the fog, could be seen behind him; in front
of him was misty darkness. Rostov could see nothing, peer as he would
into that foggy distance: now something gleamed gray, now there was
something black, now little lights seemed to glimmer where the enemy
ought to be, now he fancied it was only something in his own eyes. His
eyes kept closing, and in his fancy appeared--now the Emperor, now
Denisov, and now Moscow memories--and he again hurriedly opened his eyes
and saw close before him the head and ears of the horse he was riding,
and sometimes, when he came within six paces of them, the black figures
of hussars, but in the distance was still the same misty darkness. "Why
not?... It might easily happen," thought Rostov, "that the Emperor will
meet me and give me an order as he would to any other officer; he'll
say: 'Go and find out what's there.' There are many stories of his
getting to know an officer in just such a chance way and attaching him
to himself! What if he gave me a place near him? Oh, how I would guard
him, how I would tell him the truth, how I would unmask his deceivers!"
And in order to realize vividly his love devotion to the sovereign,
Rostov pictured to himself an enemy or a deceitful German, whom he would
not only kill with pleasure but whom he would slap in the face before
the Emperor. Suddenly a distant shout aroused him. He started and opened
his eyes.

"Where am I? Oh yes, in the skirmishing line... pass and watchword--
shaft, Olmutz. What a nuisance that our squadron will be in reserve
tomorrow," he thought. "I'll ask leave to go to the front, this may be
my only chance of seeing the Emperor. It won't be long now before I am
off duty. I'll take another turn and when I get back I'll go to the
general and ask him." He readjusted himself in the saddle and touched up
his horse to ride once more round his hussars. It seemed to him that it
was getting lighter. To the left he saw a sloping descent lit up, and
facing it a black knoll that seemed as steep as a wall. On this knoll
there was a white patch that Rostov could not at all make out: was it a
glade in the wood lit up by the moon, or some unmelted snow, or some
white houses? He even thought something moved on that white spot. "I
expect it's snow... that spot... a spot--une tache," he thought. "There
now... it's not a tache... Natasha... sister, black eyes... Na...
tasha... (Won't she be surprised when I tell her how I've seen the
Emperor?) Natasha... take my sabretache..."--"Keep to the right, your
honor, there are bushes here," came the voice of an hussar, past whom
Rostov was riding in the act of falling asleep. Rostov lifted his head
that had sunk almost to his horse's mane and pulled up beside the
hussar. He was succumbing to irresistible, youthful, childish
drowsiness. "But what was I thinking? I mustn't forget. How shall I
speak to the Emperor? No, that's not it--that's tomorrow. Oh yes!
Natasha... sabretache... saber them... Whom? The hussars... Ah, the
hussars with mustaches. Along the Tverskaya Street rode the hussar with
mustaches... I thought about him too, just opposite Guryev's house...
Old Guryev.... Oh, but Denisov's a fine fellow. But that's all nonsense.
The chief thing is that the Emperor is here. How he looked at me and
wished to say something, but dared not.... No, it was I who dared not.
But that's nonsense, the chief thing is not to forget the important
thing I was thinking of. Yes, Na-tasha, sabretache, oh, yes, yes! That's
right!" And his head once more sank to his horse's neck. All at once it
seemed to him that he was being fired at. "What? What? What?... Cut them
down! What?..." said Rostov, waking up. At the moment he opened his eyes
he heard in front of him, where the enemy was, the long-drawn shouts of
thousands of voices. His horse and the horse of the hussar near him
pricked their ears at these shouts. Over there, where the shouting came
from, a fire flared up and went out again, then another, and all along
the French line on the hill fires flared up and the shouting grew louder
and louder. Rostov could hear the sound of French words but could not
distinguish them. The din of many voices was too great; all he could
hear was: "ahahah!" and "rrrr!"

"What's that? What do you make of it?" said Rostov to the hussar beside
him. "That must be the enemy's camp!"

The hussar did not reply.

"Why, don't you hear it?" Rostov asked again, after waiting for a reply.

"Who can tell, your honor?" replied the hussar reluctantly.

"From the direction, it must be the enemy," repeated Rostov.

"It may be he or it may be nothing," muttered the hussar. "It's dark...
Steady!" he cried to his fidgeting horse.

Rostov's horse was also getting restive: it pawed the frozen ground,
pricking its ears at the noise and looking at the lights. The shouting
grew still louder and merged into a general roar that only an army of
several thousand men could produce. The lights spread farther and
farther, probably along the line of the French camp. Rostov no longer
wanted to sleep. The gay triumphant shouting of the enemy army had a
stimulating effect on him. "Vive l'Empereur! L'Empereur!" he now heard
distinctly.

"They can't be far off, probably just beyond the stream," he said to the
hussar beside him.

The hussar only sighed without replying and coughed angrily. The sound
of horse's hoofs approaching at a trot along the line of hussars was
heard, and out of the foggy darkness the figure of a sergeant of hussars
suddenly appeared, looming huge as an elephant.

"Your honor, the generals!" said the sergeant, riding up to Rostov.

Rostov, still looking round toward the fires and the shouts, rode with
the sergeant to meet some mounted men who were riding along the line.
One was on a white horse. Prince Bagration and Prince Dolgorukov with
their adjutants had come to witness the curious phenomenon of the lights
and shouts in the enemy's camp. Rostov rode up to Bagration, reported to
him, and then joined the adjutants listening to what the generals were
saying.

"Believe me," said Prince Dolgorukov, addressing Bagration, "it is
nothing but a trick! He has retreated and ordered the rearguard to
kindle fires and make a noise to deceive us."

"Hardly," said Bagration. "I saw them this evening on that knoll; if
they had retreated they would have withdrawn from that too.... Officer!"
said Bagration to Rostov, "are the enemy's skirmishers still there?"

"They were there this evening, but now I don't know, your excellency.
Shall I go with some of my hussars to see?" replied Rostov.

Bagration stopped and, before replying, tried to see Rostov's face in
the mist.

"Well, go and see," he said, after a pause.

"Yes, sir."

Rostov spurred his horse, called to Sergeant Fedchenko and two other
hussars, told them to follow him, and trotted downhill in the direction
from which the shouting came. He felt both frightened and pleased to be
riding alone with three hussars into that mysterious and dangerous misty
distance where no one had been before him. Bagration called to him from
the hill not to go beyond the stream, but Rostov pretended not to hear
him and did not stop but rode on and on, continually mistaking bushes
for trees and gullies for men and continually discovering his mistakes.
Having descended the hill at a trot, he no longer saw either our own or
the enemy's fires, but heard the shouting of the French more loudly and
distinctly. In the valley he saw before him something like a river, but
when he reached it he found it was a road. Having come out onto the road
he reined in his horse, hesitating whether to ride along it or cross it
and ride over the black field up the hillside. To keep to the road which
gleamed white in the mist would have been safer because it would be
easier to see people coming along it. "Follow me!" said he, crossed the
road, and began riding up the hill at a gallop toward the point where
the French pickets had been standing that evening.

"Your honor, there he is!" cried one of the hussars behind him. And
before Rostov had time to make out what the black thing was that had
suddenly appeared in the fog, there was a flash, followed by a report,
and a bullet whizzing high up in the mist with a plaintive sound passed
out of hearing. Another musket missed fire but flashed in the pan.
Rostov turned his horse and galloped back. Four more reports followed at
intervals, and the bullets passed somewhere in the fog singing in
different tones. Rostov reined in his horse, whose spirits had risen,
like his own, at the firing, and went back at a footpace. "Well, some
more! Some more!" a merry voice was saying in his soul. But no more
shots came.

Only when approaching Bagration did Rostov let his horse gallop again,
and with his hand at the salute rode up to the general.

Dolgorukov was still insisting that the French had retreated and had
only lit fires to deceive us.

"What does that prove?" he was saying as Rostov rode up. "They might
retreat and leave the pickets."

"It's plain that they have not all gone yet, Prince," said Bagration.
"Wait till tomorrow morning, we'll find out everything tomorrow."

"The picket is still on the hill, your excellency, just where it was in
the evening," reported Rostov, stooping forward with his hand at the
salute and unable to repress the smile of delight induced by his ride
and especially by the sound of the bullets.

"Very good, very good," said Bagration. "Thank you, officer."

"Your excellency," said Rostov, "may I ask a favor?"

"What is it?"

"Tomorrow our squadron is to be in reserve. May I ask to be attached to
the first squadron?"

"What's your name?"

"Count Rostov."

"Oh, very well, you may stay in attendance on me."

"Count Ilya Rostov's son?" asked Dolgorukov.

But Rostov did not reply.

"Then I may reckon on it, your excellency?"

"I will give the order."

"Tomorrow very likely I may be sent with some message to the Emperor,"
thought Rostov.

"Thank God!"

The fires and shouting in the enemy's army were occasioned by the fact
that while Napoleon's proclamation was being read to the troops the
Emperor himself rode round his bivouacs. The soldiers, on seeing him,
lit wisps of straw and ran after him, shouting, "Vive l'Empereur!"
Napoleon's proclamation was as follows:

Soldiers! The Russian army is advancing against you to avenge the
Austrian army of Ulm. They are the same battalions you broke at
Hollabrunn and have pursued ever since to this place. The position we
occupy is a strong one, and while they are marching to go round me on
the right they will expose a flank to me. Soldiers! I will myself direct
your battalions. I will keep out of fire if you with your habitual valor
carry disorder and confusion into the enemy's ranks, but should victory
be in doubt, even for a moment, you will see your Emperor exposing
himself to the first blows of the enemy, for there must be no doubt of
victory, especially on this day when what is at stake is the honor of
the French infantry, so necessary to the honor of our nation.

Do not break your ranks on the plea of removing the wounded! Let every
man be fully imbued with the thought that we must defeat these hirelings
of England, inspired by such hatred of our nation! This victory will
conclude our campaign and we can return to winter quarters, where fresh
French troops who are being raised in France will join us, and the peace
I shall conclude will be worthy of my people, of you, and of myself.

NAPOLEON




CHAPTER XIV

At five in the morning it was still quite dark. The troops of the
center, the reserves, and Bagration's right flank had not yet moved, but
on the left flank the columns of infantry, cavalry, and artillery, which
were to be the first to descend the heights to attack the French right
flank and drive it into the Bohemian mountains according to plan, were
already up and astir. The smoke of the campfires, into which they were
throwing everything superfluous, made the eyes smart. It was cold and
dark. The officers were hurriedly drinking tea and breakfasting, the
soldiers, munching biscuit and beating a tattoo with their feet to warm
themselves, gathering round the fires throwing into the flames the
remains of sheds, chairs, tables, wheels, tubs, and everything that they
did not want or could not carry away with them. Austrian column guides
were moving in and out among the Russian troops and served as heralds of
the advance. As soon as an Austrian officer showed himself near a
commanding officer's quarters, the regiment began to move: the soldiers
ran from the fires, thrust their pipes into their boots, their bags into
the carts, got their muskets ready, and formed rank. The officers
buttoned up their coats, buckled on their swords and pouches, and moved
along the ranks shouting. The train drivers and orderlies harnessed and
packed the wagons and tied on the loads. The adjutants and battalion and
regimental commanders mounted, crossed themselves, gave final
instructions, orders, and commissions to the baggage men who remained
behind, and the monotonous tramp of thousands of feet resounded. The
column moved forward without knowing where and unable, from the masses
around them, the smoke and the increasing fog, to see either the place
they were leaving or that to which they were going.

A soldier on the march is hemmed in and borne along by his regiment as
much as a sailor is by his ship. However far he has walked, whatever
strange, unknown, and dangerous places he reaches, just as a sailor is
always surrounded by the same decks, masts, and rigging of his ship, so
the soldier always has around him the same comrades, the same ranks, the
same sergeant major Ivan Mitrich, the same company dog Jack, and the
same commanders. The sailor rarely cares to know the latitude in which
his ship is sailing, but on the day of battle--heaven knows how and
whence--a stern note of which all are conscious sounds in the moral
atmosphere of an army, announcing the approach of something decisive and
solemn, and awakening in the men an unusual curiosity. On the day of
battle the soldiers excitedly try to get beyond the interests of their
regiment, they listen intently, look about, and eagerly ask concerning
what is going on around them.

The fog had grown so dense that though it was growing light they could
not see ten paces ahead. Bushes looked like gigantic trees and level
ground like cliffs and slopes. Anywhere, on any side, one might
encounter an enemy invisible ten paces off. But the columns advanced for
a long time, always in the same fog, descending and ascending hills,
avoiding gardens and enclosures, going over new and unknown ground, and
nowhere encountering the enemy. On the contrary, the soldiers became
aware that in front, behind, and on all sides, other Russian columns
were moving in the same direction. Every soldier felt glad to know that
to the unknown place where he was going, many more of our men were going
too.

"There now, the Kurskies have also gone past," was being said in the
ranks.

"It's wonderful what a lot of our troops have gathered, lads! Last night
I looked at the campfires and there was no end of them. A regular
Moscow!"

Though none of the column commanders rode up to the ranks or talked to
the men (the commanders, as we saw at the council of war, were out of
humor and dissatisfied with the affair, and so did not exert themselves
to cheer the men but merely carried out the orders), yet the troops
marched gaily, as they always do when going into action, especially to
an attack. But when they had marched for about an hour in the dense fog,
the greater part of the men had to halt and an unpleasant consciousness
of some dislocation and blunder spread through the ranks. How such a
consciousness is communicated is very difficult to define, but it
certainly is communicated very surely, and flows rapidly, imperceptibly,
and irrepressibly, as water does in a creek. Had the Russian army been
alone without any allies, it might perhaps have been a long time before
this consciousness of mismanagement became a general conviction, but as
it was, the disorder was readily and naturally attributed to the stupid
Germans, and everyone was convinced that a dangerous muddle had been
occasioned by the sausage eaters.

"Why have we stopped? Is the way blocked? Or have we already come up
against the French?"

"No, one can't hear them. They'd be firing if we had."

"They were in a hurry enough to start us, and now here we stand in the
middle of a field without rhyme or reason. It's all those damned
Germans' muddling! What stupid devils!"

"Yes, I'd send them on in front, but no fear, they're crowding up
behind. And now here we stand hungry."

"I say, shall we soon be clear? They say the cavalry are blocking the
way," said an officer.

"Ah, those damned Germans! They don't know their own country!" said
another.

"What division are you?" shouted an adjutant, riding up.

"The Eighteenth."

"Then why are you here? You should have gone on long ago, now you won't
get there till evening."

"What stupid orders! They don't themselves know what they are doing!"
said the officer and rode off.

Then a general rode past shouting something angrily, not in Russian.

"Tafa-lafa! But what he's jabbering no one can make out," said a
soldier, mimicking the general who had ridden away. "I'd shoot them, the
scoundrels!"

"We were ordered to be at the place before nine, but we haven't got
halfway. Fine orders!" was being repeated on different sides.

And the feeling of energy with which the troops had started began to
turn into vexation and anger at the stupid arrangements and at the
Germans.

The cause of the confusion was that while the Austrian cavalry was
moving toward our left flank, the higher command found that our center
was too far separated from our right flank and the cavalry were all
ordered to turn back to the right. Several thousand cavalry crossed in
front of the infantry, who had to wait.

At the front an altercation occurred between an Austrian guide and a
Russian general. The general shouted a demand that the cavalry should be
halted, the Austrian argued that not he, but the higher command, was to
blame. The troops meanwhile stood growing listless and dispirited. After
an hour's delay they at last moved on, descending the hill. The fog that
was dispersing on the hill lay still more densely below, where they were
descending. In front in the fog a shot was heard and then another, at
first irregularly at varying intervals--trata... tat--and then more and
more regularly and rapidly, and the action at the Goldbach Stream began.

Not expecting to come on the enemy down by the stream, and having
stumbled on him in the fog, hearing no encouraging word from their
commanders, and with a consciousness of being too late spreading through
the ranks, and above all being unable to see anything in front or around
them in the thick fog, the Russians exchanged shots with the enemy
lazily and advanced and again halted, receiving no timely orders from
the officers or adjutants who wandered about in the fog in those unknown
surroundings unable to find their own regiments. In this way the action
began for the first, second, and third columns, which had gone down into
the valley. The fourth column, with which Kutuzov was, stood on the
Pratzen Heights.

Below, where the fight was beginning, there was still thick fog; on the
higher ground it was clearing, but nothing could be seen of what was
going on in front. Whether all the enemy forces were, as we supposed,
six miles away, or whether they were near by in that sea of mist, no one
knew till after eight o'clock.

It was nine o'clock in the morning. The fog lay unbroken like a sea down
below, but higher up at the village of Schlappanitz where Napoleon stood
with his marshals around him, it was quite light. Above him was a clear
blue sky, and the sun's vast orb quivered like a huge hollow, crimson
float on the surface of that milky sea of mist. The whole French army,
and even Napoleon himself with his staff, were not on the far side of
the streams and hollows of Sokolnitz and Schlappanitz beyond which we
intended to take up our position and begin the action, but were on this
side, so close to our own forces that Napoleon with the naked eye could
distinguish a mounted man from one on foot. Napoleon, in the blue cloak
which he had worn on his Italian campaign, sat on his small gray Arab
horse a little in front of his marshals. He gazed silently at the hills
which seemed to rise out of the sea of mist and on which the Russian
troops were moving in the distance, and he listened to the sounds of
firing in the valley. Not a single muscle of his face--which in those
days was still thin--moved. His gleaming eyes were fixed intently on one
spot. His predictions were being justified. Part of the Russian force
had already descended into the valley toward the ponds and lakes and
part were leaving these Pratzen Heights which he intended to attack and
regarded as the key to the position. He saw over the mist that in a
hollow between two hills near the village of Pratzen, the Russian
columns, their bayonets glittering, were moving continuously in one
direction toward the valley and disappearing one after another into the
mist. From information he had received the evening before, from the
sound of wheels and footsteps heard by the outposts during the night, by
the disorderly movement of the Russian columns, and from all
indications, he saw clearly that the allies believed him to be far away
in front of them, and that the columns moving near Pratzen constituted
the center of the Russian army, and that that center was already
sufficiently weakened to be successfully attacked. But still he did not
begin the engagement.

Today was a great day for him--the anniversary of his coronation. Before
dawn he had slept for a few hours, and refreshed, vigorous, and in good
spirits, he mounted his horse and rode out into the field in that happy
mood in which everything seems possible and everything succeeds. He sat
motionless, looking at the heights visible above the mist, and his cold
face wore that special look of confident, self-complacent happiness that
one sees on the face of a boy happily in love. The marshals stood behind
him not venturing to distract his attention. He looked now at the
Pratzen Heights, now at the sun floating up out of the mist.

When the sun had entirely emerged from the fog, and fields and mist were
aglow with dazzling light--as if he had only awaited this to begin the
action--he drew the glove from his shapely white hand, made a sign with
it to the marshals, and ordered the action to begin. The marshals,
accompanied by adjutants, galloped off in different directions, and a
few minutes later the chief forces of the French army moved rapidly
toward those Pratzen Heights which were being more and more denuded by
Russian troops moving down the valley to their left.




CHAPTER XV

At eight o'clock Kutuzov rode to Pratzen at the head of the fourth
column, Miloradovich's, the one that was to take the place of
Przebyszewski's and Langeron's columns which had already gone down into
the valley. He greeted the men of the foremost regiment and gave them
the order to march, thereby indicating that he intended to lead that
column himself. When he had reached the village of Pratzen he halted.
Prince Andrew was behind, among the immense number forming the
commander-in-chief's suite. He was in a state of suppressed excitement
and irritation, though controlledly calm as a man is at the approach of
a long-awaited moment. He was firmly convinced that this was the day of
his Toulon, or his bridge of Arcola. How it would come about he did not
know, but he felt sure it would do so. The locality and the position of
our troops were known to him as far as they could be known to anyone in
our army. His own strategic plan, which obviously could not now be
carried out, was forgotten. Now, entering into Weyrother's plan, Prince
Andrew considered possible contingencies and formed new projects such as
might call for his rapidity of perception and decision.

To the left down below in the mist, the musketry fire of unseen forces
could be heard. It was there Prince Andrew thought the fight would
concentrate. "There we shall encounter difficulties, and there," thought
he, "I shall be sent with a brigade or division, and there, standard in
hand, I shall go forward and break whatever is in front of me."

He could not look calmly at the standards of the passing battalions.
Seeing them he kept thinking, "That may be the very standard with which
I shall lead the army."

In the morning all that was left of the night mist on the heights was a
hoar frost now turning to dew, but in the valleys it still lay like a
milk-white sea. Nothing was visible in the valley to the left into which
our troops had descended and from whence came the sounds of firing.
Above the heights was the dark clear sky, and to the right the vast orb
of the sun. In front, far off on the farther shore of that sea of mist,
some wooded hills were discernible, and it was there the enemy probably
was, for something could be descried. On the right the Guards were
entering the misty region with a sound of hoofs and wheels and now and
then a gleam of bayonets; to the left beyond the village similar masses
of cavalry came up and disappeared in the sea of mist. In front and
behind moved infantry. The commander-in-chief was standing at the end of
the village letting the troops pass by him. That morning Kutuzov seemed
worn and irritable. The infantry passing before him came to a halt
without any command being given, apparently obstructed by something in
front.

"Do order them to form into battalion columns and go round the village!"
he said angrily to a general who had ridden up. "Don't you understand,
your excellency, my dear sir, that you must not defile through narrow
village streets when we are marching against the enemy?"

"I intended to re-form them beyond the village, your excellency,"
answered the general.

Kutuzov laughed bitterly.

"You'll make a fine thing of it, deploying in sight of the enemy! Very
fine!"

"The enemy is still far away, your excellency. According to the
dispositions..."

"The dispositions!" exclaimed Kutuzov bitterly. "Who told you that?...
Kindly do as you are ordered."

"Yes, sir."

"My dear fellow," Nesvitski whispered to Prince Andrew, "the old man is
as surly as a dog."

An Austrian officer in a white uniform with green plumes in his hat
galloped up to Kutuzov and asked in the Emperor's name had the fourth
column advanced into action.

Kutuzov turned round without answering and his eye happened to fall upon
Prince Andrew, who was beside him. Seeing him, Kutuzov's malevolent and
caustic expression softened, as if admitting that what was being done
was not his adjutant's fault, and still not answering the Austrian
adjutant, he addressed Bolkonski.

"Go, my dear fellow, and see whether the third division has passed the
village. Tell it to stop and await my orders."

Hardly had Prince Andrew started than he stopped him.

"And ask whether sharpshooters have been posted," he added. "What are
they doing? What are they doing?" he murmured to himself, still not
replying to the Austrian.

Prince Andrew galloped off to execute the order.

Overtaking the battalions that continued to advance, he stopped the
third division and convinced himself that there really were no
sharpshooters in front of our columns. The colonel at the head of the
regiment was much surprised at the commander-in-chief's order to throw
out skirmishers. He had felt perfectly sure that there were other troops
in front of him and that the enemy must be at least six miles away.
There was really nothing to be seen in front except a barren descent
hidden by dense mist. Having given orders in the commander-in-chief's
name to rectify this omission, Prince Andrew galloped back. Kutuzov
still in the same place, his stout body resting heavily in the saddle
with the lassitude of age, sat yawning wearily with closed eyes. The
troops were no longer moving, but stood with the butts of their muskets
on the ground.

"All right, all right!" he said to Prince Andrew, and turned to a
general who, watch in hand, was saying it was time they started as all
the left-flank columns had already descended.

"Plenty of time, your excellency," muttered Kutuzov in the midst of a
yawn. "Plenty of time," he repeated.

Just then at a distance behind Kutuzov was heard the sound of regiments
saluting, and this sound rapidly came nearer along the whole extended
line of the advancing Russian columns. Evidently the person they were
greeting was riding quickly. When the soldiers of the regiment in front
of which Kutuzov was standing began to shout, he rode a little to one
side and looked round with a frown. Along the road from Pratzen galloped
what looked like a squadron of horsemen in various uniforms. Two of them
rode side by side in front, at full gallop. One in a black uniform with
white plumes in his hat rode a bobtailed chestnut horse, the other who
was in a white uniform rode a black one. These were the two Emperors
followed by their suites. Kutuzov, affecting the manners of an old
soldier at the front, gave the command "Attention!" and rode up to the
Emperors with a salute. His whole appearance and manner were suddenly
transformed. He put on the air of a subordinate who obeys without
reasoning. With an affectation of respect which evidently struck
Alexander unpleasantly, he rode up and saluted.

This unpleasant impression merely flitted over the young and happy face
of the Emperor like a cloud of haze across a clear sky and vanished.
After his illness he looked rather thinner that day than on the field of
Olmutz where Bolkonski had seen him for the first time abroad, but there
was still the same bewitching combination of majesty and mildness in his
fine gray eyes, and on his delicate lips the same capacity for varying
expression and the same prevalent appearance of goodhearted innocent
youth.

At the Olmutz review he had seemed more majestic; here he seemed
brighter and more energetic. He was slightly flushed after galloping two
miles, and reining in his horse he sighed restfully and looked round at
the faces of his suite, young and animated as his own. Czartoryski,
Novosiltsev, Prince Volkonsky, Strogonov, and the others, all richly
dressed gay young men on splendid, well-groomed, fresh, only slightly
heated horses, exchanging remarks and smiling, had stopped behind the
Emperor. The Emperor Francis, a rosy, long faced young man, sat very
erect on his handsome black horse, looking about him in a leisurely and
preoccupied manner. He beckoned to one of his white adjutants and asked
some question--"Most likely he is asking at what o'clock they started,"
thought Prince Andrew, watching his old acquaintance with a smile he
could not repress as he recalled his reception at Brunn. In the
Emperors' suite were the picked young orderly officers of the Guard and
line regiments, Russian and Austrian. Among them were grooms leading the
Tsar's beautiful relay horses covered with embroidered cloths.

As when a window is opened a whiff of fresh air from the fields enters a
stuffy room, so a whiff of youthfulness, energy, and confidence of
success reached Kutuzov's cheerless staff with the galloping advent of
all these brilliant young men.

"Why aren't you beginning, Michael Ilarionovich?" said the Emperor
Alexander hurriedly to Kutuzov, glancing courteously at the same time at
the Emperor Francis.

"I am waiting, Your Majesty," answered Kutuzov, bending forward
respectfully.

The Emperor, frowning slightly, bent his ear forward as if he had not
quite heard.

"Waiting, Your Majesty," repeated Kutuzov. (Prince Andrew noted that
Kutuzov's upper lip twitched unnaturally as he said the word "waiting.")
"Not all the columns have formed up yet, Your Majesty."

The Tsar heard but obviously did not like the reply; he shrugged his
rather round shoulders and glanced at Novosiltsev who was near him, as
if complaining of Kutuzov.

"You know, Michael Ilarionovich, we are not on the Empress' Field where
a parade does not begin till all the troops are assembled," said the
Tsar with another glance at the Emperor Francis, as if inviting him if
not to join in at least to listen to what he was saying. But the Emperor
Francis continued to look about him and did not listen.

"That is just why I do not begin, sire," said Kutuzov in a resounding
voice, apparently to preclude the possibility of not being heard, and
again something in his face twitched--"That is just why I do not begin,
sire, because we are not on parade and not on the Empress' Field," said
clearly and distinctly.

In the Emperor's suite all exchanged rapid looks that expressed
dissatisfaction and reproach. "Old though he may be, he should not, he
certainly should not, speak like that," their glances seemed to say.

The Tsar looked intently and observantly into Kutuzov's eye waiting to
hear whether he would say anything more. But Kutuzov, with respectfully
bowed head, seemed also to be waiting. The silence lasted for about a
minute.

"However, if you command it, Your Majesty," said Kutuzov, lifting his
head and again assuming his former tone of a dull, unreasoning, but
submissive general.

He touched his horse and having called Miloradovich, the commander of
the column, gave him the order to advance.

The troops again began to move, and two battalions of the Novgorod and
one of the Apsheron regiment went forward past the Emperor.

As this Apsheron battalion marched by, the red-faced Miloradovich,
without his greatcoat, with his Orders on his breast and an enormous
tuft of plumes in his cocked hat worn on one side with its corners front
and back, galloped strenuously forward, and with a dashing salute reined
in his horse before the Emperor.

"God be with you, general!" said the Emperor.

"Ma foi, sire, nous ferons ce qui sera dans notre possibilite, sire," *
he answered gaily, raising nevertheless ironic smiles among the
gentlemen of the Tsar's suite by his poor French.


* "Indeed, Sire, we shall do everything it is possible to do, Sire."

Miloradovich wheeled his horse sharply and stationed himself a little
behind the Emperor. The Apsheron men, excited by the Tsar's presence,
passed in step before the Emperors and their suites at a bold, brisk
pace.

"Lads!" shouted Miloradovich in a loud, self-confident, and cheery
voice, obviously so elated by the sound of firing, by the prospect of
battle, and by the sight of the gallant Apsherons, his comrades in
Suvorov's time, now passing so gallantly before the Emperors, that he
forgot the sovereigns' presence. "Lads, it's not the first village
you've had to take," cried he.

"Glad to do our best!" shouted the soldiers.

The Emperor's horse started at the sudden cry. This horse that had
carried the sovereign at reviews in Russia bore him also here on the
field of Austerlitz, enduring the heedless blows of his left foot and
pricking its ears at the sound of shots just as it had done on the
Empress' Field, not understanding the significance of the firing, nor of
the nearness of the Emperor Francis' black cob, nor of all that was
being said, thought, and felt that day by its rider.

The Emperor turned with a smile to one of his followers and made a
remark to him, pointing to the gallant Apsherons.




CHAPTER XVI

Kutuzov accompanied by his adjutants rode at a walking pace behind the
carabineers.

When he had gone less than half a mile in the rear of the column he
stopped at a solitary, deserted house that had probably once been an
inn, where two roads parted. Both of them led downhill and troops were
marching along both.

The fog had begun to clear and enemy troops were already dimly visible
about a mile and a half off on the opposite heights. Down below, on the
left, the firing became more distinct. Kutuzov had stopped and was
speaking to an Austrian general. Prince Andrew, who was a little behind
looking at them, turned to an adjutant to ask him for a field glass.

"Look, look!" said this adjutant, looking not at the troops in the
distance, but down the hill before him. "It's the French!"

The two generals and the adjutant took hold of the field glass, trying
to snatch it from one another. The expression on all their faces
suddenly changed to one of horror. The French were supposed to be a mile
and a half away, but had suddenly and unexpectedly appeared just in
front of us.

"It's the enemy?... No!... Yes, see it is!... for certain.... But how is
that?" said different voices.

With the naked eye Prince Andrew saw below them to the right, not more
than five hundred paces from where Kutuzov was standing, a dense French
column coming up to meet the Apsherons.

"Here it is! The decisive moment has arrived. My turn has come," thought
Prince Andrew, and striking his horse he rode up to Kutuzov.

"The Apsherons must be stopped, your excellency," cried he. But at that
very instant a cloud of smoke spread all round, firing was heard quite
close at hand, and a voice of naive terror barely two steps from Prince
Andrew shouted, "Brothers! All's lost!" And at this as if at a command,
everyone began to run.

Confused and ever-increasing crowds were running back to where five
minutes before the troops had passed the Emperors. Not only would it
have been difficult to stop that crowd, it was even impossible not to be
carried back with it oneself. Bolkonski only tried not to lose touch
with it, and looked around bewildered and unable to grasp what was
happening in front of him. Nesvitski with an angry face, red and unlike
himself, was shouting to Kutuzov that if he did not ride away at once he
would certainly be taken prisoner. Kutuzov remained in the same place
and without answering drew out a handkerchief. Blood was flowing from
his cheek. Prince Andrew forced his way to him.

"You are wounded?" he asked, hardly able to master the trembling of his
lower jaw.

"The wound is not here, it is there!" said Kutuzov, pressing the
handkerchief to his wounded cheek and pointing to the fleeing soldiers.
"Stop them!" he shouted, and at the same moment, probably realizing that
it was impossible to stop them, spurred his horse and rode to the right.

A fresh wave of the flying mob caught him and bore him back with it.

The troops were running in such a dense mass that once surrounded by
them it was difficult to get out again. One was shouting, "Get on! Why
are you hindering us?" Another in the same place turned round and fired
in the air; a third was striking the horse Kutuzov himself rode. Having
by a great effort got away to the left from that flood of men, Kutuzov,
with his suite diminished by more than half, rode toward a sound of
artillery fire near by. Having forced his way out of the crowd of
fugitives, Prince Andrew, trying to keep near Kutuzov, saw on the slope
of the hill amid the smoke a Russian battery that was still firing and
Frenchmen running toward it. Higher up stood some Russian infantry,
neither moving forward to protect the battery nor backward with the
fleeing crowd. A mounted general separated himself from the infantry and
approached Kutuzov. Of Kutuzov's suite only four remained. They were all
pale and exchanged looks in silence.

"Stop those wretches!" gasped Kutuzov to the regimental commander,
pointing to the flying soldiers; but at that instant, as if to punish
him for those words, bullets flew hissing across the regiment and across
Kutuzov's suite like a flock of little birds.

The French had attacked the battery and, seeing Kutuzov, were firing at
him. After this volley the regimental commander clutched at his leg;
several soldiers fell, and a second lieutenant who was holding the flag
let it fall from his hands. It swayed and fell, but caught on the
muskets of the nearest soldiers. The soldiers started firing without
orders.

"Oh! Oh! Oh!" groaned Kutuzov despairingly and looked around....
"Bolkonski!" he whispered, his voice trembling from a consciousness of
the feebleness of age, "Bolkonski!" he whispered, pointing to the
disordered battalion and at the enemy, "what's that?"

But before he had finished speaking, Prince Andrew, feeling tears of
shame and anger choking him, had already leapt from his horse and run to
the standard.

"Forward, lads!" he shouted in a voice piercing as a child's.

"Here it is!" thought he, seizing the staff of the standard and hearing
with pleasure the whistle of bullets evidently aimed at him. Several
soldiers fell.

"Hurrah!" shouted Prince Andrew, and, scarcely able to hold up the heavy
standard, he ran forward with full confidence that the whole battalion
would follow him.

And really he only ran a few steps alone. One soldier moved and then
another and soon the whole battalion ran forward shouting "Hurrah!" and
overtook him. A sergeant of the battalion ran up and took the flag that
was swaying from its weight in Prince Andrew's hands, but he was
immediately killed. Prince Andrew again seized the standard and,
dragging it by the staff, ran on with the battalion. In front he saw our
artillerymen, some of whom were fighting, while others, having abandoned
their guns, were running toward him. He also saw French infantry
soldiers who were seizing the artillery horses and turning the guns
round. Prince Andrew and the battalion were already within twenty paces
of the cannon. He heard the whistle of bullets above him unceasingly and
to right and left of him soldiers continually groaned and dropped. But
he did not look at them: he looked only at what was going on in front of
him--at the battery. He now saw clearly the figure of a red-haired
gunner with his shako knocked awry, pulling one end of a mop while a
French soldier tugged at the other. He could distinctly see the
distraught yet angry expression on the faces of these two men, who
evidently did not realize what they were doing.

"What are they about?" thought Prince Andrew as he gazed at them. "Why
doesn't the red-haired gunner run away as he is unarmed? Why doesn't the
Frenchman stab him? He will not get away before the Frenchman remembers
his bayonet and stabs him...."

And really another French soldier, trailing his musket, ran up to the
struggling men, and the fate of the red-haired gunner, who had
triumphantly secured the mop and still did not realize what awaited him,
was about to be decided. But Prince Andrew did not see how it ended. It
seemed to him as though one of the soldiers near him hit him on the head
with the full swing of a bludgeon. It hurt a little, but the worst of it
was that the pain distracted him and prevented his seeing what he had
been looking at.

"What's this? Am I falling? My legs are giving way," thought he, and
fell on his back. He opened his eyes, hoping to see how the struggle of
the Frenchmen with the gunners ended, whether the red-haired gunner had
been killed or not and whether the cannon had been captured or saved.
But he saw nothing. Above him there was now nothing but the sky--the
lofty sky, not clear yet still immeasurably lofty, with gray clouds
gliding slowly across it. "How quiet, peaceful, and solemn; not at all
as I ran," thought Prince Andrew--"not as we ran, shouting and fighting,
not at all as the gunner and the Frenchman with frightened and angry
faces struggled for the mop: how differently do those clouds glide
across that lofty infinite sky! How was it I did not see that lofty sky
before? And how happy I am to have found it at last! Yes! All is vanity,
all falsehood, except that infinite sky. There is nothing, nothing, but
that. But even it does not exist, there is nothing but quiet and peace.
Thank God!..."




CHAPTER XVII

On our right flank commanded by Bagration, at nine o'clock the battle
had not yet begun. Not wishing to agree to Dolgorukov's demand to
commence the action, and wishing to avert responsibility from himself,
Prince Bagration proposed to Dolgorukov to send to inquire of the
commander-in-chief. Bagration knew that as the distance between the two
flanks was more than six miles, even if the messenger were not killed
(which he very likely would be), and found the commander-in-chief (which
would be very difficult), he would not be able to get back before
evening.

Bagration cast his large, expressionless, sleepy eyes round his suite,
and the boyish face Rostov, breathless with excitement and hope, was the
first to catch his eye. He sent him.

"And if I should meet His Majesty before I meet the commander-in-chief,
your excellency?" said Rostov, with his hand to his cap.

"You can give the message to His Majesty," said Dolgorukov, hurriedly
interrupting Bagration.

On being relieved from picket duty Rostov had managed to get a few
hours' sleep before morning and felt cheerful, bold, and resolute, with
elasticity of movement, faith in his good fortune, and generally in that
state of mind which makes everything seem possible, pleasant, and easy.

All his wishes were being fulfilled that morning: there was to be a
general engagement in which he was taking part, more than that, he was
orderly to the bravest general, and still more, he was going with a
message to Kutuzov, perhaps even to the sovereign himself. The morning
was bright, he had a good horse under him, and his heart was full of joy
and happiness. On receiving the order he gave his horse the rein and
galloped along the line. At first he rode along the line of Bagration's
troops, which had not yet advanced into action but were standing
motionless; then he came to the region occupied by Uvarov's cavalry and
here he noticed a stir and signs of preparation for battle; having
passed Uvarov's cavalry he clearly heard the sound of cannon and
musketry ahead of him. The firing grew louder and louder.

In the fresh morning air were now heard, not two or three musket shots
at irregular intervals as before, followed by one or two cannon shots,
but a roll of volleys of musketry from the slopes of the hill before
Pratzen, interrupted by such frequent reports of cannon that sometimes
several of them were not separated from one another but merged into a
general roar.

He could see puffs of musketry smoke that seemed to chase one another
down the hillsides, and clouds of cannon smoke rolling, spreading, and
mingling with one another. He could also, by the gleam of bayonets
visible through the smoke, make out moving masses of infantry and narrow
lines of artillery with green caissons.

Rostov stopped his horse for a moment on a hillock to see what was going
on, but strain his attention as he would he could not understand or make
out anything of what was happening: there in the smoke men of some sort
were moving about, in front and behind moved lines of troops; but why,
whither, and who they were, it was impossible to make out. These sights
and sounds had no depressing or intimidating effect on him; on the
contrary, they stimulated his energy and determination.

"Go on! Go on! Give it them!" he mentally exclaimed at these sounds, and
again proceeded to gallop along the line, penetrating farther and
farther into the region where the army was already in action.

"How it will be there I don't know, but all will be well!" thought
Rostov.

After passing some Austrian troops he noticed that the next part of the
line (the Guards) was already in action.

"So much the better! I shall see it close," he thought.

He was riding almost along the front line. A handful of men came
galloping toward him. They were our uhlans who with disordered ranks
were returning from the attack. Rostov got out of their way,
involuntarily noticed that one of them was bleeding, and galloped on.

"That is no business of mine," he thought. He had not ridden many
hundred yards after that before he saw to his left, across the whole
width of the field, an enormous mass of cavalry in brilliant white
uniforms, mounted on black horses, trotting straight toward him and
across his path. Rostov put his horse to full gallop to get out of the
way of these men, and he would have got clear had they continued at the
same speed, but they kept increasing their pace, so that some of the
horses were already galloping. Rostov heard the thud of their hoofs and
the jingle of their weapons and saw their horses, their figures, and
even their faces, more and more distinctly. They were our Horse Guards,
advancing to attack the French cavalry that was coming to meet them.

The Horse Guards were galloping, but still holding in their horses.
Rostov could already see their faces and heard the command: "Charge!"
shouted by an officer who was urging his thoroughbred to full speed.
Rostov, fearing to be crushed or swept into the attack on the French,
galloped along the front as hard as his horse could go, but still was
not in time to avoid them.

The last of the Horse Guards, a huge pockmarked fellow, frowned angrily
on seeing Rostov before him, with whom he would inevitably collide. This
Guardsman would certainly have bowled Rostov and his Bedouin over
(Rostov felt himself quite tiny and weak compared to these gigantic men
and horses) had it not occurred to Rostov to flourish his whip before
the eyes of the Guardsman's horse. The heavy black horse, sixteen hands
high, shied, throwing back its ears; but the pockmarked Guardsman drove
his huge spurs in violently, and the horse, flourishing its tail and
extending its neck, galloped on yet faster. Hardly had the Horse Guards
passed Rostov before he heard them shout, "Hurrah!" and looking back saw
that their foremost ranks were mixed up with some foreign cavalry with
red epaulets, probably French. He could see nothing more, for
immediately afterwards cannon began firing from somewhere and smoke
enveloped everything.

At that moment, as the Horse Guards, having passed him, disappeared in
the smoke, Rostov hesitated whether to gallop after them or to go where
he was sent. This was the brilliant charge of the Horse Guards that
amazed the French themselves. Rostov was horrified to hear later that of
all that mass of huge and handsome men, of all those brilliant, rich
youths, officers and cadets, who had galloped past him on their
thousand-ruble horses, only eighteen were left after the charge.

"Why should I envy them? My chance is not lost, and maybe I shall see
the Emperor immediately!" thought Rostov and galloped on.

When he came level with the Foot Guards he noticed that about them and
around them cannon balls were flying, of which he was aware not so much
because he heard their sound as because he saw uneasiness on the
soldiers' faces and unnatural warlike solemnity on those of the
officers.

Passing behind one of the lines of a regiment of Foot Guards he heard a
voice calling him by name.

"Rostov!"

"What?" he answered, not recognizing Boris.

"I say, we've been in the front line! Our regiment attacked!" said Boris
with the happy smile seen on the faces of young men who have been under
fire for the first time.

Rostov stopped.

"Have you?" he said. "Well, how did it go?"

"We drove them back!" said Boris with animation, growing talkative. "Can
you imagine it?" and he began describing how the Guards, having taken up
their position and seeing troops before them, thought they were
Austrians, and all at once discovered from the cannon balls discharged
by those troops that they were themselves in the front line and had
unexpectedly to go into action. Rostov without hearing Boris to the end
spurred his horse.

"Where are you off to?" asked Boris.

"With a message to His Majesty."

"There he is!" said Boris, thinking Rostov had said "His Highness," and
pointing to the Grand Duke who with his high shoulders and frowning
brows stood a hundred paces away from them in his helmet and Horse
Guards' jacket, shouting something to a pale, white uniformed Austrian
officer.

"But that's the Grand Duke, and I want the commander-in-chief or the
Emperor," said Rostov, and was about to spur his horse.

"Count! Count!" shouted Berg who ran up from the other side as eager as
Boris. "Count! I am wounded in my right hand" (and he showed his
bleeding hand with a handkerchief tied round it) "and I remained at the
front. I held my sword in my left hand, Count. All our family--the von
Bergs--have been knights!"

He said something more, but Rostov did not wait to hear it and rode
away.

Having passed the Guards and traversed an empty space, Rostov, to avoid
again getting in front of the first line as he had done when the Horse
Guards charged, followed the line of reserves, going far round the place
where the hottest musket fire and cannonade were heard. Suddenly he
heard musket fire quite close in front of him and behind our troops,
where he could never have expected the enemy to be.

"What can it be?" he thought. "The enemy in the rear of our army?
Impossible!" And suddenly he was seized by a panic of fear for himself
and for the issue of the whole battle. "But be that what it may," he
reflected, "there is no riding round it now. I must look for the
commander in chief here, and if all is lost it is for me to perish with
the rest."

The foreboding of evil that had suddenly come over Rostov was more and
more confirmed the farther he rode into the region behind the village of
Pratzen, which was full of troops of all kinds.

"What does it mean? What is it? Whom are they firing at? Who is firing?"
Rostov kept asking as he came up to Russian and Austrian soldiers
running in confused crowds across his path.

"The devil knows! They've killed everybody! It's all up now!" he was
told in Russian, German, and Czech by the crowd of fugitives who
understood what was happening as little as he did.

"Kill the Germans!" shouted one.

"May the devil take them--the traitors!"

"Zum Henker diese Russen!" * muttered a German.


* "Hang these Russians!"

Several wounded men passed along the road, and words of abuse, screams,
and groans mingled in a general hubbub, then the firing died down.
Rostov learned later that Russian and Austrian soldiers had been firing
at one another.

"My God! What does it all mean?" thought he. "And here, where at any
moment the Emperor may see them.... But no, these must be only a handful
of scoundrels. It will soon be over, it can't be that, it can't be! Only
to get past them quicker, quicker!"

The idea of defeat and flight could not enter Rostov's head. Though he
saw French cannon and French troops on the Pratzen Heights just where he
had been ordered to look for the commander-in-chief, he could not, did
not wish to, believe that.




CHAPTER XVIII

Rostov had been ordered to look for Kutuzov and the Emperor near the
village of Pratzen. But neither they nor a single commanding officer
were there, only disorganized crowds of troops of various kinds. He
urged on his already weary horse to get quickly past these crowds, but
the farther he went the more disorganized they were. The highroad on
which he had come out was thronged with caleches, carriages of all
sorts, and Russian and Austrian soldiers of all arms, some wounded and
some not. This whole mass droned and jostled in confusion under the
dismal influence of cannon balls flying from the French batteries
stationed on the Pratzen Heights.

"Where is the Emperor? Where is Kutuzov?" Rostov kept asking everyone he
could stop, but got no answer from anyone.

At last seizing a soldier by his collar he forced him to answer.

"Eh, brother! They've all bolted long ago!" said the soldier, laughing
for some reason and shaking himself free.

Having left that soldier who was evidently drunk, Rostov stopped the
horse of a batman or groom of some important personage and began to
question him. The man announced that the Tsar had been driven in a
carriage at full speed about an hour before along that very road and
that he was dangerously wounded.

"It can't be!" said Rostov. "It must have been someone else."

"I saw him myself," replied the man with a self-confident smile of
derision. "I ought to know the Emperor by now, after the times I've seen
him in Petersburg. I saw him just as I see you.... There he sat in the
carriage as pale as anything. How they made the four black horses fly!
Gracious me, they did rattle past! It's time I knew the Imperial horses
and Ilya Ivanych. I don't think Ilya drives anyone except the Tsar!"

Rostov let go of the horse and was about to ride on, when a wounded
officer passing by addressed him:

"Who is it you want?" he asked. "The commander-in-chief? He was killed
by a cannon ball--struck in the breast before our regiment."

"Not killed--wounded!" another officer corrected him.

"Who? Kutuzov?" asked Rostov.

"Not Kutuzov, but what's his name--well, never mind... there are not
many left alive. Go that way, to that village, all the commanders are
there," said the officer, pointing to the village of Hosjeradek, and he
walked on.

Rostov rode on at a footpace not knowing why or to whom he was now
going. The Emperor was wounded, the battle lost. It was impossible to
doubt it now. Rostov rode in the direction pointed out to him, in which
he saw turrets and a church. What need to hurry? What was he now to say
to the Tsar or to Kutuzov, even if they were alive and unwounded?

"Take this road, your honor, that way you will be killed at once!" a
soldier shouted to him. "They'd kill you there!"

"Oh, what are you talking about?" said another. "Where is he to go? That
way is nearer."

Rostov considered, and then went in the direction where they said he
would be killed.

"It's all the same now. If the Emperor is wounded, am I to try to save
myself?" he thought. He rode on to the region where the greatest number
of men had perished in fleeing from Pratzen. The French had not yet
occupied that region, and the Russians--the uninjured and slightly
wounded--had left it long ago. All about the field, like heaps of manure
on well-kept plowland, lay from ten to fifteen dead and wounded to each
couple of acres. The wounded crept together in twos and threes and one
could hear their distressing screams and groans, sometimes feigned--or
so it seemed to Rostov. He put his horse to a trot to avoid seeing all
these suffering men, and he felt afraid--afraid not for his life, but
for the courage he needed and which he knew would not stand the sight of
these unfortunates.

The French, who had ceased firing at this field strewn with dead and
wounded where there was no one left to fire at, on seeing an adjutant
riding over it trained a gun on him and fired several shots. The
sensation of those terrible whistling sounds and of the corpses around
him merged in Rostov's mind into a single feeling of terror and pity for
himself. He remembered his mother's last letter. "What would she feel,"
thought he, "if she saw me here now on this field with the cannon aimed
at me?"

In the village of Hosjeradek there were Russian troops retiring from the
field of battle, who though still in some confusion were less
disordered. The French cannon did not reach there and the musketry fire
sounded far away. Here everyone clearly saw and said that the battle was
lost. No one whom Rostov asked could tell him where the Emperor or
Kutuzov was. Some said the report that the Emperor was wounded was
correct, others that it was not, and explained the false rumor that had
spread by the fact that the Emperor's carriage had really galloped from
the field of battle with the pale and terrified Ober-Hofmarschal Count
Tolstoy, who had ridden out to the battlefield with others in the
Emperor's suite. One officer told Rostov that he had seen someone from
headquarters behind the village to the left, and thither Rostov rode,
not hoping to find anyone but merely to ease his conscience. When he had
ridden about two miles and had passed the last of the Russian troops, he
saw, near a kitchen garden with a ditch round it, two men on horseback
facing the ditch. One with a white plume in his hat seemed familiar to
Rostov; the other on a beautiful chestnut horse (which Rostov fancied he
had seen before) rode up to the ditch, struck his horse with his spurs,
and giving it the rein leaped lightly over. Only a little earth crumbled
from the bank under the horse's hind hoofs. Turning the horse sharply,
he again jumped the ditch, and deferentially addressed the horseman with
the white plumes, evidently suggesting that he should do the same. The
rider, whose figure seemed familiar to Rostov and involuntarily riveted
his attention, made a gesture of refusal with his head and hand and by
that gesture Rostov instantly recognized his lamented and adored
monarch.

"But it can't be he, alone in the midst of this empty field!" thought
Rostov. At that moment Alexander turned his head and Rostov saw the
beloved features that were so deeply engraved on his memory. The Emperor
was pale, his cheeks sunken and his eyes hollow, but the charm, the
mildness of his features, was all the greater. Rostov was happy in the
assurance that the rumors about the Emperor being wounded were false. He
was happy to be seeing him. He knew that he might and even ought to go
straight to him and give the message Dolgorukov had ordered him to
deliver.

But as a youth in love trembles, is unnerved, and dares not utter the
thoughts he has dreamed of for nights, but looks around for help or a
chance of delay and flight when the longed-for moment comes and he is
alone with her, so Rostov, now that he had attained what he had longed
for more than anything else in the world, did not know how to approach
the Emperor, and a thousand reasons occurred to him why it would be
inconvenient, unseemly, and impossible to do so.

"What! It is as if I were glad of a chance to take advantage of his
being alone and despondent! A strange face may seem unpleasant or
painful to him at this moment of sorrow; besides, what can I say to him
now, when my heart fails me and my mouth feels dry at the mere sight of
him?" Not one of the innumerable speeches addressed to the Emperor that
he had composed in his imagination could he now recall. Those speeches
were intended for quite other conditions, they were for the most part to
be spoken at a moment of victory and triumph, generally when he was
dying of wounds and the sovereign had thanked him for heroic deeds, and
while dying he expressed the love his actions had proved.

"Besides how can I ask the Emperor for his instructions for the right
flank now that it is nearly four o'clock and the battle is lost? No,
certainly I must not approach him, I must not intrude on his
reflections. Better die a thousand times than risk receiving an unkind
look or bad opinion from him," Rostov decided; and sorrowfully and with
a heart full despair he rode away, continually looking back at the Tsar,
who still remained in the same attitude of indecision.

While Rostov was thus arguing with himself and riding sadly away,
Captain von Toll chanced to ride to the same spot, and seeing the
Emperor at once rode up to him, offered his services, and assisted him
to cross the ditch on foot. The Emperor, wishing to rest and feeling
unwell, sat down under an apple tree and von Toll remained beside him.
Rostov from a distance saw with envy and remorse how von Toll spoke long
and warmly to the Emperor and how the Emperor, evidently weeping,
covered his eyes with his hand and pressed von Toll's hand.

"And I might have been in his place!" thought Rostov, and hardly
restraining his tears of pity for the Emperor, he rode on in utter
despair, not knowing where to or why he was now riding.

His despair was all the greater from feeling that his own weakness was
the cause of his grief.

He might... not only might but should, have gone up to the sovereign. It
was a unique chance to show his devotion to the Emperor and he had not
made use of it.... "What have I done?" thought he. And he turned round
and galloped back to the place where he had seen the Emperor, but there
was no one beyond the ditch now. Only some carts and carriages were
passing by. From one of the drivers he learned that Kutuzov's staff were
not far off, in the village the vehicles were going to. Rostov followed
them. In front of him walked Kutuzov's groom leading horses in
horsecloths. Then came a cart, and behind that walked an old, bandy-
legged domestic serf in a peaked cap and sheepskin coat.

"Tit! I say, Tit!" said the groom.

"What?" answered the old man absent-mindedly.

"Go, Tit! Thresh a bit!"

"Oh, you fool!" said the old man, spitting angrily. Some time passed in
silence, and then the same joke was repeated.

Before five in the evening the battle had been lost at all points. More
than a hundred cannon were already in the hands of the French.

Przebyszewski and his corps had laid down their arms. Other columns
after losing half their men were retreating in disorderly confused
masses.

The remains of Langeron's and Dokhturov's mingled forces were crowding
around the dams and banks of the ponds near the village of Augesd.

After five o'clock it was only at the Augesd Dam that a hot cannonade
(delivered by the French alone) was still to be heard from numerous
batteries ranged on the slopes of the Pratzen Heights, directed at our
retreating forces.

In the rearguard, Dokhturov and others rallying some battalions kept up
a musketry fire at the French cavalry that was pursuing our troops. It
was growing dusk. On the narrow Augesd Dam where for so many years the
old miller had been accustomed to sit in his tasseled cap peacefully
angling, while his grandson, with shirt sleeves rolled up, handled the
floundering silvery fish in the watering can, on that dam over which for
so many years Moravians in shaggy caps and blue jackets had peacefully
driven their two-horse carts loaded with wheat and had returned dusty
with flour whitening their carts--on that narrow dam amid the wagons and
the cannon, under the horses' hoofs and between the wagon wh"}]
}
	